!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["react-track"]=t():e["react-track"]=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=22)}([function(e,t,n){"use strict";e.exports=n(5)},function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=r(e),s=1;s<arguments.length;s++){n=Object(arguments[s]);for(var c in n)i.call(n,c)&&(u[c]=n[c]);if(o){l=o(n);for(var p=0;p<l.length;p++)a.call(n,l[p])&&(u[l[p]]=n[l[p]])}}return u}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";function r(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n(9)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=(t.includes=function(e,t){return t.includes?t.includes(e):!!t.filter(function(t){return t===e}).length},t.values=Object.values||function(e){return Object.keys(e).map(function(t){return e[t]})},t.compose=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduceRight(function(e,t){return t(e)},e)}},t.minMap=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return Math.min.apply(Math,t.concat([e]))}},t.maxMap=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return Math.max.apply(Math,t.concat([e]))}},t.noop=function(){},t.easeOutQuint=function(e){return 1+--e*Math.pow(e,4)}),o=t.on=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return function(n){return function(r){if(r&&"function"==typeof r.addEventListener)return r.addEventListener(e,n,t),function(){return r.removeEventListener(e,n)}}}},i=t.onWindowScroll=function(e){return o("scroll",!0)(e)(window)},a=t.onScroll=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.target,r=void 0===n?window:n;return i(function(t){return(r===window||r===t.target)&&e(t)})},l=t.onScrollEnd=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.wait,r=void 0===n?100:n,o=t.target,i=void 0===o?window:o;return function(t){return a(function(n){clearTimeout(t),t=setTimeout(function(){return n.target===i?e():void 0},r)})}(0)},u=(t.onScrollStart=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.target,r=void 0===n?window:n,o=!1,i=l(function(){o=!1},{target:r}),u=a(function(t){o||(o=!0,e(t))},{target:r});return function(){u(),i()}},t.onSwipe=function(e){return function(t){return o("touchstart")(function(n){var r=n.targetTouches,i=r[0],a=i.pageX,l=i.pageY,u=o("touchend")(function(t){var n=t.changedTouches,r=n[0],o=r.pageX,i=r.pageY,s=o-a,c=Math.abs(s),p=i-l,d=Math.abs(p);if(Math.max(c,d)>20){e(c>d?s<0?"right":"left":p<0?"down":"up")}u()})(t)})(t)}},t.trackTouchesForElement=function(e){var t=[];return o("touchend")(function(e){var n=e.targetTouches;t=n})(e),function(){return t.length}}),s=t.trackOngoingMouseInteraction=function(e){var t=!1;return o("mousedown")(function(){t=!0})(e),o("mouseup")(function(){t=!1})(document.body),function(){return t}};t.hasOngoingInteraction=function(e){var t=u(e),n=s(e);return function(){return t()||n()}},t.isWhollyInView=function(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{getBoundingClientRect:function(){return{}}},n=t.getBoundingClientRect(),r=n.left,o=n.right,i=e.getBoundingClientRect(),a=i.left,l=i.right;return r>=a&&o<=l}},t.animate=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.delta,o=void 0===n?0:n,i=t.immediate,a=void 0!==i&&i,l=t.duration,u=void 0===l?500:l,s=t.easing,c=void 0===s?r:s,p=t.prop,d=void 0===p?"scrollTop":p;return new Promise(function(t,n){if(!o)return t();var r=e[d];if(a)return e[d]=r+o,t();var i=!1,l=function t(){i=!0;var r=e[d];return e.removeEventListener("touchstart",t),e[d]=r,n("Animation interupted by interaction")};e.addEventListener("touchstart",l);var s=null,p=function n(a){if(!i){s||(s=a);var l=a-s,p=c(l/u);e[d]=r+o*p,l<u?window.requestAnimationFrame(n):(e[d]=r+o,t())}};window.requestAnimationFrame(p)})}},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function o(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||C}function i(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||C}function a(){}function l(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||C}function u(e,t,n,r,o,i,a){return{$$typeof:T,type:e,key:t,ref:n,props:a,_owner:i}}function s(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function c(e,t,n,r){if(I.length){var o=I.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function p(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>I.length&&I.push(e)}function d(e,t,n,o){var i=typeof e;if("undefined"!==i&&"boolean"!==i||(e=null),null===e||"string"===i||"number"===i||"object"===i&&e.$$typeof===N)return n(o,e,""===t?"."+f(e,0):t),1;var a=0;if(t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){i=e[l];var u=t+f(i,l);a+=d(i,u,n,o)}else if("function"==typeof(u=_&&e[_]||e["@@iterator"]))for(e=u.call(e),l=0;!(i=e.next()).done;)i=i.value,u=t+f(i,l++),a+=d(i,u,n,o);else"object"===i&&(n=""+e,r("31","[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function f(e,t){return"object"==typeof e&&null!==e&&null!=e.key?s(e.key):t.toString(36)}function h(e,t){e.func.call(e.context,t,e.count++)}function g(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?m(e,r,n,b.thatReturnsArgument):null!=e&&(u.isValidElement(e)&&(e=u.cloneAndReplaceKey(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function m(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),t=c(t,i,r,o),null==e||d(e,"",g,t),p(t)}var y=n(1),v=n(6);n(7);var b=n(8),C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};o.prototype.isReactComponent={},o.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&r("85"),this.updater.enqueueSetState(this,e,t,"setState")},o.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},a.prototype=o.prototype;var k=i.prototype=new a;k.constructor=i,y(k,o.prototype),k.isPureReactComponent=!0;var E=l.prototype=new a;E.constructor=l,y(E,o.prototype),E.unstable_isAsyncReactComponent=!0,E.render=function(){return this.props.children};var w={Component:o,PureComponent:i,AsyncComponent:l},x={current:null},S=Object.prototype.hasOwnProperty,T="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,P={key:!0,ref:!0,__self:!0,__source:!0};u.createElement=function(e,t,n){var r,o={},i=null,a=null,l=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),l=void 0===t.__self?null:t.__self,s=void 0===t.__source?null:t.__source,t)S.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){for(var p=Array(c),d=0;d<c;d++)p[d]=arguments[d+2];o.children=p}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===o[r]&&(o[r]=c[r]);return u(e,i,a,l,s,x.current,o)},u.createFactory=function(e){var t=u.createElement.bind(null,e);return t.type=e,t},u.cloneAndReplaceKey=function(e,t){return u(e.type,t,e.ref,e._self,e._source,e._owner,e.props)},u.cloneElement=function(e,t,n){var r=y({},e.props),o=e.key,i=e.ref,a=e._self,l=e._source,s=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,s=x.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(p in t)S.call(t,p)&&!P.hasOwnProperty(p)&&(r[p]=void 0===t[p]&&void 0!==c?c[p]:t[p])}var p=arguments.length-2;if(1===p)r.children=n;else if(1<p){c=Array(p);for(var d=0;d<p;d++)c[d]=arguments[d+2];r.children=c}return u(e.type,o,i,a,l,s,r)},u.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===T};var _="function"==typeof Symbol&&Symbol.iterator,N="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,O=/\/+/g,I=[],A={forEach:function(e,t,n){if(null==e)return e;t=c(null,null,t,n),null==e||d(e,"",h,t),p(t)},map:function(e,t,n){if(null==e)return e;var r=[];return m(e,r,null,t,n),r},count:function(e){return null==e?0:d(e,"",b.thatReturnsNull,null)},toArray:function(e){var t=[];return m(e,t,null,b.thatReturnsArgument),t}};e.exports={Children:{map:A.map,forEach:A.forEach,count:A.count,toArray:A.toArray,only:function(e){return u.isValidElement(e)||r("143"),e}},Component:w.Component,PureComponent:w.PureComponent,unstable_AsyncComponent:w.AsyncComponent,createElement:u.createElement,cloneElement:u.cloneElement,isValidElement:u.isValidElement,createFactory:u.createFactory,version:"16.0.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:x,assign:y}}},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r,i,a,l,u){if(o(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,a,l,u],p=0;s=new Error(t.replace(/%s/g,function(){return c[p++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}var o=function(e){};e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function o(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function i(){if(_t)for(var e in Nt){var t=Nt[e],n=_t.indexOf(e);if(-1<n||r("96",e),!Ot.plugins[n]){t.extractEvents||r("97",e),Ot.plugins[n]=t,n=t.eventTypes;for(var o in n){var i=void 0,l=n[o],u=t,s=o;Ot.eventNameDispatchConfigs.hasOwnProperty(s)&&r("99",s),Ot.eventNameDispatchConfigs[s]=l;var c=l.phasedRegistrationNames;if(c){for(i in c)c.hasOwnProperty(i)&&a(c[i],u,s);i=!0}else l.registrationName?(a(l.registrationName,u,s),i=!0):i=!1;i||r("98",o,e)}}}}function a(e,t,n){Ot.registrationNameModules[e]&&r("100",e),Ot.registrationNameModules[e]=t,Ot.registrationNameDependencies[e]=t.eventTypes[n].dependencies}function l(e,t){return(e&t)===t}function u(e){for(var t;t=e._renderedComponent;)e=t;return e}function s(e,t){e=u(e),e._hostNode=t,t[Kt]=e}function c(e,t){if(!(e._flags&Vt.hasCachedChildNodes)){var n=e._renderedChildren;t=t.firstChild;var o;e:for(o in n)if(n.hasOwnProperty(o)){var i=n[o],a=u(i)._domID;if(0!==a){for(;null!==t;t=t.nextSibling){var l=t,c=a;if(l.nodeType===jt&&l.getAttribute(Wt)===""+c||l.nodeType===Bt&&l.nodeValue===" react-text: "+c+" "||l.nodeType===Bt&&l.nodeValue===" react-empty: "+c+" "){s(i,t);continue e}}r("32",a)}}e._flags|=Vt.hasCachedChildNodes}}function p(e){if(e[Kt])return e[Kt];for(var t=[];!e[Kt];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=e[Kt];if(n.tag===Ut||n.tag===Ht)return n;for(;e&&(n=e[Kt]);e=t.pop()){var r=n;t.length&&c(n,e)}return r}function d(e){if("function"==typeof e.getName)return e.getName();if("number"==typeof e.tag){if("string"==typeof(e=e.type))return e;if("function"==typeof e)return e.displayName||e.name}return null}function f(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if((t.effectTag&nn)!==tn)return 1;for(;t.return;)if(t=t.return,(t.effectTag&nn)!==tn)return 1}return t.tag===Zt?2:3}function h(e){2!==f(e)&&r("188")}function g(e){var t=e.alternate;if(!t)return t=f(e),3===t&&r("188"),1===t?null:e;for(var n=e,o=t;;){var i=n.return,a=i?i.alternate:null;if(!i||!a)break;if(i.child===a.child){for(var l=i.child;l;){if(l===n)return h(i),e;if(l===o)return h(i),t;l=l.sibling}r("188")}if(n.return!==o.return)n=i,o=a;else{l=!1;for(var u=i.child;u;){if(u===n){l=!0,n=i,o=a;break}if(u===o){l=!0,o=i,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,o=i;break}if(u===o){l=!0,o=a,n=i;break}u=u.sibling}l||r("189")}}n.alternate!==o&&r("190")}return n.tag!==Zt&&r("188"),n.stateNode.current===n?e:t}function m(e,t,n,r,o,i,a,l,u){on._hasCaughtError=!1,on._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){on._caughtError=e,on._hasCaughtError=!0}}function y(){if(on._hasRethrowError){var e=on._rethrowError;throw on._rethrowError=null,on._hasRethrowError=!1,e}}function v(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=ln.getNodeFromInstance(r),an.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function b(e){if(e=un.getInstanceFromNode(e))if("number"==typeof e.tag){sn&&"function"==typeof sn.restoreControlledState||r("194");var t=un.getFiberCurrentPropsFromNode(e.stateNode);sn.restoreControlledState(e.stateNode,e.type,t)}else"function"!=typeof e.restoreControlledState&&r("195"),e.restoreControlledState()}function C(e,t,n,r,o,i){return e(t,n,r,o,i)}function k(e,t){return e(t)}function E(e,t){return k(e,t)}function w(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===gn?e.parentNode:e}function x(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n=t;if("number"==typeof n.tag){for(;n.return;)n=n.return;n=n.tag!==mn?null:n.stateNode.containerInfo}else{for(;n._hostParent;)n=n._hostParent;n=qt.getNodeFromInstance(n).parentNode}if(!n)break;e.ancestors.push(t),t=qt.getClosestInstanceFromNode(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],vn._handleTopLevel(e.topLevelType,t,e.nativeEvent,w(e.nativeEvent))}function S(e,t){return null==t&&r("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function P(e,t){e&&(un.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))}function _(e){return P(e,!0)}function N(e){return P(e,!1)}function O(e,t,n){switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":return!(!n.disabled||"button"!==t&&"input"!==t&&"select"!==t&&"textarea"!==t);default:return!1}}function I(e,t){if(!mt.canUseDOM||t&&!("addEventListener"in document))return!1;t="on"+e;var n=t in document;return n||(n=document.createElement("div"),n.setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&Tt&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function A(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function F(e){if(wn[e])return wn[e];if(!En[e])return e;var t,n=En[e];for(t in n)if(n.hasOwnProperty(t)&&t in xn)return wn[e]=n[t];return""}function M(e){return Object.prototype.hasOwnProperty.call(e,_n)||(e[_n]=Pn++,Tn[e[_n]]={}),Tn[e[_n]]}function D(e){return!!jn.hasOwnProperty(e)||!Hn.hasOwnProperty(e)&&(Un.test(e)?jn[e]=!0:(Hn[e]=!0,!1))}function R(){return null}function L(e){var t="";return gt.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}function U(e,t,n){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r)}else{for(n=""+n,t=null,r=0;r<e.length;r++){if(e[r].value===n)return void(e[r].selected=!0);null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function H(e,t){t&&(Zn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&r("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&r("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||r("61")),null!=t.style&&"object"!=typeof t.style&&r("62",""))}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function B(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}function W(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function V(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===rr)return void(n.nodeValue=t)}e.textContent=t}function z(e,t){lr(t,e.nodeType===ir||e.nodeType===ar?e:e.ownerDocument)}function K(e,t){return e!==Ar&&e!==Ir||t!==Ar&&t!==Ir?e===Or&&t!==Or?-255:e!==Or&&t===Or?255:e-t:0}function $(){return{first:null,last:null,hasForceUpdate:!1,callbackList:null}}function q(e,t,n,r){null!==n?n.next=t:(t.next=e.first,e.first=t),null!==r?t.next=r:e.last=t}function Y(e,t){t=t.priorityLevel;var n=null;if(null!==e.last&&0>=K(e.last.priorityLevel,t))n=e.last;else for(e=e.first;null!==e&&0>=K(e.priorityLevel,t);)n=e,e=e.next;return n}function Q(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=$()),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=$()):e=null,Dr=r,Rr=e!==r?e:null;var o=Dr;n=Rr;var i=Y(o,t),a=null!==i?i.next:o.first;return null===n?(q(o,t,i,a),null):(r=Y(n,t),e=null!==r?r.next:n.first,q(o,t,i,a),a===e&&null!==a||i===r&&null!==i?(null===r&&(n.first=t),null===e&&(n.last=null),null):(t={priorityLevel:t.priorityLevel,partialState:t.partialState,callback:t.callback,isReplace:t.isReplace,isForced:t.isForced,isTopLevelUnmount:t.isTopLevelUnmount,next:null},q(n,t,r,e),t))}function G(e,t,n,r){return e=e.partialState,"function"==typeof e?e.call(t,n,r):e}function X(e,t,n){e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=n}function Z(e){return e.tag===Wr&&null!=e.type.childContextTypes}function J(e,t){var n=e.stateNode,o=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;n=n.getChildContext();for(var i in n)i in o||r("108",d(e)||"Unknown",i);return yt({},t,n)}function ee(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=so,this.lastEffect=this.firstEffect=this.nextEffect=null,this.pendingWorkPriority=lo,this.alternate=null}function te(e,t,n){var o=void 0;return"function"==typeof e?(o=e.prototype&&e.prototype.isReactComponent?new ee(Jr,t,n):new ee(Zr,t,n),o.type=e):"string"==typeof e?(o=new ee(to,t,n),o.type=e):"object"==typeof e&&null!==e&&"number"==typeof e.tag?o=e:r("130",null==e?e:typeof e,""),o}function ne(e){return null===e||void 0===e?null:(e=Bo&&e[Bo]||e["@@iterator"],"function"==typeof e?e:null)}function re(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){t=t._owner;var o=void 0;t&&("number"==typeof t.tag?(t.tag!==Ao&&r("110"),o=t.stateNode):o=t.getPublicInstance()),o||r("147",n);var i=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===i?e.ref:(e=function(e){var t=o.refs===Ct?o.refs={}:o.refs;null===e?delete t[i]:t[i]=e},e._stringRef=i,e)}"string"!=typeof n&&r("148"),t._owner||r("149",n)}return n}function oe(e,t){"textarea"!==e.type&&r("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function ie(e,t){function n(n,r){if(t){if(!e){if(null===r.alternate)return;r=r.alternate}var o=n.lastEffect;null!==o?(o.nextEffect=r,n.lastEffect=r):n.firstEffect=n.lastEffect=r,r.nextEffect=null,r.effectTag=jo}}function o(e,r){if(!t)return null;for(;null!==r;)n(e,r),r=r.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(t,n){return e?(t=wo(t,n),t.index=0,t.sibling=null,t):(t.pendingWorkPriority=n,t.effectTag=Uo,t.index=0,t.sibling=null,t)}function l(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index,r<n?(e.effectTag=Ho,n):r):(e.effectTag=Ho,n):n}function u(e){return t&&null===e.alternate&&(e.effectTag=Ho),e}function s(e,t,n,r){return null===t||t.tag!==Fo?(n=To(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function c(e,t,n,r){return null===t||t.type!==n.type?(r=xo(n,e.internalContextTag,r),r.ref=re(t,n),r.return=e,r):(r=a(t,r),r.ref=re(t,n),r.pendingProps=n.props,r.return=e,r)}function p(e,t,n,r){return null===t||t.tag!==Do?(n=Po(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function d(e,t,n,r){return null===t||t.tag!==Ro?(t=_o(n,e.internalContextTag,r),t.type=n.value,t.return=e,t):(t=a(t,r),t.type=n.value,t.return=e,t)}function f(e,t,n,r){return null===t||t.tag!==Mo||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(n=No(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n.children||[],t.return=e,t)}function h(e,t,n,r){return null===t||t.tag!==Lo?(n=So(n,e.internalContextTag,r),n.return=e,n):(t=a(t,r),t.pendingProps=n,t.return=e,t)}function g(e,t,n){if("string"==typeof t||"number"==typeof t)return t=To(""+t,e.internalContextTag,n),t.return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Wo:return n=xo(t,e.internalContextTag,n),n.ref=re(null,t),n.return=e,n;case Co:return t=Po(t,e.internalContextTag,n),t.return=e,t;case ko:return n=_o(t,e.internalContextTag,n),n.type=t.value,n.return=e,n;case Eo:return t=No(t,e.internalContextTag,n),t.return=e,t}if(Oo(t)||ne(t))return t=So(t,e.internalContextTag,n),t.return=e,t;oe(e,t)}return null}function m(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Wo:return n.key===o?c(e,t,n,r):null;case Co:return n.key===o?p(e,t,n,r):null;case ko:return null===o?d(e,t,n,r):null;case Eo:return n.key===o?f(e,t,n,r):null}if(Oo(n)||ne(n))return null!==o?null:h(e,t,n,r);oe(e,n)}return null}function y(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return e=e.get(n)||null,s(t,e,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Wo:return e=e.get(null===r.key?n:r.key)||null,c(t,e,r,o);case Co:return e=e.get(null===r.key?n:r.key)||null,p(t,e,r,o);case ko:return e=e.get(n)||null,d(t,e,r,o);case Eo:return e=e.get(null===r.key?n:r.key)||null,f(t,e,r,o)}if(Oo(r)||ne(r))return e=e.get(n)||null,h(t,e,r,o);oe(t,r)}return null}function v(e,r,a,u){for(var s=null,c=null,p=r,d=r=0,f=null;null!==p&&d<a.length;d++){p.index>d?(f=p,p=null):f=p.sibling;var h=m(e,p,a[d],u);if(null===h){null===p&&(p=f);break}t&&p&&null===h.alternate&&n(e,p),r=l(h,r,d),null===c?s=h:c.sibling=h,c=h,p=f}if(d===a.length)return o(e,p),s;if(null===p){for(;d<a.length;d++)(p=g(e,a[d],u))&&(r=l(p,r,d),null===c?s=p:c.sibling=p,c=p);return s}for(p=i(e,p);d<a.length;d++)(f=y(p,e,d,a[d],u))&&(t&&null!==f.alternate&&p.delete(null===f.key?d:f.key),r=l(f,r,d),null===c?s=f:c.sibling=f,c=f);return t&&p.forEach(function(t){return n(e,t)}),s}function b(e,a,u,s){var c=ne(u);"function"!=typeof c&&r("150"),null==(u=c.call(u))&&r("151");for(var p=c=null,d=a,f=a=0,h=null,v=u.next();null!==d&&!v.done;f++,v=u.next()){d.index>f?(h=d,d=null):h=d.sibling;var b=m(e,d,v.value,s);if(null===b){d||(d=h);break}t&&d&&null===b.alternate&&n(e,d),a=l(b,a,f),null===p?c=b:p.sibling=b,p=b,d=h}if(v.done)return o(e,d),c;if(null===d){for(;!v.done;f++,v=u.next())null!==(v=g(e,v.value,s))&&(a=l(v,a,f),null===p?c=v:p.sibling=v,p=v);return c}for(d=i(e,d);!v.done;f++,v=u.next())null!==(v=y(d,e,f,v.value,s))&&(t&&null!==v.alternate&&d.delete(null===v.key?f:v.key),a=l(v,a,f),null===p?c=v:p.sibling=v,p=v);return t&&d.forEach(function(t){return n(e,t)}),c}return function(e,t,i,l){var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Wo:e:{var c=i.key;for(s=t;null!==s;){if(s.key===c){if(s.type===i.type){o(e,s.sibling),t=a(s,l),t.ref=re(s,i),t.pendingProps=i.props,t.return=e,e=t;break e}o(e,s);break}n(e,s),s=s.sibling}l=xo(i,e.internalContextTag,l),l.ref=re(t,i),l.return=e,e=l}return u(e);case Co:e:{for(s=i.key;null!==t;){if(t.key===s){if(t.tag===Do){o(e,t.sibling),t=a(t,l),t.pendingProps=i,t.return=e,e=t;break e}o(e,t);break}n(e,t),t=t.sibling}i=Po(i,e.internalContextTag,l),i.return=e,e=i}return u(e);case ko:e:{if(null!==t){if(t.tag===Ro){o(e,t.sibling),t=a(t,l),t.type=i.value,t.return=e,e=t;break e}o(e,t)}t=_o(i,e.internalContextTag,l),t.type=i.value,t.return=e,e=t}return u(e);case Eo:e:{for(s=i.key;null!==t;){if(t.key===s){if(t.tag===Mo&&t.stateNode.containerInfo===i.containerInfo&&t.stateNode.implementation===i.implementation){o(e,t.sibling),t=a(t,l),t.pendingProps=i.children||[],t.return=e,e=t;break e}o(e,t);break}n(e,t),t=t.sibling}i=No(i,e.internalContextTag,l),i.return=e,e=i}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==t&&t.tag===Fo?(o(e,t.sibling),t=a(t,l),t.pendingProps=i,t.return=e,e=t):(o(e,t),i=To(i,e.internalContextTag,l),i.return=e,e=i),u(e);if(Oo(i))return v(e,t,i,l);if(ne(i))return b(e,t,i,l);if(s&&oe(e,i),void 0===i)switch(e.tag){case Ao:case Io:i=e.type,r("152",i.displayName||i.name||"Component")}return o(e,t)}}function ae(e,t,n,o){function i(e,t){t.updater=a,e.stateNode=t,Yt.set(t,e)}var a={isMounted:oi,enqueueSetState:function(n,r,o){n=Yt.get(n);var i=t(n,!1);Jo(n,r,void 0===o?null:o,i),e(n,i)},enqueueReplaceState:function(n,r,o){n=Yt.get(n);var i=t(n,!1);ei(n,r,void 0===o?null:o,i),e(n,i)},enqueueForceUpdate:function(n,r){n=Yt.get(n);var o=t(n,!1);ti(n,void 0===r?null:r,o),e(n,o)}};return{adoptClassInstance:i,constructClassInstance:function(e,t){var n=e.type,r=Xo(e),o=Zo(e),a=o?Go(e,r):Ct;return t=new n(t,a),i(e,t),o&&Qo(e,r,a),t},mountClassInstance:function(e,t){var n=e.alternate,o=e.stateNode,i=o.state||null,l=e.pendingProps;l||r("158");var u=Xo(e);o.props=l,o.state=i,o.refs=Ct,o.context=Go(e,u),Pr.enableAsyncSubtreeAPI&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=Yo),"function"==typeof o.componentWillMount&&(u=o.state,o.componentWillMount(),u!==o.state&&a.enqueueReplaceState(o,o.state,null),null!==(u=e.updateQueue)&&(o.state=ni(n,e,u,o,i,l,t))),"function"==typeof o.componentDidMount&&(e.effectTag|=qo)},updateClassInstance:function(e,t,i){var l=t.stateNode;l.props=t.memoizedProps,l.state=t.memoizedState;var u=t.memoizedProps,s=t.pendingProps;s||null==(s=u)&&r("159");var c=l.context,p=Xo(t);if(p=Go(t,p),"function"!=typeof l.componentWillReceiveProps||u===s&&c===p||(c=l.state,l.componentWillReceiveProps(s,p),l.state!==c&&a.enqueueReplaceState(l,l.state,null)),c=t.memoizedState,i=null!==t.updateQueue?ni(e,t,t.updateQueue,l,c,s,i):c,!(u!==s||c!==i||ri()||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=qo),!1;var d=s;if(null===u||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)d=!0;else{var f=t.stateNode,h=t.type;d="function"==typeof f.shouldComponentUpdate?f.shouldComponentUpdate(d,i,p):!h.prototype||!h.prototype.isPureReactComponent||(!kt(u,d)||!kt(c,i))}return d?("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(s,i,p),"function"==typeof l.componentDidUpdate&&(t.effectTag|=qo)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=qo),n(t,s),o(t,i)),l.props=s,l.state=i,l.context=p,d}}}function le(e,t,n,o,i){function a(e,t,n){l(e,t,n,t.pendingWorkPriority)}function l(e,t,n,r){t.child=null===e?ii(t,t.child,n,r):e.child===t.child?ai(t,t.child,n,r):li(t,t.child,n,r)}function u(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=Fi)}function s(e,t,n,r){if(u(e,t),!n)return r&&gi(t,!1),p(e,t);n=t.stateNode,Mi.current=t;var o=n.render();return t.effectTag|=Ni,a(e,t,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&gi(t,!0),t.child}function c(e){var t=e.stateNode;t.pendingContext?hi(e,t.pendingContext,t.pendingContext!==t.context):t.context&&hi(e,t.context,!1),y(e,t.containerInfo)}function p(e,t){return ui(e,t),t.child}function d(e,t){switch(t.tag){case bi:c(t);break;case vi:fi(t);break;case Ei:y(t,t.stateNode.containerInfo)}return null}var f=e.shouldSetTextContent,h=e.useSyncScheduling,g=e.shouldDeprioritizeSubtree,m=t.pushHostContext,y=t.pushHostContainer,v=n.enterHydrationState,b=n.resetHydrationState,C=n.tryToClaimNextHydratableInstance;e=ae(o,i,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t});var k=e.adoptClassInstance,E=e.constructClassInstance,w=e.mountClassInstance,x=e.updateClassInstance;return{beginWork:function(e,t,n){if(t.pendingWorkPriority===Pi||t.pendingWorkPriority>n)return d(e,t);switch(t.tag){case mi:null!==e&&r("155");var o=t.type,i=t.pendingProps,l=pi(t);return l=ci(t,l),o=o(i,l),t.effectTag|=Ni,"object"==typeof o&&null!==o&&"function"==typeof o.render?(t.tag=vi,i=fi(t),k(t,o),w(t,n),t=s(e,t,!0,i)):(t.tag=yi,a(e,t,o),t.memoizedProps=i,t=t.child),t;case yi:e:{if(i=t.type,n=t.pendingProps,o=t.memoizedProps,di())null===n&&(n=o);else if(null===n||o===n){t=p(e,t);break e}o=pi(t),o=ci(t,o),i=i(n,o),t.effectTag|=Ni,a(e,t,i),t.memoizedProps=n,t=t.child}return t;case vi:return i=fi(t),o=void 0,null===e?t.stateNode?r("153"):(E(t,t.pendingProps),w(t,n),o=!0):o=x(e,t,n),s(e,t,o,i);case bi:return c(t),o=t.updateQueue,null!==o?(i=t.memoizedState,o=si(e,t,o,null,i,null,n),i===o?(b(),t=p(e,t)):(i=o.element,null!==e&&null!==e.child||!v(t)?(b(),a(e,t,i)):(t.effectTag|=Oi,t.child=ii(t,t.child,i,n)),t.memoizedState=o,t=t.child)):(b(),t=p(e,t)),t;case Ci:m(t),null===e&&C(t),i=t.type;var S=t.memoizedProps;return o=t.pendingProps,null===o&&null===(o=S)&&r("154"),l=null!==e?e.memoizedProps:null,di()||null!==o&&S!==o?(S=o.children,f(i,o)?S=null:l&&f(i,l)&&(t.effectTag|=Ii),u(e,t),n!==_i&&!h&&g(i,o)?(t.pendingWorkPriority=_i,t=null):(a(e,t,S),t.memoizedProps=o,t=t.child)):t=p(e,t),t;case ki:return null===e&&C(t),e=t.pendingProps,null===e&&(e=t.memoizedProps),t.memoizedProps=e,null;case xi:t.tag=wi;case wi:return n=t.pendingProps,di()?null===n&&null===(n=e&&e.memoizedProps)&&r("154"):null!==n&&t.memoizedProps!==n||(n=t.memoizedProps),i=n.children,o=t.pendingWorkPriority,t.stateNode=null===e?ii(t,t.stateNode,i,o):e.child===t.child?ai(t,t.stateNode,i,o):li(t,t.stateNode,i,o),t.memoizedProps=n,t.stateNode;case Si:return null;case Ei:e:{if(y(t,t.stateNode.containerInfo),n=t.pendingWorkPriority,i=t.pendingProps,di())null===i&&null==(i=e&&e.memoizedProps)&&r("154");else if(null===i||t.memoizedProps===i){t=p(e,t);break e}null===e?t.child=li(t,t.child,i,n):a(e,t,i),t.memoizedProps=i,t=t.child}return t;case Ti:e:{if(n=t.pendingProps,di())null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=p(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:r("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case vi:fi(t);break;case bi:c(t);break;default:r("157")}return t.effectTag|=Ai,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),t.pendingWorkPriority===Pi||t.pendingWorkPriority>n?d(e,t):(t.firstEffect=null,t.lastEffect=null,l(e,t,null,n),t.tag===vi&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}function ue(e,t,n){var o=e.createInstance,i=e.createTextInstance,a=e.appendInitialChild,l=e.finalizeInitialChildren,u=e.prepareUpdate,s=t.getRootHostContainer,c=t.popHostContext,p=t.getHostContext,d=t.popHostContainer,f=n.prepareToHydrateHostInstance,h=n.prepareToHydrateHostTextInstance,g=n.popHydrationState;return{completeWork:function(e,t,n){var m=t.pendingProps;switch(null===m?m=t.memoizedProps:t.pendingWorkPriority===Zi&&n!==Zi||(t.pendingProps=null),t.tag){case Hi:return null;case ji:return Ri(t),null;case Bi:return d(t),Li(t),m=t.stateNode,m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null),null!==e&&null!==e.child||(g(t),t.effectTag&=~Qi),null;case Wi:c(t),n=s();var y=t.type;if(null!==e&&null!=t.stateNode){var v=e.memoizedProps,b=t.stateNode,C=p();m=u(b,y,v,m,n,C),(t.updateQueue=m)&&(t.effectTag|=Xi),e.ref!==t.ref&&(t.effectTag|=Gi)}else{if(!m)return null===t.stateNode&&r("166"),null;if(e=p(),g(t))f(t,n,e)&&(t.effectTag|=Xi);else{e=o(y,m,n,e,t);e:for(v=t.child;null!==v;){if(v.tag===Wi||v.tag===Vi)a(e,v.stateNode);else if(v.tag!==zi&&null!==v.child){v=v.child;continue}if(v===t)break e;for(;null===v.sibling;){if(null===v.return||v.return===t)break e;v=v.return}v=v.sibling}l(e,y,m,n)&&(t.effectTag|=Xi),t.stateNode=e}null!==t.ref&&(t.effectTag|=Gi)}return null;case Vi:if(e&&null!=t.stateNode)e.memoizedProps!==m&&(t.effectTag|=Xi);else{if("string"!=typeof m)return null===t.stateNode&&r("166"),null;e=s(),n=p(),g(t)?h(t)&&(t.effectTag|=Xi):t.stateNode=i(m,e,n,t)}return null;case Ki:(m=t.memoizedProps)||r("165"),t.tag=$i,n=[];e:for((y=t.stateNode)&&(y.return=t);null!==y;){if(y.tag===Wi||y.tag===Vi||y.tag===zi)r("164");else if(y.tag===qi)n.push(y.type);else if(null!==y.child){y.child.return=y,y=y.child;continue}for(;null===y.sibling;){if(null===y.return||y.return===t)break e;y=y.return}y.sibling.return=y.return,y=y.sibling}return y=m.handler,m=y(m.props,n),t.child=Di(t,null!==e?e.child:null,m,t.pendingWorkPriority),t.child;case $i:return t.tag=Ki,null;case qi:case Yi:return null;case zi:return t.effectTag|=Xi,d(t),null;case Ui:r("167");default:r("156")}}}}function se(e){return function(t){try{return e(t)}catch(e){}}}function ce(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function o(e){return e.tag===oa||e.tag===ra||e.tag===aa}function i(e){for(var t=e;;)if(l(t),null!==t.child&&t.tag!==aa)t.child.return=t,t=t.child;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function a(e){for(var t=e,n=!1,o=void 0,a=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&r("160"),n.tag){case oa:o=n.stateNode,a=!1;break e;case ra:case aa:o=n.stateNode.containerInfo,a=!0;break e}n=n.return}n=!0}if(t.tag===oa||t.tag===ia)i(t),a?y(o,t.stateNode):m(o,t.stateNode);else if(t.tag===aa?o=t.stateNode.containerInfo:l(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,t.tag===aa&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function l(e){switch("function"==typeof sa&&sa(e),e.tag){case na:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case oa:n(e);break;case la:i(e.stateNode);break;case aa:a(e)}}var u=e.commitMount,s=e.commitUpdate,c=e.resetTextContent,p=e.commitTextUpdate,d=e.appendChild,f=e.appendChildToContainer,h=e.insertBefore,g=e.insertInContainerBefore,m=e.removeChild,y=e.removeChildFromContainer,v=e.getPublicInstance;return{commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(o(t)){var n=t;break e}t=t.return}r("160"),n=void 0}var i=t=void 0;switch(n.tag){case oa:t=n.stateNode,i=!1;break;case ra:case aa:t=n.stateNode.containerInfo,i=!0;break;default:r("161")}n.effectTag&fa&&(c(t),n.effectTag&=~fa);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||o(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;n.tag!==oa&&n.tag!==ia;){if(n.effectTag&ca)continue t;if(null===n.child||n.tag===aa)continue t;n.child.return=n,n=n.child}if(!(n.effectTag&ca)){n=n.stateNode;break e}}for(var a=e;;){if(a.tag===oa||a.tag===ia)n?i?g(t,a.stateNode,n):h(t,a.stateNode,n):i?f(t,a.stateNode):d(t,a.stateNode);else if(a.tag!==aa&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;a=a.return}a.sibling.return=a.return,a=a.sibling}},commitDeletion:function(e){a(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case na:break;case oa:var n=t.stateNode;if(null!=n){var o=t.memoizedProps;e=null!==e?e.memoizedProps:o;var i=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&s(n,a,i,e,o,t)}break;case ia:null===t.stateNode&&r("162"),n=t.memoizedProps,p(t.stateNode,null!==e?e.memoizedProps:n,n);break;case ra:case aa:break;default:r("163")}},commitLifeCycles:function(e,t){switch(t.tag){case na:var n=t.stateNode;if(t.effectTag&pa)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var o=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(o,e)}t.effectTag&da&&null!==t.updateQueue&&ua(t,t.updateQueue,n);break;case ra:e=t.updateQueue,null!==e&&ua(t,e,t.child&&t.child.stateNode);break;case oa:n=t.stateNode,null===e&&t.effectTag&pa&&u(n,t.type,t.memoizedProps,t);break;case ia:case aa:break;default:r("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case oa:t(v(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}function pe(e){function t(e){return e===ya&&r("174"),e}var n=e.getChildHostContext,o=e.getRootHostContext,i=ha(ya),a=ha(ya),l=ha(ya);return{getHostContext:function(){return t(i.current)},getRootHostContainer:function(){return t(l.current)},popHostContainer:function(e){ga(i,e),ga(a,e),ga(l,e)},popHostContext:function(e){a.current===e&&(ga(i,e),ga(a,e))},pushHostContainer:function(e,t){ma(l,t,e),t=o(t),ma(a,e,e),ma(i,t,e)},pushHostContext:function(e){var r=t(l.current),o=t(i.current);r=n(o,e.type,r),o!==r&&(ma(a,e,e),ma(i,r,e))},resetHostContainer:function(){i.current=ya,l.current=ya}}}function de(e){function t(e,t){var n=wa();n.stateNode=t,n.return=e,n.effectTag=ka,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case va:return a(t,e.type,e.pendingProps);case ba:return l(t,e.pendingProps);default:return!1}}function o(e){for(e=e.return;null!==e&&e.tag!==va&&e.tag!==Ca;)e=e.return;h=e}var i=e.shouldSetTextContent,a=e.canHydrateInstance,l=e.canHydrateTextInstance,u=e.getNextHydratableSibling,s=e.getFirstHydratableChild,c=e.hydrateInstance,p=e.hydrateTextInstance,d=e.didNotHydrateInstance,f=e.didNotFindHydratableInstance;if(e=e.didNotFindHydratableTextInstance,!(a&&l&&u&&s&&c&&p&&d&&f&&e))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){r("175")},prepareToHydrateHostTextInstance:function(){r("176")},popHydrationState:function(){return!1}};var h=null,g=null,m=!1;return{enterHydrationState:function(e){return g=s(e.stateNode.containerInfo),h=e,m=!0},resetHydrationState:function(){g=h=null,m=!1},tryToClaimNextHydratableInstance:function(e){if(m){var r=g;if(r){if(!n(e,r)){if(!(r=u(r))||!n(e,r))return e.effectTag|=Ea,m=!1,void(h=e);t(h,g)}e.stateNode=r,h=e,g=s(r)}else e.effectTag|=Ea,m=!1,h=e}},prepareToHydrateHostInstance:function(e,t,n){return t=c(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return p(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==h)return!1;if(!m)return o(e),m=!0,!1;var n=e.type;if(e.tag!==va||"head"!==n&&"body"!==n&&!i(n,e.memoizedProps))for(n=g;n;)t(e,n),n=u(n);return o(e),g=h?u(e.stateNode):null,!0}}}function fe(e){function t(){for(;null!==$&&$.current.pendingWorkPriority===Oa;){$.isScheduled=!1;var e=$.nextScheduledRoot;if($.nextScheduledRoot=null,$===q)return q=$=null,V=Oa,null;$=e}e=$;for(var t=null,n=Oa;null!==e;)e.current.pendingWorkPriority!==Oa&&(n===Oa||n>e.current.pendingWorkPriority)&&(n=e.current.pendingWorkPriority,t=e),e=e.nextScheduledRoot;null!==t?(V=n,Sa(),Xa(),E(),W=Pa(t.current,n),t!==oe&&(re=0,oe=t)):(V=Oa,oe=W=null)}function n(n){ee=!0,K=null;var o=n.stateNode;if(o.current===n&&r("177"),V!==Ia&&V!==Aa||re++,Ta.current=null,n.effectTag>La)if(null!==n.lastEffect){n.lastEffect.nextEffect=n;var i=n.firstEffect}else i=n;else i=n.firstEffect;for(D(),z=i;null!==z;){var a=!1,l=void 0;try{for(;null!==z;){var u=z.effectTag;if(u&Wa&&e.resetTextContent(z.stateNode),u&Ka){var s=z.alternate;null!==s&&A(s)}switch(u&~(Va|za|Wa|Ka|La)){case Ua:P(z),z.effectTag&=~Ua;break;case ja:P(z),z.effectTag&=~Ua,N(z.alternate,z);break;case Ha:N(z.alternate,z);break;case Ba:te=!0,_(z),te=!1}z=z.nextEffect}}catch(e){a=!0,l=e}a&&(null===z&&r("178"),p(z,l),null!==z&&(z=z.nextEffect))}for(R(),o.current=n,z=i;null!==z;){o=!1,i=void 0;try{for(;null!==z;){var c=z.effectTag;if(c&(Ha|Va)&&O(z.alternate,z),c&Ka&&I(z),c&za)switch(a=z,l=void 0,null!==Q&&(l=Q.get(a),Q.delete(a),null==l&&null!==a.alternate&&(a=a.alternate,l=Q.get(a),Q.delete(a))),null==l&&r("184"),a.tag){case Qa:a.stateNode.componentDidCatch(l.error,{componentStack:l.componentStack});break;case $a:null===Z&&(Z=l.error);break;default:r("157")}var d=z.nextEffect;z.nextEffect=null,z=d}}catch(e){o=!0,i=e}o&&(null===z&&r("178"),p(z,i),null!==z&&(z=z.nextEffect))}ee=!1,"function"==typeof Na&&Na(n.stateNode),X&&(X.forEach(y),X=null),t()}function o(e){for(;;){var t=T(e.alternate,e,V),n=e.return,r=e.sibling,o=e;if(!(o.pendingWorkPriority!==Oa&&o.pendingWorkPriority>V)){for(var i=Ga(o),a=o.child;null!==a;)i=_a(i,a.pendingWorkPriority),a=a.sibling;o.pendingWorkPriority=i}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),e.effectTag>La&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){K=e;break}e=n}return null}function i(e){var t=x(e.alternate,e,V);return null===t&&(t=o(e)),Ta.current=null,t}function a(e){var t=S(e.alternate,e,V);return null===t&&(t=o(e)),Ta.current=null,t}function l(e){c(Da,e)}function u(){if(null!==Q&&0<Q.size&&V===Aa)for(;null!==W;){var e=W;if(null===(W=null!==Q&&(Q.has(e)||null!==e.alternate&&Q.has(e.alternate))?a(W):i(W))&&(null===K&&r("179"),L=Aa,n(K),L=V,null===Q||0===Q.size||V!==Aa))break}}function s(e,o){if(null!==K?(L=Aa,n(K),u()):null===W&&t(),!(V===Oa||V>e)){L=V;e:for(;;){if(V<=Aa)for(;null!==W&&!(null===(W=i(W))&&(null===K&&r("179"),L=Aa,n(K),L=V,u(),V===Oa||V>e||V>Aa)););else if(null!==o)for(;null!==W&&!H;)if(1<o.timeRemaining()){if(null===(W=i(W)))if(null===K&&r("179"),1<o.timeRemaining()){if(L=Aa,n(K),L=V,u(),V===Oa||V>e||V<Fa)break}else H=!0}else H=!0;switch(V){case Ia:case Aa:if(V<=e)continue e;break e;case Fa:case Ma:case Da:if(null===o)break e;if(!H&&V<=e)continue e;break e;case Oa:break e;default:r("181")}}}}function c(e,t){U&&r("182"),U=!0;var n=L,o=!1,i=null;try{s(e,t)}catch(e){o=!0,i=e}for(;o;){if(J){Z=i;break}var u=W;if(null===u)J=!0;else{var c=p(u,i);if(null===c&&r("183"),!J){try{o=c,i=e,c=t;for(var d=o;null!==u;){switch(u.tag){case Qa:xa(u);break;case qa:k(u);break;case $a:C(u);break;case Ya:C(u)}if(u===d||u.alternate===d)break;u=u.return}W=a(o),s(i,c)}catch(e){o=!0,i=e;continue}break}}}if(L=n,null!==t&&(Y=!1),V>Aa&&!Y&&(F(l),Y=!0),e=Z,J=H=U=!1,oe=G=Q=Z=null,re=0,null!==e)throw e}function p(e,t){var n=Ta.current=null,r=!1,o=!1,i=null;if(e.tag===$a)n=e,f(e)&&(J=!0);else for(var a=e.return;null!==a&&null===n;){if(a.tag===Qa?"function"==typeof a.stateNode.componentDidCatch&&(r=!0,i=d(a),n=a,o=!0):a.tag===$a&&(n=a),f(a)){if(te||null!==X&&(X.has(a)||null!==a.alternate&&X.has(a.alternate)))return null;n=null,o=!1}a=a.return}if(null!==n){null===G&&(G=new Set),G.add(n);var l="";a=e;do{e:switch(a.tag){case fo:case ho:case go:case mo:var u=a._debugOwner,s=a._debugSource,c=d(a),p=null;u&&(p=d(u)),u=s,c="\n    in "+(c||"Unknown")+(u?" (at "+u.fileName.replace(/^.*[\\\/]/,"")+":"+u.lineNumber+")":p?" (created by "+p+")":"");break e;default:c=""}l+=c,a=a.return}while(a);a=l,e=d(e),null===Q&&(Q=new Map),t={componentName:e,componentStack:a,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:i,willRetry:o},Q.set(n,t);try{console.error(t.error)}catch(e){console.error(e)}return ee?(null===X&&(X=new Set),X.add(n)):y(n),n}return null===Z&&(Z=t),null}function f(e){return null!==G&&(G.has(e)||null!==e.alternate&&G.has(e.alternate))}function h(e,t){return g(e,t,!1)}function g(e,t){re>ne&&(J=!0,r("185")),!U&&t<=V&&(W=null);for(var n=!0;null!==e&&n;){if(n=!1,(e.pendingWorkPriority===Oa||e.pendingWorkPriority>t)&&(n=!0,e.pendingWorkPriority=t),null!==e.alternate&&(e.alternate.pendingWorkPriority===Oa||e.alternate.pendingWorkPriority>t)&&(n=!0,e.alternate.pendingWorkPriority=t),null===e.return){if(e.tag!==$a)break;var o=e.stateNode;if(t===Oa||o.isScheduled||(o.isScheduled=!0,q?q.nextScheduledRoot=o:$=o,q=o),!U)switch(t){case Ia:B?c(Ia,null):c(Aa,null);break;case Aa:j||r("186");break;default:Y||(F(l),Y=!0)}}e=e.return}}function m(e,t){var n=L;return n===Oa&&(n=!M||e.internalContextTag&Ra||t?Ma:Ia),n===Ia&&(U||j)?Aa:n}function y(e){g(e,Aa,!0)}var v=pe(e),b=de(e),C=v.popHostContainer,k=v.popHostContext,E=v.resetHostContainer,w=le(e,v,b,h,m),x=w.beginWork,S=w.beginFailedWork,T=ue(e,v,b).completeWork;v=ce(e,p);var P=v.commitPlacement,_=v.commitDeletion,N=v.commitWork,O=v.commitLifeCycles,I=v.commitAttachRef,A=v.commitDetachRef,F=e.scheduleDeferredCallback,M=e.useSyncScheduling,D=e.prepareForCommit,R=e.resetAfterCommit,L=Oa,U=!1,H=!1,j=!1,B=!1,W=null,V=Oa,z=null,K=null,$=null,q=null,Y=!1,Q=null,G=null,X=null,Z=null,J=!1,ee=!1,te=!1,ne=1e3,re=0,oe=null;return{scheduleUpdate:h,getPriorityContext:m,batchedUpdates:function(e,t){var n=j;j=!0;try{return e(t)}finally{j=n,U||j||c(Aa,null)}},unbatchedUpdates:function(e){var t=B,n=j;B=j,j=!1;try{return e()}finally{j=n,B=t}},flushSync:function(e){var t=j,n=L;j=!0,L=Ia;try{return e()}finally{j=t,L=n,U&&r("187"),c(Aa,null)}},deferredUpdates:function(e){var t=L;L=Ma;try{return e()}finally{L=t}}}}function he(){r("196")}function ge(e){return e?(e=Yt.get(e),"number"==typeof e.tag?he(e):e._processChildContext(e._context)):Ct}function me(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ye(e,t){var n=me(e);e=0;for(var r;n;){if(n.nodeType===il){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=me(n)}}function ve(){return!al&&mt.canUseDOM&&(al="textContent"in document.documentElement?"textContent":"innerText"),al}function be(){r("211")}function Ce(){r("212")}function ke(e){if(null==e)return null;if(e.nodeType===pl)return e;var t=Yt.get(e);if(t)return"number"==typeof t.tag?be(t):Ce(t);"function"==typeof e.render?r("188"):r("213",Object.keys(e))}function Ee(e){if(void 0!==e._hostParent)return e._hostParent;if("number"==typeof e.tag){do{e=e.return}while(e&&e.tag!==dl);if(e)return e}return null}function we(e,t){for(var n=0,r=e;r;r=Ee(r))n++;r=0;for(var o=t;o;o=Ee(o))r++;for(;0<n-r;)e=Ee(e),n--;for(;0<r-n;)t=Ee(t),r--;for(;n--;){if(e===t||e===t.alternate)return e;e=Ee(e),t=Ee(t)}return null}function xe(e,t,n){(t=hl(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function Se(e){e&&e.dispatchConfig.phasedRegistrationNames&&fl.traverseTwoPhase(e._targetInst,xe,e)}function Te(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;t=t?fl.getParentInstance(t):null,fl.traverseTwoPhase(t,xe,e)}}function Pe(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=hl(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function _e(e){e&&e.dispatchConfig.registrationName&&Pe(e._targetInst,null,e)}function Ne(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var o in e)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?bt.thatReturnsTrue:bt.thatReturnsFalse,this.isPropagationStopped=bt.thatReturnsFalse,this}function Oe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ie(e){e instanceof this||r("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ae(e){e.eventPool=[],e.getPooled=Oe,e.release=Ie}function Fe(e,t,n,r){return Ne.call(this,e,t,n,r)}function Me(e,t,n,r){return Ne.call(this,e,t,n,r)}function De(e,t){switch(e){case"topKeyUp":return-1!==kl.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function Re(e){return e=e.detail,"object"==typeof e&&"data"in e?e.data:null}function Le(e,t){switch(e){case"topCompositionEnd":return Re(t);case"topKeyPress":return 32!==t.which?null:(Ol=!0,_l);case"topTextInput":return e=t.data,e===_l&&Ol?null:e;default:return null}}function Ue(e,t){if(Il)return"topCompositionEnd"===e||!El&&De(e,t)?(e=vl.getData(),vl.reset(),Il=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return Pl?null:t.data;default:return null}}function He(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Fl[e.type]:"textarea"===t}function je(e,t,n){return e=Ne.getPooled(Ml.change,e,t,n),e.type="change",dn.enqueueStateRestore(n),gl.accumulateTwoPhaseDispatches(e),e}function Be(e){kn.enqueueEvents(e),kn.processEventQueue(!1)}function We(e){var t=qt.getNodeFromInstance(e);if(Jn.updateValueIfChanged(t))return e}function Ve(e,t){if("topChange"===e)return t}function ze(){Dl&&(Dl.detachEvent("onpropertychange",Ke),Rl=Dl=null)}function Ke(e){"value"===e.propertyName&&We(Rl)&&(e=je(Rl,e,w(e)),hn.batchedUpdates(Be,e))}function $e(e,t,n){"topFocus"===e?(ze(),Dl=t,Rl=n,Dl.attachEvent("onpropertychange",Ke)):"topBlur"===e&&ze()}function qe(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return We(Rl)}function Ye(e,t){if("topClick"===e)return We(t)}function Qe(e,t){if("topInput"===e||"topChange"===e)return We(t)}function Ge(e,t,n,r){return Ne.call(this,e,t,n,r)}function Xe(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Hl[e])&&!!t[e]}function Ze(){return Xe}function Je(e,t,n,r){return Ne.call(this,e,t,n,r)}function et(e,t){if(Yl||null==Kl||Kl!==xt())return null;var n=Kl;return"selectionStart"in n&&cl.hasSelectionCapabilities(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?(n=window.getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}):n=void 0,ql&&kt(ql,n)?null:(ql=n,e=Ne.getPooled(zl.select,$l,e,t),e.type="select",e.target=Kl,gl.accumulateTwoPhaseDispatches(e),e)}function tt(e,t,n,r){return Ne.call(this,e,t,n,r)}function nt(e,t,n,r){return Ne.call(this,e,t,n,r)}function rt(e,t,n,r){return Ne.call(this,e,t,n,r)}function ot(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}function it(e,t,n,r){return Ne.call(this,e,t,n,r)}function at(e,t,n,r){return Ne.call(this,e,t,n,r)}function lt(e,t,n,r){return Ne.call(this,e,t,n,r)}function ut(e,t,n,r){return Ne.call(this,e,t,n,r)}function st(e,t,n,r){return Ne.call(this,e,t,n,r)}function ct(e){return e[1].toUpperCase()}function pt(e){return!(!e||e.nodeType!==fu&&e.nodeType!==mu&&e.nodeType!==yu&&(e.nodeType!==gu||" react-mount-point-unstable "!==e.nodeValue))}function dt(e){return!(!(e=e?e.nodeType===mu?e.documentElement:e.firstChild:null)||e.nodeType!==fu||!e.hasAttribute(vu))}function ft(e,t,n,o,i){pt(n)||r("200");var a=n._reactRootContainer;if(a)Du.updateContainer(t,a,e,i);else{if(!o&&!dt(n))for(o=void 0;o=n.lastChild;)n.removeChild(o);var l=Du.createContainer(n);a=n._reactRootContainer=l,Du.unbatchedUpdates(function(){Du.updateContainer(t,l,e,i)})}return Du.getPublicRootInstance(a)}function ht(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return pt(t)||r("200"),bo.createPortal(e,t,null,n)}var gt=n(0);n(10);var mt=n(11),yt=n(1),vt=n(12),bt=n(2),Ct=n(13),kt=n(14),Et=n(15),wt=n(18),xt=n(19);gt||r("227");var St,Tt,Pt={Namespaces:{html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},getIntrinsicNamespace:o,getChildNamespace:function(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?o(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}},_t=null,Nt={},Ot={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){_t&&r("101"),_t=Array.prototype.slice.call(e),i()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var o=e[t];Nt.hasOwnProperty(t)&&Nt[t]===o||(Nt[t]&&r("102",t),Nt[t]=o,n=!0)}n&&i()}},It=Ot,At={children:!0,dangerouslySetInnerHTML:!0,autoFocus:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,style:!0},Ft={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=Ft,n=e.Properties||{},o=e.DOMAttributeNamespaces||{},i=e.DOMAttributeNames||{};e=e.DOMMutationMethods||{};for(var a in n){Mt.properties.hasOwnProperty(a)&&r("48",a);var u=a.toLowerCase(),s=n[a];u={attributeName:u,attributeNamespace:null,propertyName:a,mutationMethod:null,mustUseProperty:l(s,t.MUST_USE_PROPERTY),hasBooleanValue:l(s,t.HAS_BOOLEAN_VALUE),hasNumericValue:l(s,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:l(s,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:l(s,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:l(s,t.HAS_STRING_BOOLEAN_VALUE)},1>=u.hasBooleanValue+u.hasNumericValue+u.hasOverloadedBooleanValue||r("50",a),i.hasOwnProperty(a)&&(u.attributeName=i[a]),o.hasOwnProperty(a)&&(u.attributeNamespace=o[a]),e.hasOwnProperty(a)&&(u.mutationMethod=e[a]),Mt.properties[a]=u}}},Mt={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",ATTRIBUTE_NAME_CHAR:":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",properties:{},shouldSetAttribute:function(e,t){if(Mt.isReservedProp(e)||!("o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return Mt.shouldAttributeAcceptBooleanValue(e);case"undefined":case"number":case"string":case"object":return!0;default:return!1}},getPropertyInfo:function(e){return Mt.properties.hasOwnProperty(e)?Mt.properties[e]:null},shouldAttributeAcceptBooleanValue:function(e){if(Mt.isReservedProp(e))return!0;var t=Mt.getPropertyInfo(e);return t?t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:"data-"===(e=e.toLowerCase().slice(0,5))||"aria-"===e},isReservedProp:function(e){return At.hasOwnProperty(e)},injection:Ft},Dt=Mt,Rt={IndeterminateComponent:0,FunctionalComponent:1,ClassComponent:2,HostRoot:3,HostPortal:4,HostComponent:5,HostText:6,CoroutineComponent:7,CoroutineHandlerPhase:8,YieldComponent:9,Fragment:10},Lt={ELEMENT_NODE:1,TEXT_NODE:3,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_FRAGMENT_NODE:11},Ut=Rt.HostComponent,Ht=Rt.HostText,jt=Lt.ELEMENT_NODE,Bt=Lt.COMMENT_NODE,Wt=Dt.ID_ATTRIBUTE_NAME,Vt={hasCachedChildNodes:1},zt=Math.random().toString(36).slice(2),Kt="__reactInternalInstance$"+zt,$t="__reactEventHandlers$"+zt,qt={getClosestInstanceFromNode:p,getInstanceFromNode:function(e){var t=e[Kt];return t?t.tag===Ut||t.tag===Ht?t:t._hostNode===e?t:null:(t=p(e),null!=t&&t._hostNode===e?t:null)},getNodeFromInstance:function(e){if(e.tag===Ut||e.tag===Ht)return e.stateNode;if(void 0===e._hostNode&&r("33"),e._hostNode)return e._hostNode;for(var t=[];!e._hostNode;)t.push(e),e._hostParent||r("34"),e=e._hostParent;for(;t.length;e=t.pop())c(e,e._hostNode);return e._hostNode},precacheChildNodes:c,precacheNode:s,uncacheNode:function(e){var t=e._hostNode;t&&(delete t[Kt],e._hostNode=null)},precacheFiberNode:function(e,t){t[Kt]=e},getFiberCurrentPropsFromNode:function(e){return e[$t]||null},updateFiberProps:function(e,t){e[$t]=t}},Yt={remove:function(e){e._reactInternalFiber=void 0},get:function(e){return e._reactInternalFiber},has:function(e){return void 0!==e._reactInternalFiber},set:function(e,t){e._reactInternalFiber=t}},Qt={ReactCurrentOwner:gt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner},Gt={NoEffect:0,PerformedWork:1,Placement:2,Update:4,PlacementAndUpdate:6,Deletion:8,ContentReset:16,Callback:32,Err:64,Ref:128},Xt=Rt.HostComponent,Zt=Rt.HostRoot,Jt=Rt.HostPortal,en=Rt.HostText,tn=Gt.NoEffect,nn=Gt.Placement,rn={isFiberMounted:function(e){return 2===f(e)},isMounted:function(e){return!!(e=Yt.get(e))&&2===f(e)},findCurrentFiberUsingSlowPath:g,findCurrentHostFiber:function(e){if(!(e=g(e)))return null;for(var t=e;;){if(t.tag===Xt||t.tag===en)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null},findCurrentHostFiberWithNoPortals:function(e){if(!(e=g(e)))return null;for(var t=e;;){if(t.tag===Xt||t.tag===en)return t;if(t.child&&t.tag!==Jt)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}},on={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&r("197"),m=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,o,i,a,l,u){m.apply(on,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,l,u){if(on.invokeGuardedCallback.apply(this,arguments),on.hasCaughtError()){var s=on.clearCaughtError();on._hasRethrowError||(on._hasRethrowError=!0,on._rethrowError=s)}},rethrowCaughtError:function(){return y.apply(on,arguments)},hasCaughtError:function(){return on._hasCaughtError},clearCaughtError:function(){if(on._hasCaughtError){var e=on._caughtError;return on._caughtError=null,on._hasCaughtError=!1,e}r("198")}},an=on,ln={isEndish:function(e){return"topMouseUp"===e||"topTouchEnd"===e||"topTouchCancel"===e},isMoveish:function(e){return"topMouseMove"===e||"topTouchMove"===e},isStartish:function(e){return"topMouseDown"===e||"topTouchStart"===e},executeDirectDispatch:function(e){var t=e._dispatchListeners,n=e._dispatchInstances;return Array.isArray(t)&&r("103"),e.currentTarget=t?ln.getNodeFromInstance(n):null,t=t?t(e):null,e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,t},executeDispatchesInOrder:function(e,t){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)v(e,t,n[o],r[o]);else n&&v(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null},executeDispatchesInOrderStopAtTrue:function(e){e:{var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r])){t=n[r];break e}}else if(t&&t(e,n)){t=n;break e}t=null}return e._dispatchInstances=null,e._dispatchListeners=null,t},hasDispatches:function(e){return!!e._dispatchListeners},getFiberCurrentPropsFromNode:function(e){return St.getFiberCurrentPropsFromNode(e)},getInstanceFromNode:function(e){return St.getInstanceFromNode(e)},getNodeFromInstance:function(e){return St.getNodeFromInstance(e)},injection:{injectComponentTree:function(e){St=e}}},un=ln,sn=null,cn=null,pn=null,dn={injection:{injectFiberControlledHostComponent:function(e){sn=e}},enqueueStateRestore:function(e){cn?pn?pn.push(e):pn=[e]:cn=e},restoreStateIfNeeded:function(){if(cn){var e=cn,t=pn;if(pn=cn=null,b(e),t)for(e=0;e<t.length;e++)b(t[e])}}},fn=!1,hn={batchedUpdates:function(e,t){if(fn)return C(E,e,t);fn=!0;try{return C(E,e,t)}finally{fn=!1,dn.restoreStateIfNeeded()}},injection:{injectStackBatchedUpdates:function(e){C=e},injectFiberBatchedUpdates:function(e){k=e}}},gn=Lt.TEXT_NODE,mn=Rt.HostRoot,yn=[],vn={_enabled:!0,_handleTopLevel:null,setHandleTopLevel:function(e){vn._handleTopLevel=e},setEnabled:function(e){vn._enabled=!!e},isEnabled:function(){return vn._enabled},trapBubbledEvent:function(e,t,n){return n?vt.listen(n,t,vn.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){return n?vt.capture(n,t,vn.dispatchEvent.bind(null,e)):null},dispatchEvent:function(e,t){if(vn._enabled){var n=w(t);if(n=qt.getClosestInstanceFromNode(n),null===n||"number"!=typeof n.tag||rn.isFiberMounted(n)||(n=null),yn.length){var r=yn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{hn.batchedUpdates(x,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>yn.length&&yn.push(e)}}}},bn=vn,Cn=null,kn={injection:{injectEventPluginOrder:It.injectEventPluginOrder,injectEventPluginsByName:It.injectEventPluginsByName},getListener:function(e,t){if("number"==typeof e.tag){var n=e.stateNode;if(!n)return null;var o=un.getFiberCurrentPropsFromNode(n);if(!o)return null;if(n=o[t],O(t,e.type,o))return null}else{if("string"==typeof(o=e._currentElement)||"number"==typeof o||!e._rootNodeID)return null;if(e=o.props,n=e[t],O(t,o.type,e))return null}return n&&"function"!=typeof n&&r("231",t,typeof n),n},extractEvents:function(e,t,n,r){for(var o,i=It.plugins,a=0;a<i.length;a++){var l=i[a];l&&(l=l.extractEvents(e,t,n,r))&&(o=S(o,l))}return o},enqueueEvents:function(e){e&&(Cn=S(Cn,e))},processEventQueue:function(e){var t=Cn;Cn=null,e?T(t,_):T(t,N),Cn&&r("95"),an.rethrowCaughtError()}};mt.canUseDOM&&(Tt=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var En={animationend:A("Animation","AnimationEnd"),animationiteration:A("Animation","AnimationIteration"),animationstart:A("Animation","AnimationStart"),transitionend:A("Transition","TransitionEnd")},wn={},xn={};mt.canUseDOM&&(xn=document.createElement("div").style,"AnimationEvent"in window||(delete En.animationend.animation,delete En.animationiteration.animation,delete En.animationstart.animation),"TransitionEvent"in window||delete En.transitionend.transition);var Sn={topAbort:"abort",topAnimationEnd:F("animationend")||"animationend",topAnimationIteration:F("animationiteration")||"animationiteration",topAnimationStart:F("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:F("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Tn={},Pn=0,_n="_reactListenersID"+(""+Math.random()).slice(2),Nn=yt({},{handleTopLevel:function(e,t,n,r){e=kn.extractEvents(e,t,n,r),kn.enqueueEvents(e),kn.processEventQueue(!1)}},{setEnabled:function(e){bn&&bn.setEnabled(e)},isEnabled:function(){return!(!bn||!bn.isEnabled())},listenTo:function(e,t){var n=M(t);e=It.registrationNameDependencies[e];for(var r=0;r<e.length;r++){var o=e[r];n.hasOwnProperty(o)&&n[o]||("topWheel"===o?I("wheel")?bn.trapBubbledEvent("topWheel","wheel",t):I("mousewheel")?bn.trapBubbledEvent("topWheel","mousewheel",t):bn.trapBubbledEvent("topWheel","DOMMouseScroll",t):"topScroll"===o?bn.trapCapturedEvent("topScroll","scroll",t):"topFocus"===o||"topBlur"===o?(bn.trapCapturedEvent("topFocus","focus",t),bn.trapCapturedEvent("topBlur","blur",t),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(I("cancel",!0)&&bn.trapCapturedEvent("topCancel","cancel",t),n.topCancel=!0):"topClose"===o?(I("close",!0)&&bn.trapCapturedEvent("topClose","close",t),n.topClose=!0):Sn.hasOwnProperty(o)&&bn.trapBubbledEvent(o,Sn[o],t),n[o]=!0)}},isListeningToAllDependencies:function(e,t){t=M(t),e=It.registrationNameDependencies[e];for(var n=0;n<e.length;n++){var r=e[n];if(!t.hasOwnProperty(r)||!t[r])return!1}return!0},trapBubbledEvent:function(e,t,n){return bn.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return bn.trapCapturedEvent(e,t,n)}}),On={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},In=["Webkit","ms","Moz","O"];Object.keys(On).forEach(function(e){In.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),On[t]=On[e]})});var An={isUnitlessNumber:On,shorthandPropertyExpansions:{background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}}},Fn=An.isUnitlessNumber,Mn=!1;if(mt.canUseDOM){var Dn=document.createElement("div").style;try{Dn.font=""}catch(e){Mn=!0}}var Rn,Ln={createDangerousStringForStyles:function(){},setValueForStyles:function(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];if(o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||Fn.hasOwnProperty(o)&&Fn[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r)e.setProperty(n,o);else if(o)e[n]=o;else if(r=Mn&&An.shorthandPropertyExpansions[n])for(var a in r)e[a]="";else e[n]=""}}},Un=new RegExp("^["+Dt.ATTRIBUTE_NAME_START_CHAR+"]["+Dt.ATTRIBUTE_NAME_CHAR+"]*$"),Hn={},jn={},Bn={setAttributeForID:function(e,t){e.setAttribute(Dt.ID_ATTRIBUTE_NAME,t)},setAttributeForRoot:function(e){e.setAttribute(Dt.ROOT_ATTRIBUTE_NAME,"")},getValueForProperty:function(){},getValueForAttribute:function(){},setValueForProperty:function(e,t,n){var r=Dt.getPropertyInfo(t);if(r&&Dt.shouldSetAttribute(t,n)){var o=r.mutationMethod;o?o(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?Bn.deleteValueForProperty(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(o=r.attributeNamespace)?e.setAttributeNS(o,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else Bn.setValueForAttribute(e,t,Dt.shouldSetAttribute(t,n)?n:null)},setValueForAttribute:function(e,t,n){D(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))},deleteValueForAttribute:function(e,t){e.removeAttribute(t)},deleteValueForProperty:function(e,t){var n=Dt.getPropertyInfo(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}},Wn=Bn,Vn=Qt.ReactDebugCurrentFrame,zn={current:null,phase:null,resetCurrentFiber:function(){Vn.getCurrentStack=null,zn.current=null,zn.phase=null},setCurrentFiber:function(e,t){Vn.getCurrentStack=R,zn.current=e,zn.phase=t},getCurrentFiberOwnerName:function(){return null},getCurrentFiberStackAddendum:R},Kn=zn,$n={getHostProps:function(e,t){var n=t.value,r=t.checked;return yt({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})},initWrapperState:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}},updateWrapper:function(e,t){var n=t.checked;null!=n&&Wn.setValueForProperty(e,"checked",n||!1),n=t.value,null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(t=parseFloat(e.value)||0,(n!=t||n==t&&e.value!=n)&&(e.value=""+n)):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))},postMountWrapper:function(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}t=e.name,""!==t&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)},restoreControlledState:function(e,t){$n.updateWrapper(e,t);var n=t.name;if("radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(n=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),t=0;t<n.length;t++){var o=n[t];if(o!==e&&o.form===e.form){var i=qt.getFiberCurrentPropsFromNode(o);i||r("90"),$n.updateWrapper(o,i)}}}}},qn=$n,Yn={validateProps:function(){},postMountWrapper:function(e,t){null!=t.value&&e.setAttribute("value",t.value)},getHostProps:function(e,t){return e=yt({children:void 0},t),(t=L(t.children))&&(e.children=t),e}},Qn={getHostProps:function(e,t){return yt({},t,{value:void 0})},initWrapperState:function(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}},postMountWrapper:function(e,t){e.multiple=!!t.multiple;var n=t.value;null!=n?U(e,!!t.multiple,n):null!=t.defaultValue&&U(e,!!t.multiple,t.defaultValue)},postUpdateWrapper:function(e,t){e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!t.multiple;var r=t.value;null!=r?U(e,!!t.multiple,r):n!==!!t.multiple&&(null!=t.defaultValue?U(e,!!t.multiple,t.defaultValue):U(e,!!t.multiple,t.multiple?[]:""))},restoreControlledState:function(e,t){var n=t.value;null!=n&&U(e,!!t.multiple,n)}},Gn={getHostProps:function(e,t){return null!=t.dangerouslySetInnerHTML&&r("91"),yt({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})},initWrapperState:function(e,t){var n=t.value,o=n;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&r("92"),Array.isArray(t)&&(1>=t.length||r("93"),t=t[0]),n=""+t),null==n&&(n=""),o=n),e._wrapperState={initialValue:""+o}},updateWrapper:function(e,t){var n=t.value;null!=n&&(n=""+n,n!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)},postMountWrapper:function(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)},restoreControlledState:function(e,t){Gn.updateWrapper(e,t)}},Xn=Gn,Zn=yt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),Jn={_getTrackerFromNode:function(e){return e._valueTracker},track:function(e){e._valueTracker||(e._valueTracker=B(e))},updateValueIfChanged:function(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=j(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)},stopTracking:function(e){(e=e._valueTracker)&&e.stopTracking()}},er=Pt.Namespaces,tr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==er.svg||"innerHTML"in e)e.innerHTML=t;else for(Rn=Rn||document.createElement("div"),Rn.innerHTML="<svg>"+t+"</svg>",t=Rn.firstChild;t.firstChild;)e.appendChild(t.firstChild)}),nr=/["'&<>]/,rr=Lt.TEXT_NODE;mt.canUseDOM&&("textContent"in document.documentElement||(V=function(e,t){if(e.nodeType===rr)e.nodeValue=t;else{if("boolean"==typeof t||"number"==typeof t)t=""+t;else{t=""+t;var n=nr.exec(t);if(n){var r,o="",i=0;for(r=n.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#x27;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}i!==r&&(o+=t.substring(i,r)),i=r+1,o+=n}t=i!==r?o+t.substring(i,r):o}}tr(e,t)}}));var or=V,ir=(Kn.getCurrentFiberOwnerName,Lt.DOCUMENT_NODE),ar=Lt.DOCUMENT_FRAGMENT_NODE,lr=Nn.listenTo,ur=It.registrationNameModules,sr=Pt.Namespaces.html,cr=Pt.getIntrinsicNamespace,pr={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},dr={createElement:function(e,t,n,r){return n=n.nodeType===ir?n:n.ownerDocument,r===sr&&(r=cr(e)),r===sr?"script"===e?(e=n.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e},createTextNode:function(e,t){return(t.nodeType===ir?t:t.ownerDocument).createTextNode(e)},setInitialProperties:function(e,t,n,r){var o=W(t,n);switch(t){case"iframe":case"object":Nn.trapBubbledEvent("topLoad","load",e);var i=n;break;case"video":case"audio":for(i in pr)pr.hasOwnProperty(i)&&Nn.trapBubbledEvent(i,pr[i],e);i=n;break;case"source":Nn.trapBubbledEvent("topError","error",e),i=n;break;case"img":case"image":Nn.trapBubbledEvent("topError","error",e),Nn.trapBubbledEvent("topLoad","load",e),i=n;break;case"form":Nn.trapBubbledEvent("topReset","reset",e),Nn.trapBubbledEvent("topSubmit","submit",e),i=n;break;case"details":Nn.trapBubbledEvent("topToggle","toggle",e),i=n;break;case"input":qn.initWrapperState(e,n),i=qn.getHostProps(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(r,"onChange");break;case"option":Yn.validateProps(e,n),i=Yn.getHostProps(e,n);break;case"select":Qn.initWrapperState(e,n),i=Qn.getHostProps(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(r,"onChange");break;case"textarea":Xn.initWrapperState(e,n),i=Xn.getHostProps(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(r,"onChange");break;default:i=n}H(t,i);var a,l=i;for(a in l)if(l.hasOwnProperty(a)){var u=l[a];"style"===a?Ln.setValueForStyles(e,u):"dangerouslySetInnerHTML"===a?null!=(u=u?u.__html:void 0)&&tr(e,u):"children"===a?"string"==typeof u?or(e,u):"number"==typeof u&&or(e,""+u):"suppressContentEditableWarning"!==a&&(ur.hasOwnProperty(a)?null!=u&&z(r,a):o?Wn.setValueForAttribute(e,a,u):null!=u&&Wn.setValueForProperty(e,a,u))}switch(t){case"input":Jn.track(e),qn.postMountWrapper(e,n);break;case"textarea":Jn.track(e),Xn.postMountWrapper(e,n);break;case"option":Yn.postMountWrapper(e,n);break;case"select":Qn.postMountWrapper(e,n);break;default:"function"==typeof i.onClick&&(e.onclick=bt)}},diffProperties:function(e,t,n,r,o){var i=null;switch(t){case"input":n=qn.getHostProps(e,n),r=qn.getHostProps(e,r),i=[];break;case"option":n=Yn.getHostProps(e,n),r=Yn.getHostProps(e,r),i=[];break;case"select":n=Qn.getHostProps(e,n),r=Qn.getHostProps(e,r),i=[];break;case"textarea":n=Xn.getHostProps(e,n),r=Xn.getHostProps(e,r),i=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=bt)}H(t,r);var a,l;e=null;for(a in n)if(!r.hasOwnProperty(a)&&n.hasOwnProperty(a)&&null!=n[a])if("style"===a)for(l in t=n[a])t.hasOwnProperty(l)&&(e||(e={}),e[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&(ur.hasOwnProperty(a)?i||(i=[]):(i=i||[]).push(a,null));for(a in r){var u=r[a];if(t=null!=n?n[a]:void 0,r.hasOwnProperty(a)&&u!==t&&(null!=u||null!=t))if("style"===a)if(t){for(l in t)!t.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(e||(e={}),e[l]="");for(l in u)u.hasOwnProperty(l)&&t[l]!==u[l]&&(e||(e={}),e[l]=u[l])}else e||(i||(i=[]),i.push(a,e)),e=u;else"dangerouslySetInnerHTML"===a?(u=u?u.__html:void 0,t=t?t.__html:void 0,null!=u&&t!==u&&(i=i||[]).push(a,""+u)):"children"===a?t===u||"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(a,""+u):"suppressContentEditableWarning"!==a&&(ur.hasOwnProperty(a)?(null!=u&&z(o,a),i||t===u||(i=[])):(i=i||[]).push(a,u))}return e&&(i=i||[]).push("style",e),i},updateProperties:function(e,t,n,r,o){W(n,r),r=W(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?Ln.setValueForStyles(e,l):"dangerouslySetInnerHTML"===a?tr(e,l):"children"===a?or(e,l):r?null!=l?Wn.setValueForAttribute(e,a,l):Wn.deleteValueForAttribute(e,a):null!=l?Wn.setValueForProperty(e,a,l):Wn.deleteValueForProperty(e,a)}switch(n){case"input":qn.updateWrapper(e,o),Jn.updateValueIfChanged(e);break;case"textarea":Xn.updateWrapper(e,o);break;case"select":Qn.postUpdateWrapper(e,o)}},diffHydratedProperties:function(e,t,n,r,o){switch(t){case"iframe":case"object":Nn.trapBubbledEvent("topLoad","load",e);break;case"video":case"audio":for(var i in pr)pr.hasOwnProperty(i)&&Nn.trapBubbledEvent(i,pr[i],e);break;case"source":Nn.trapBubbledEvent("topError","error",e);break;case"img":case"image":Nn.trapBubbledEvent("topError","error",e),Nn.trapBubbledEvent("topLoad","load",e);break;case"form":Nn.trapBubbledEvent("topReset","reset",e),Nn.trapBubbledEvent("topSubmit","submit",e);break;case"details":Nn.trapBubbledEvent("topToggle","toggle",e);break;case"input":qn.initWrapperState(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(o,"onChange");break;case"option":Yn.validateProps(e,n);break;case"select":Qn.initWrapperState(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(o,"onChange");break;case"textarea":Xn.initWrapperState(e,n),Nn.trapBubbledEvent("topInvalid","invalid",e),z(o,"onChange")}H(t,n),r=null;for(var a in n)n.hasOwnProperty(a)&&(i=n[a],"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):ur.hasOwnProperty(a)&&null!=i&&z(o,a));switch(t){case"input":Jn.track(e),qn.postMountWrapper(e,n);break;case"textarea":Jn.track(e),Xn.postMountWrapper(e,n);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=bt)}return r},diffHydratedText:function(e,t){return e.nodeValue!==t},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":qn.restoreControlledState(e,n);break;case"textarea":Xn.restoreControlledState(e,n);break;case"select":Qn.restoreControlledState(e,n)}}},fr=void 0;if(mt.canUseDOM)if("function"!=typeof requestIdleCallback){var hr=null,gr=null,mr=!1,yr=!1,vr=0,br=33,Cr=33,kr={timeRemaining:"object"==typeof performance&&"function"==typeof performance.now?function(){return vr-performance.now()}:function(){return vr-Date.now()}},Er="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){e.source===window&&e.data===Er&&(mr=!1,e=gr,gr=null,null!==e&&e(kr))},!1);var wr=function(e){yr=!1;var t=e-vr+Cr;t<Cr&&br<Cr?(8>t&&(t=8),Cr=t<br?br:t):br=t,vr=e+Cr,mr||(mr=!0,window.postMessage(Er,"*")),t=hr,hr=null,null!==t&&t(e)};fr=function(e){return gr=e,yr||(yr=!0,requestAnimationFrame(wr)),0}}else fr=requestIdleCallback;else fr=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})}),0};var xr,Sr,Tr={rIC:fr},Pr={enableAsyncSubtreeAPI:!0},_r={NoWork:0,SynchronousPriority:1,TaskPriority:2,HighPriority:3,LowPriority:4,OffscreenPriority:5},Nr=Gt.Callback,Or=_r.NoWork,Ir=_r.SynchronousPriority,Ar=_r.TaskPriority,Fr=Rt.ClassComponent,Mr=Rt.HostRoot,Dr=void 0,Rr=void 0,Lr={addUpdate:function(e,t,n,r){Q(e,{priorityLevel:r,partialState:t,callback:n,isReplace:!1,isForced:!1,isTopLevelUnmount:!1,next:null})},addReplaceUpdate:function(e,t,n,r){Q(e,{priorityLevel:r,partialState:t,callback:n,isReplace:!0,isForced:!1,isTopLevelUnmount:!1,next:null})},addForceUpdate:function(e,t,n){Q(e,{priorityLevel:n,partialState:null,callback:t,isReplace:!1,isForced:!0,isTopLevelUnmount:!1,next:null})},getUpdatePriority:function(e){var t=e.updateQueue;return null===t||e.tag!==Fr&&e.tag!==Mr?Or:null!==t.first?t.first.priorityLevel:Or},addTopLevelUpdate:function(e,t,n,r){var o=null===t.element;t={priorityLevel:r,partialState:t,callback:n,isReplace:!1,isForced:!1,isTopLevelUnmount:o,next:null},e=Q(e,t),o&&(o=Dr,n=Rr,null!==o&&null!==t.next&&(t.next=null,o.last=t),null!==n&&null!==e&&null!==e.next&&(e.next=null,n.last=t))},beginUpdateQueue:function(e,t,n,r,o,i,a){null!==e&&e.updateQueue===n&&(n=t.updateQueue={first:n.first,last:n.last,callbackList:null,hasForceUpdate:!1}),e=n.callbackList;for(var l=n.hasForceUpdate,u=!0,s=n.first;null!==s&&0>=K(s.priorityLevel,a);){n.first=s.next,null===n.first&&(n.last=null);var c;s.isReplace?(o=G(s,r,o,i),u=!0):(c=G(s,r,o,i))&&(o=u?yt({},o,c):yt(o,c),u=!1),s.isForced&&(l=!0),null===s.callback||s.isTopLevelUnmount&&null!==s.next||(e=null!==e?e:[],e.push(s.callback),t.effectTag|=Nr),s=s.next}return n.callbackList=e,n.hasForceUpdate=l,null!==n.first||null!==e||l||(t.updateQueue=null),o},commitCallbacks:function(e,t,n){if(null!==(e=t.callbackList))for(t.callbackList=null,t=0;t<e.length;t++){var o=e[t];"function"!=typeof o&&r("191",o),o.call(n)}}},Ur=[],Hr=-1,jr={createCursor:function(e){return{current:e}},isEmpty:function(){return-1===Hr},pop:function(e){0>Hr||(e.current=Ur[Hr],Ur[Hr]=null,Hr--)},push:function(e,t){Hr++,Ur[Hr]=e.current,e.current=t},reset:function(){for(;-1<Hr;)Ur[Hr]=null,Hr--}},Br=rn.isFiberMounted,Wr=Rt.ClassComponent,Vr=Rt.HostRoot,zr=jr.createCursor,Kr=jr.pop,$r=jr.push,qr=zr(Ct),Yr=zr(!1),Qr=Ct,Gr={getUnmaskedContext:function(e){return Z(e)?Qr:qr.current},cacheContext:X,getMaskedContext:function(e,t){var n=e.type.contextTypes;if(!n)return Ct;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&X(e,t,i),i},hasContextChanged:function(){return Yr.current},isContextConsumer:function(e){return e.tag===Wr&&null!=e.type.contextTypes},isContextProvider:Z,popContextProvider:function(e){Z(e)&&(Kr(Yr,e),Kr(qr,e))},popTopLevelContextObject:function(e){Kr(Yr,e),Kr(qr,e)},pushTopLevelContextObject:function(e,t,n){null!=qr.cursor&&r("168"),$r(qr,t,e),$r(Yr,n,e)},processChildContext:J,pushContextProvider:function(e){if(!Z(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Ct,Qr=qr.current,$r(qr,t,e),$r(Yr,Yr.current,e),!0},invalidateContextProvider:function(e,t){var n=e.stateNode;if(n||r("169"),t){var o=J(e,Qr);n.__reactInternalMemoizedMergedChildContext=o,Kr(Yr,e),Kr(qr,e),$r(qr,o,e)}else Kr(Yr,e);$r(Yr,t,e)},resetContext:function(){Qr=Ct,qr.current=Ct,Yr.current=!1},findCurrentUnmaskedContext:function(e){for(Br(e)&&e.tag===Wr?void 0:r("170");e.tag!==Vr;){if(Z(e))return e.stateNode.__reactInternalMemoizedMergedChildContext;(e=e.return)||r("171")}return e.stateNode.context}},Xr={NoContext:0,AsyncUpdates:1},Zr=Rt.IndeterminateComponent,Jr=Rt.ClassComponent,eo=Rt.HostRoot,to=Rt.HostComponent,no=Rt.HostText,ro=Rt.HostPortal,oo=Rt.CoroutineComponent,io=Rt.YieldComponent,ao=Rt.Fragment,lo=_r.NoWork,uo=Xr.NoContext,so=Gt.NoEffect,co={createWorkInProgress:function(e,t){var n=e.alternate;return null===n?(n=new ee(e.tag,e.key,e.internalContextTag),n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.effectTag=so,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.pendingWorkPriority=t,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n},createHostRootFiber:function(){return new ee(eo,null,uo)},createFiberFromElement:function(e,t,n){return t=te(e.type,e.key,t),t.pendingProps=e.props,t.pendingWorkPriority=n,t},createFiberFromFragment:function(e,t,n){return t=new ee(ao,null,t),t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromText:function(e,t,n){return t=new ee(no,null,t),t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromElementType:te,createFiberFromHostInstanceForDeletion:function(){var e=new ee(to,null,uo);return e.type="DELETED",e},createFiberFromCoroutine:function(e,t,n){return t=new ee(oo,e.key,t),t.type=e.handler,t.pendingProps=e,t.pendingWorkPriority=n,t},createFiberFromYield:function(e,t){return new ee(io,null,t)},createFiberFromPortal:function(e,t,n){return t=new ee(ro,e.key,t),t.pendingProps=e.children||[],t.pendingWorkPriority=n,t.stateNode={containerInfo:e.containerInfo,implementation:e.implementation},t},largerPriority:function(e,t){return e!==lo&&(t===lo||t>e)?e:t}},po=co.createHostRootFiber,fo=Rt.IndeterminateComponent,ho=Rt.FunctionalComponent,go=Rt.ClassComponent,mo=Rt.HostComponent;"function"==typeof Symbol&&Symbol.for?(xr=Symbol.for("react.coroutine"),Sr=Symbol.for("react.yield")):(xr=60104,Sr=60105);var yo={createCoroutine:function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:xr,key:null==r?null:""+r,children:e,handler:t,props:n}},createYield:function(e){return{$$typeof:Sr,value:e}},isCoroutine:function(e){return"object"==typeof e&&null!==e&&e.$$typeof===xr},isYield:function(e){return"object"==typeof e&&null!==e&&e.$$typeof===Sr},REACT_YIELD_TYPE:Sr,REACT_COROUTINE_TYPE:xr},vo="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.portal")||60106,bo={createPortal:function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:vo,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}},isPortal:function(e){return"object"==typeof e&&null!==e&&e.$$typeof===vo},REACT_PORTAL_TYPE:vo},Co=yo.REACT_COROUTINE_TYPE,ko=yo.REACT_YIELD_TYPE,Eo=bo.REACT_PORTAL_TYPE,wo=co.createWorkInProgress,xo=co.createFiberFromElement,So=co.createFiberFromFragment,To=co.createFiberFromText,Po=co.createFiberFromCoroutine,_o=co.createFiberFromYield,No=co.createFiberFromPortal,Oo=Array.isArray,Io=Rt.FunctionalComponent,Ao=Rt.ClassComponent,Fo=Rt.HostText,Mo=Rt.HostPortal,Do=Rt.CoroutineComponent,Ro=Rt.YieldComponent,Lo=Rt.Fragment,Uo=Gt.NoEffect,Ho=Gt.Placement,jo=Gt.Deletion,Bo="function"==typeof Symbol&&Symbol.iterator,Wo="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,Vo=ie(!0,!0),zo=ie(!1,!0),Ko=ie(!1,!1),$o={reconcileChildFibers:Vo,reconcileChildFibersInPlace:zo,mountChildFibersInPlace:Ko,cloneChildFibers:function(e,t){if(null!==e&&t.child!==e.child&&r("153"),null!==t.child){e=t.child;var n=wo(e,e.pendingWorkPriority);for(n.pendingProps=e.pendingProps,t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=wo(e,e.pendingWorkPriority),n.pendingProps=e.pendingProps,n.return=t;n.sibling=null}}},qo=Gt.Update,Yo=Xr.AsyncUpdates,Qo=Gr.cacheContext,Go=Gr.getMaskedContext,Xo=Gr.getUnmaskedContext,Zo=Gr.isContextConsumer,Jo=Lr.addUpdate,ei=Lr.addReplaceUpdate,ti=Lr.addForceUpdate,ni=Lr.beginUpdateQueue,ri=Gr.hasContextChanged,oi=rn.isMounted,ii=$o.mountChildFibersInPlace,ai=$o.reconcileChildFibers,li=$o.reconcileChildFibersInPlace,ui=$o.cloneChildFibers,si=Lr.beginUpdateQueue,ci=Gr.getMaskedContext,pi=Gr.getUnmaskedContext,di=Gr.hasContextChanged,fi=Gr.pushContextProvider,hi=Gr.pushTopLevelContextObject,gi=Gr.invalidateContextProvider,mi=Rt.IndeterminateComponent,yi=Rt.FunctionalComponent,vi=Rt.ClassComponent,bi=Rt.HostRoot,Ci=Rt.HostComponent,ki=Rt.HostText,Ei=Rt.HostPortal,wi=Rt.CoroutineComponent,xi=Rt.CoroutineHandlerPhase,Si=Rt.YieldComponent,Ti=Rt.Fragment,Pi=_r.NoWork,_i=_r.OffscreenPriority,Ni=Gt.PerformedWork,Oi=Gt.Placement,Ii=Gt.ContentReset,Ai=Gt.Err,Fi=Gt.Ref,Mi=Qt.ReactCurrentOwner,Di=$o.reconcileChildFibers,Ri=Gr.popContextProvider,Li=Gr.popTopLevelContextObject,Ui=Rt.IndeterminateComponent,Hi=Rt.FunctionalComponent,ji=Rt.ClassComponent,Bi=Rt.HostRoot,Wi=Rt.HostComponent,Vi=Rt.HostText,zi=Rt.HostPortal,Ki=Rt.CoroutineComponent,$i=Rt.CoroutineHandlerPhase,qi=Rt.YieldComponent,Yi=Rt.Fragment,Qi=Gt.Placement,Gi=Gt.Ref,Xi=Gt.Update,Zi=_r.OffscreenPriority,Ji=null,ea=null,ta={injectInternals:function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!t.supportsFiber)return!0;try{var n=t.inject(e);Ji=se(function(e){return t.onCommitFiberRoot(n,e)}),ea=se(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0},onCommitRoot:function(e){"function"==typeof Ji&&Ji(e)},onCommitUnmount:function(e){"function"==typeof ea&&ea(e)}},na=Rt.ClassComponent,ra=Rt.HostRoot,oa=Rt.HostComponent,ia=Rt.HostText,aa=Rt.HostPortal,la=Rt.CoroutineComponent,ua=Lr.commitCallbacks,sa=ta.onCommitUnmount,ca=Gt.Placement,pa=Gt.Update,da=Gt.Callback,fa=Gt.ContentReset,ha=jr.createCursor,ga=jr.pop,ma=jr.push,ya={},va=Rt.HostComponent,ba=Rt.HostText,Ca=Rt.HostRoot,ka=Gt.Deletion,Ea=Gt.Placement,wa=co.createFiberFromHostInstanceForDeletion,xa=Gr.popContextProvider,Sa=jr.reset,Ta=Qt.ReactCurrentOwner,Pa=co.createWorkInProgress,_a=co.largerPriority,Na=ta.onCommitRoot,Oa=_r.NoWork,Ia=_r.SynchronousPriority,Aa=_r.TaskPriority,Fa=_r.HighPriority,Ma=_r.LowPriority,Da=_r.OffscreenPriority,Ra=Xr.AsyncUpdates,La=Gt.PerformedWork,Ua=Gt.Placement,Ha=Gt.Update,ja=Gt.PlacementAndUpdate,Ba=Gt.Deletion,Wa=Gt.ContentReset,Va=Gt.Callback,za=Gt.Err,Ka=Gt.Ref,$a=Rt.HostRoot,qa=Rt.HostComponent,Ya=Rt.HostPortal,Qa=Rt.ClassComponent,Ga=Lr.getUpdatePriority,Xa=Gr.resetContext;ge._injectFiber=function(e){he=e};var Za=Lr.addTopLevelUpdate,Ja=Gr.findCurrentUnmaskedContext,el=Gr.isContextProvider,tl=Gr.processChildContext,nl=Rt.HostComponent,rl=rn.findCurrentHostFiber,ol=rn.findCurrentHostFiberWithNoPortals;ge._injectFiber(function(e){var t=Ja(e);return el(e)?tl(e,t,!1):t});var il=Lt.TEXT_NODE,al=null,ll={getOffsets:function(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,r=t.anchorOffset,o=t.focusNode,i=t.focusOffset,a=t.getRangeAt(0);try{a.startContainer.nodeType,a.endContainer.nodeType}catch(e){return null}t=t.anchorNode===t.focusNode&&t.anchorOffset===t.focusOffset?0:a.toString().length;var l=a.cloneRange();return l.selectNodeContents(e),l.setEnd(a.startContainer,a.startOffset),e=l.startContainer===l.endContainer&&l.startOffset===l.endOffset?0:l.toString().length,a=e+t,t=document.createRange(),t.setStart(n,r),t.setEnd(o,i),n=t.collapsed,{start:n?a:e,end:n?e:a}},setOffsets:function(e,t){if(window.getSelection){var n=window.getSelection(),r=e[ve()].length,o=Math.min(t.start,r);if(t=void 0===t.end?o:Math.min(t.end,r),!n.extend&&o>t&&(r=t,t=o,o=r),r=ye(e,o),e=ye(e,t),r&&e){var i=document.createRange();i.setStart(r.node,r.offset),n.removeAllRanges(),o>t?(n.addRange(i),n.extend(e.node,e.offset)):(i.setEnd(e.node,e.offset),n.addRange(i))}}}},ul=Lt.ELEMENT_NODE,sl={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=xt();return{focusedElem:e,selectionRange:sl.hasSelectionCapabilities(e)?sl.getSelection(e):null}},restoreSelection:function(e){var t=xt(),n=e.focusedElem;if(e=e.selectionRange,t!==n&&Et(document.documentElement,n)){for(sl.hasSelectionCapabilities(n)&&sl.setSelection(n,e),t=[],e=n;e=e.parentNode;)e.nodeType===ul&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(wt(n),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}},getSelection:function(e){return("selectionStart"in e?{start:e.selectionStart,end:e.selectionEnd}:ll.getOffsets(e))||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;void 0===r&&(r=n),"selectionStart"in e?(e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length)):ll.setOffsets(e,t)}},cl=sl,pl=Lt.ELEMENT_NODE;ke._injectFiber=function(e){be=e},ke._injectStack=function(e){Ce=e};var dl=Rt.HostComponent,fl={isAncestor:function(e,t){for(;t;){if(e===t||e===t.alternate)return!0;t=Ee(t)}return!1},getLowestCommonAncestor:we,getParentInstance:function(e){return Ee(e)},traverseTwoPhase:function(e,t,n){for(var r=[];e;)r.push(e),e=Ee(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)},traverseEnterLeave:function(e,t,n,r,o){for(var i=e&&t?we(e,t):null,a=[];e&&e!==i;)a.push(e),e=Ee(e);for(e=[];t&&t!==i;)e.push(t),t=Ee(t);for(t=0;t<a.length;t++)n(a[t],"bubbled",r);for(t=e.length;0<t--;)n(e[t],"captured",o)}},hl=kn.getListener,gl={accumulateTwoPhaseDispatches:function(e){T(e,Se)},accumulateTwoPhaseDispatchesSkipTarget:function(e){T(e,Te)},accumulateDirectDispatches:function(e){T(e,_e)},accumulateEnterLeaveDispatches:function(e,t,n,r){fl.traverseEnterLeave(n,r,Pe,e,t)}},ml={_root:null,_startText:null,_fallbackText:null},yl={initialize:function(e){return ml._root=e,ml._startText=yl.getText(),!0},reset:function(){ml._root=null,ml._startText=null,ml._fallbackText=null},getData:function(){if(ml._fallbackText)return ml._fallbackText;var e,t,n=ml._startText,r=n.length,o=yl.getText(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return ml._fallbackText=o.slice(e,1<t?1-t:void 0),ml._fallbackText},getText:function(){return"value"in ml._root?ml._root.value:ml._root[ve()]}},vl=yl,bl="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Cl={type:null,target:null,currentTarget:bt.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};yt(Ne.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=bt.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=bt.thatReturnsTrue)},persist:function(){this.isPersistent=bt.thatReturnsTrue},isPersistent:bt.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<bl.length;t++)this[bl[t]]=null}}),Ne.Interface=Cl,Ne.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;yt(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=yt({},this.Interface,t),e.augmentClass=this.augmentClass,Ae(e)},Ae(Ne),Ne.augmentClass(Fe,{data:null}),Ne.augmentClass(Me,{data:null});var kl=[9,13,27,32],El=mt.canUseDOM&&"CompositionEvent"in window,wl=null;mt.canUseDOM&&"documentMode"in document&&(wl=document.documentMode);var xl;if(xl=mt.canUseDOM&&"TextEvent"in window&&!wl){var Sl=window.opera;xl=!("object"==typeof Sl&&"function"==typeof Sl.version&&12>=parseInt(Sl.version(),10))}var Tl=xl,Pl=mt.canUseDOM&&(!El||wl&&8<wl&&11>=wl),_l=String.fromCharCode(32),Nl={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Ol=!1,Il=!1,Al={eventTypes:Nl,extractEvents:function(e,t,n,r){var o;if(El)e:{switch(e){case"topCompositionStart":var i=Nl.compositionStart;break e;case"topCompositionEnd":i=Nl.compositionEnd;break e;case"topCompositionUpdate":i=Nl.compositionUpdate;break e}i=void 0}else Il?De(e,n)&&(i=Nl.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(i=Nl.compositionStart);return i?(Pl&&(Il||i!==Nl.compositionStart?i===Nl.compositionEnd&&Il&&(o=vl.getData()):Il=vl.initialize(r)),i=Fe.getPooled(i,t,n,r),o?i.data=o:null!==(o=Re(n))&&(i.data=o),gl.accumulateTwoPhaseDispatches(i),o=i):o=null,(e=Tl?Le(e,n):Ue(e,n))?(t=Me.getPooled(Nl.beforeInput,t,n,r),t.data=e,gl.accumulateTwoPhaseDispatches(t)):t=null,[o,t]}},Fl={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},Ml={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}},Dl=null,Rl=null,Ll=!1;mt.canUseDOM&&(Ll=I("input")&&(!document.documentMode||9<document.documentMode));var Ul={eventTypes:Ml,_isInputEventSupported:Ll,extractEvents:function(e,t,n,r){var o=t?qt.getNodeFromInstance(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Ve;else if(He(o))if(Ll)a=Qe;else{a=qe;var l=$e}else!(i=o.nodeName)||"input"!==i.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(a=Ye);if(a&&(a=a(e,t)))return je(a,n,r);l&&l(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&(e=""+o.value,o.getAttribute("value")!==e&&o.setAttribute("value",e))}};Ne.augmentClass(Ge,{view:function(e){return e.view?e.view:(e=w(e),e.window===e?e:(e=e.ownerDocument)?e.defaultView||e.parentWindow:window)},detail:function(e){return e.detail||0}});var Hl={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};Ge.augmentClass(Je,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ze,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var jl={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Bl={eventTypes:jl,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?qt.getClosestInstanceFromNode(t):null):e=null,e===t)return null;var i=null==e?o:qt.getNodeFromInstance(e);o=null==t?o:qt.getNodeFromInstance(t);var a=Je.getPooled(jl.mouseLeave,e,n,r);return a.type="mouseleave",a.target=i,a.relatedTarget=o,n=Je.getPooled(jl.mouseEnter,t,n,r),n.type="mouseenter",n.target=o,n.relatedTarget=i,gl.accumulateEnterLeaveDispatches(a,n,e,t),[a,n]}},Wl=Lt.DOCUMENT_NODE,Vl=mt.canUseDOM&&"documentMode"in document&&11>=document.documentMode,zl={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Kl=null,$l=null,ql=null,Yl=!1,Ql=Nn.isListeningToAllDependencies,Gl={eventTypes:zl,extractEvents:function(e,t,n,r){var o=r.window===r?r.document:r.nodeType===Wl?r:r.ownerDocument;if(!o||!Ql("onSelect",o))return null;switch(o=t?qt.getNodeFromInstance(t):window,e){case"topFocus":(He(o)||"true"===o.contentEditable)&&(Kl=o,$l=t,ql=null);break;case"topBlur":ql=$l=Kl=null;break;case"topMouseDown":Yl=!0;break;case"topContextMenu":case"topMouseUp":return Yl=!1,et(n,r);case"topSelectionChange":if(Vl)break;case"topKeyDown":case"topKeyUp":return et(n,r)}return null}};Ne.augmentClass(tt,{animationName:null,elapsedTime:null,pseudoElement:null}),Ne.augmentClass(nt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Ge.augmentClass(rt,{relatedTarget:null});var Xl={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zl={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};Ge.augmentClass(it,{key:function(e){if(e.key){var t=Xl[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=ot(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?Zl[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ze,charCode:function(e){return"keypress"===e.type?ot(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ot(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Je.augmentClass(at,{dataTransfer:null}),Ge.augmentClass(lt,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ze}),Ne.augmentClass(ut,{propertyName:null,elapsedTime:null,pseudoElement:null}),Je.augmentClass(st,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var Jl={},eu={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;t="top"+t,n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t]},Jl[e]=n,eu[t]=n});var tu={eventTypes:Jl,extractEvents:function(e,t,n,o){var i=eu[e];if(!i)return null;switch(e){case"topAbort":case"topCancel":case"topCanPlay":case"topCanPlayThrough":case"topClose":case"topDurationChange":case"topEmptied":case"topEncrypted":case"topEnded":case"topError":case"topInput":case"topInvalid":case"topLoad":case"topLoadedData":case"topLoadedMetadata":case"topLoadStart":case"topPause":case"topPlay":case"topPlaying":case"topProgress":case"topRateChange":case"topReset":case"topSeeked":case"topSeeking":case"topStalled":case"topSubmit":case"topSuspend":case"topTimeUpdate":case"topToggle":case"topVolumeChange":case"topWaiting":var a=Ne;break;case"topKeyPress":if(0===ot(n))return null;case"topKeyDown":case"topKeyUp":a=it;break;case"topBlur":case"topFocus":a=rt;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":a=Je;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":a=at;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":a=lt;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":a=tt;break;case"topTransitionEnd":a=ut;break;case"topScroll":a=Ge;break;case"topWheel":a=st;break;case"topCopy":case"topCut":case"topPaste":a=nt}return a||r("86",e),e=a.getPooled(i,t,n,o),gl.accumulateTwoPhaseDispatches(e),e}};bn.setHandleTopLevel(Nn.handleTopLevel),kn.injection.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),un.injection.injectComponentTree(qt),kn.injection.injectEventPluginsByName({SimpleEventPlugin:tu,EnterLeaveEventPlugin:Bl,ChangeEventPlugin:Ul,SelectEventPlugin:Gl,BeforeInputEventPlugin:Al});var nu=Dt.injection.MUST_USE_PROPERTY,ru=Dt.injection.HAS_BOOLEAN_VALUE,ou=Dt.injection.HAS_NUMERIC_VALUE,iu=Dt.injection.HAS_POSITIVE_NUMERIC_VALUE,au=Dt.injection.HAS_STRING_BOOLEAN_VALUE,lu={Properties:{allowFullScreen:ru,allowTransparency:au,async:ru,autoPlay:ru,capture:ru,checked:nu|ru,cols:iu,contentEditable:au,controls:ru,default:ru,defer:ru,disabled:ru,download:Dt.injection.HAS_OVERLOADED_BOOLEAN_VALUE,draggable:au,formNoValidate:ru,hidden:ru,loop:ru,multiple:nu|ru,muted:nu|ru,noValidate:ru,open:ru,playsInline:ru,readOnly:ru,required:ru,reversed:ru,rows:iu,rowSpan:ou,scoped:ru,seamless:ru,selected:nu|ru,size:iu,start:ou,span:iu,spellCheck:au,style:0,itemScope:ru,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:au},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},uu=Dt.injection.HAS_STRING_BOOLEAN_VALUE,su={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},cu={Properties:{autoReverse:uu,externalResourcesRequired:uu,preserveAlpha:uu},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:su.xlink,xlinkArcrole:su.xlink,xlinkHref:su.xlink,xlinkRole:su.xlink,xlinkShow:su.xlink,xlinkTitle:su.xlink,xlinkType:su.xlink,xmlBase:su.xml,xmlLang:su.xml,xmlSpace:su.xml}},pu=/[\-\:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(pu,ct);cu.Properties[t]=0,cu.DOMAttributeNames[t]=e}),Dt.injection.injectDOMPropertyConfig(lu),Dt.injection.injectDOMPropertyConfig(cu);var du=ta.injectInternals,fu=Lt.ELEMENT_NODE,hu=Lt.TEXT_NODE,gu=Lt.COMMENT_NODE,mu=Lt.DOCUMENT_NODE,yu=Lt.DOCUMENT_FRAGMENT_NODE,vu=Dt.ROOT_ATTRIBUTE_NAME,bu=Pt.getChildNamespace,Cu=dr.createElement,ku=dr.createTextNode,Eu=dr.setInitialProperties,wu=dr.diffProperties,xu=dr.updateProperties,Su=dr.diffHydratedProperties,Tu=dr.diffHydratedText,Pu=dr.warnForDeletedHydratableElement,_u=dr.warnForDeletedHydratableText,Nu=dr.warnForInsertedHydratedElement,Ou=dr.warnForInsertedHydratedText,Iu=qt.precacheFiberNode,Au=qt.updateFiberProps;dn.injection.injectFiberControlledHostComponent(dr),ke._injectFiber(function(e){return Du.findHostInstance(e)});var Fu=null,Mu=null,Du=function(e){var t=e.getPublicInstance;e=fe(e);var n=e.scheduleUpdate,r=e.getPriorityContext;return{createContainer:function(e){var t=po();return e={current:t,containerInfo:e,isScheduled:!1,nextScheduledRoot:null,context:null,pendingContext:null},t.stateNode=e},updateContainer:function(e,t,o,i){var a=t.current;o=ge(o),null===t.context?t.context=o:t.pendingContext=o,t=i,i=r(a,Pr.enableAsyncSubtreeAPI&&null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent),e={element:e},Za(a,e,void 0===t?null:t,i),n(a,i)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case nl:return t(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:function(e){return e=rl(e),null===e?null:e.stateNode},findHostInstanceWithNoPortals:function(e){return e=ol(e),null===e?null:e.stateNode}}}({getRootHostContext:function(e){if(e.nodeType===mu)e=(e=e.documentElement)?e.namespaceURI:bu(null,"");else{var t=e.nodeType===gu?e.parentNode:e;e=t.namespaceURI||null,t=t.tagName,e=bu(e,t)}return e},getChildHostContext:function(e,t){return bu(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){Fu=Nn.isEnabled(),Mu=cl.getSelectionInformation(),Nn.setEnabled(!1)},resetAfterCommit:function(){cl.restoreSelection(Mu),Mu=null,Nn.setEnabled(Fu),Fu=null},createInstance:function(e,t,n,r,o){return e=Cu(e,t,n,r),Iu(o,e),Au(e,t),e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){Eu(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,o){return wu(e,t,n,r,o)},commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,o){Au(e,o),xu(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},resetTextContent:function(e){e.textContent=""},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return e=ku(e,t),Iu(r,e),e},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){e.nodeType===gu?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){e.nodeType===gu?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){e.nodeType===gu?e.parentNode.removeChild(t):e.removeChild(t)},canHydrateInstance:function(e,t){return e.nodeType===fu&&t===e.nodeName.toLowerCase()},canHydrateTextInstance:function(e,t){return""!==t&&e.nodeType===hu},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&e.nodeType!==fu&&e.nodeType!==hu;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&e.nodeType!==fu&&e.nodeType!==hu;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,i){return Iu(i,e),Au(e,n),Su(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return Iu(n,e),Tu(e,t)},didNotHydrateInstance:function(e,t){1===t.nodeType?Pu(e,t):_u(e,t)},didNotFindHydratableInstance:function(e,t,n){Nu(e,t,n)},didNotFindHydratableTextInstance:function(e,t){Ou(e,t)},scheduleDeferredCallback:Tr.rIC,useSyncScheduling:!0});hn.injection.injectFiberBatchedUpdates(Du.batchedUpdates);var Ru={createPortal:ht,hydrate:function(e,t,n){return ft(null,e,t,!0,n)},render:function(e,t,n){return ft(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,o){return null!=e&&Yt.has(e)||r("38"),ft(e,t,n,!1,o)},unmountComponentAtNode:function(e){return pt(e)||r("40"),!!e._reactRootContainer&&(Du.unbatchedUpdates(function(){ft(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},findDOMNode:ke,unstable_createPortal:ht,unstable_batchedUpdates:hn.batchedUpdates,unstable_deferredUpdates:Du.deferredUpdates,flushSync:Du.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:kn,EventPluginRegistry:It,EventPropagators:gl,ReactControlledComponent:dn,ReactDOMComponentTree:qt,ReactDOMEventListener:bn}};du({findFiberByHostInstance:qt.getClosestInstanceFromNode,findHostInstanceByFiber:Du.findHostInstance,bundleType:0,version:"16.0.0",rendererPackageName:"react-dom"}),e.exports=Ru},function(e,t,n){"use strict";function r(e,t,n,r,i,a,l,u){if(o(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,a,l,u],p=0;s=new Error(t.replace(/%s/g,function(){return c[p++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}var o=function(e){};e.exports=r},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";var r=n(2),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=o},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!==e&&t!==t}function o(e,t){if(r(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var a=0;a<n.length;a++)if(!i.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var i=Object.prototype.hasOwnProperty;e.exports=o},function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!o(e)&&(o(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var o=n(16);e.exports=r},function(e,t,n){"use strict";function r(e){return o(e)&&3==e.nodeType}var o=n(17);e.exports=r},function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"==typeof n.Node?e instanceof n.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=r},function(e,t,n){"use strict";function r(e){try{e.focus()}catch(e){}}e.exports=r},function(e,t,n){"use strict";function r(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function i(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=function(){function e(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=n(0),f=r(d),h=n(3),g=n(21),m=r(g),y=n(4),v=function(e,t){return(e%t+t)%t},b=function(e,t){return Math.max(0,Math.min(t,e))},C=function(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?v(e,t):b(e,t-1)},k=function(e){function t(e){a(this,t);var n=l(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.eventListeners=[],n.isScrolling=!1,n.canSelfCorrect=function(){return!(n.props.preventAutoCorrect||n.state.isAnimating||n.isScrolling||n.isInteracting())},n.shouldSelfCorrect=function(){return n.props.snapToSlide&&n.canSelfCorrect()},n.handleKeyUp=function(e,t){return function(r){var o=r.key,i=(0,y.includes)(o,e),a=(0,y.includes)(o,t);return n.setState({isAnimating:!0}),i&&n.next().catch(y.noop),a&&n.prev().catch(y.noop),!1}}(n.props.nextKeys,n.props.prevKeys),n.getPartiallyObscuredSlides=function(){var e=n.whirligig,t=[].concat(i(e.children)).findIndex(function(t,n,r){return!(0,y.isWhollyInView)(e)(t)&&(0,y.isWhollyInView)(e)(r[n+1])}),r=Math.max(t,0),o=[].concat(i(e.children)).findIndex(function(t,n,r){return!(0,y.isWhollyInView)(e)(t)&&(0,y.isWhollyInView)(e)(r[n-1])});return[r,Math.max(o,0)||e.children.length-1]},n.getNearestSlideIndex=function(){var e=n.whirligig,t=e.children,r=e.scrollLeft,o=[].slice.call(t).map(function(e){var t=e.offsetLeft;return Math.abs(t-r)});return o.indexOf(Math.min.apply(Math,i(o)))},n.setRef=function(e){return function(t){n[e]=t}},n.state={activeIndex:e.startAt,isAnimating:!1,visibleSlides:n.props.visibleSlides||0,slideBy:n.props.slideBy||n.props.visibleSlides||0},n.next=n.next.bind(n),n.prev=n.prev.bind(n),n.slideTo=n.slideTo.bind(n),n}return u(t,e),p(t,[{key:"componentDidMount",value:function(){var e=this;this.DOMNode=(0,h.findDOMNode)(this.whirligig),this.isInteracting=(0,y.hasOngoingInteraction)(this.DOMNode),this.childCount=this.whirligig&&this.whirligig.children?this.whirligig.children.length:0;var t={left:function(){return-e.state.slideBy},right:function(){return e.state.slideBy},up:function(){return 0},down:function(){return 0}};this.eventListeners=[].concat(i(this.eventListeners),[(0,y.onScrollStart)(function(){e.isScrolling=!0}),(0,y.on)("touchstart")(function(){e.isScrolling=!0})(this.whirligig),(0,y.onScrollEnd)(function(){e.isScrolling=!1,e.canSelfCorrect()&&(e.props.snapToSlide?e.slideTo(e.getNearestSlideIndex()).catch(y.noop):e.props.afterSlide(e.getNearestSlideIndex()))},{target:this.DOMNode}),(0,y.on)("touchend")(function(){e.canSelfCorrect()&&(e.props.snapToSlide?e.slideTo(e.getNearestSlideIndex()).catch(y.noop):e.props.afterSlide(e.getNearestSlideIndex()))})(this.whirligig),(0,y.onSwipe)(function(n){!e.props.preventSwipe&&e.props.snapToSlide&&e.slideTo(e.state.activeIndex+t[n]()).catch(y.noop)})(this.whirligig)]),this.slideTo(this.props.startAt,{immediate:!0}).catch(y.noop)}},{key:"componentWillUnmount",value:function(){this.eventListeners.forEach(function(e){return e()})}},{key:"componentWillReceiveProps",value:function(e){var t=e.slideBy,n=e.visibleSlides;t===this.props.slideBy&&n===this.props.visibleSlides||this.setState({slideBy:t||n||1})}},{key:"componentDidUpdate",value:function(e){if(this.childCount=this.whirligig&&this.whirligig.children?this.whirligig.children.length:0,this.shouldSelfCorrect()){this.getNearestSlideIndex()!==this.state.activeIndex&&this.slideTo(this.getNearestSlideIndex()).catch(y.noop)}e.slideTo!==this.props.slideTo&&this.slideTo(this.props.slideTo).catch(y.noop)}},{key:"shouldComponentUpdate",value:function(e,t){var n=t.isAnimating,r=[].concat(i((0,y.values)(this.props)),[this.state.isAnimating]);return![].concat(i((0,y.values)(e)),[n]).every(function(e,t){return e===r[t]})}},{key:"next",value:function(){var e=this.childCount,t=this.props,n=this.state,r=n.activeIndex,o=n.slideBy,i=t.infinite,a=e-o;if(!o){var l=this.getPartiallyObscuredSlides(),u=c(l,2),s=(u[0],u[1]),p=s===e-1?0:s;return this.slideTo(i?p:s)}var d=r+o,f=Math.min(d,a),h=r===a?0:f;return this.slideTo(i?h:f)}},{key:"prev",value:function(){var e=this.childCount,t=this.state,n=this.props,r=t.activeIndex,o=t.slideBy,i=n.infinite,a=e-o;if(!o){var l=Math.max(r-1,0),u=l===r?e-1:l;return this.slideTo(i?u:l)}var s=Math.max(r-o,0),c=0===r?a:s;return this.slideTo(i?c:s)}},{key:"slideTo",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=n.immediate,o=void 0!==r&&r;if(0===this.childCount)return Promise.reject("No children to slide to");if(!this.whirligig)return Promise.reject("The Whirligig is not mounted");var i=this.props,a=i.afterSlide,l=i.beforeSlide,u=i.easing,s=i.animationDuration,c=i.infinite,p=i.preventScroll,d=this.whirligig,f=d.children,h=d.scrollLeft,g=C(e,this.childCount,c),m=this.state.activeIndex,v=f[g].offsetLeft-h;return m!==g&&l(e),this.setState({isAnimating:!0,activeIndex:g}),new Promise(function(e,n){if(o)return t.whirligig.scrollLeft=f[g].offsetLeft,e();var r=p?"hidden":"auto";return e((0,y.animate)(t.whirligig,{prop:"scrollLeft",delta:v,easing:u,duration:s,originalOverflowX:r}))}).then(function(){if(t.setState({isAnimating:!1}),m!==g)return a(g)}).catch(function(e){t.setState({isAnimating:!1})})}},{key:"render",value:function(){var e=this.props,t=(e.afterSlide,e.animationDuration,e.beforeSlide,e.children),n=e.className,r=(e.easing,e.infinite,e.innerRef,e.gutter),i=(e.nextKeys,e.prevKeys,e.preventScroll),a=(e.preventAutoCorrect,e.preventSwipe,e.snapToSlide,e.onSlideClick),l=e.slideClass,u=(e.slideTo,e.slideBy,e.startAt,e.style),c=e.visibleSlides,p=o(e,["afterSlide","animationDuration","beforeSlide","children","className","easing","infinite","innerRef","gutter","nextKeys","prevKeys","preventScroll","preventAutoCorrect","preventSwipe","snapToSlide","onSlideClick","slideClass","slideTo","slideBy","startAt","style","visibleSlides"]),h=i?"hidden":"auto",g={display:"flex",flexFlow:"row nowrap",justifyContent:"space-between",overflowX:h,msOverflowStyle:"-ms-autohiding-scrollbar",position:"relative",transition:"all .25s ease-in-quint",outline:"none",WebkitOverflowScrolling:"touch"};return f.default.createElement("div",s({className:n,style:s({},u,g),ref:this.setRef("whirligig"),tabIndex:"0",onKeyUp:this.handleKeyUp},p),d.Children.map("function"==typeof t?t(this.next,this.prev):t,function(e,t){return f.default.createElement(m.default,{className:l,key:"slide-"+t,basis:c?"calc((100% - ("+r+" * "+(c-1)+")) / "+c+")":"auto",gutter:t>0?r:"",onClick:a},e)}))}}]),t}(d.Component);k.defaultProps={afterSlide:function(){},animationDuration:500,beforeSlide:function(){},gutter:"1em",nextKeys:["ArrowRight"],prevKeys:["ArrowLeft"],preventAutoCorrect:!1,preventScroll:!1,preventSwipe:!1,snapToSlide:!1,startAt:0,style:{}},t.default=k},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(0),a=function(e){return e&&e.__esModule?e:{default:e}}(i),l=function(e){var t=e.basis,n=void 0===t?"100%":t,i=e.gutter,l=void 0===i?"1em":i,u=e.className,s=void 0===u?"":u,c=e.children,p=r(e,["basis","gutter","className","children"]);return a.default.createElement("div",o({className:s,style:{flex:"0 0 auto",width:n,marginLeft:l}},p),c)};t.default=l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(0),c=r(s),p=n(3),d=n(4),f=n(20),h=r(f),g=n(23),m=r(g),y=function(e){return(0,d.includes)(e,["checkbox","radio"])},v={number:Number,func:function(e){return Function(e)()},checkbox:Boolean,radio:Boolean},b=function(e){var t=e.type,n=e.value;return(t in v?v[t]:function(e){return e})(n)},C=function(e){function t(){var e,n,r,l;i(this,t);for(var u=arguments.length,s=Array(u),p=0;p<u;p++)s[p]=arguments[p];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(s))),r.state={afterSlide:r.props.afterSlide,animationDuration:r.props.animationDuration,beforeSlide:r.props.beforeSlide,className:r.props.className,easing:r.props.easing,infinite:r.props.infinite,gutter:r.props.gutter,onSlideClick:r.props.onSlideClick,preventScroll:r.props.preventScroll,snapToSlide:r.props.snapToSlide,slideBy:r.props.slideBy,slideClass:r.props.slideClass,slideTo:r.props.slideTo,startAt:r.props.startAt,visibleSlides:r.props.visibleSlides},r.handleAfterSlide=function(e){r.setState({currentSlide:e})},r.setRef=function(e){return function(t){r[e]=t}},r.setStateFromInput=function(e){return function(t){var n=t.target,i=n.checked,a=n.type;r.setState(o({},e,y(a)?i:b(n)))}},r.Control=function(e){var t=e.label,n=e.type,o=e.name;return c.default.createElement("label",{htmlFor:o,className:"option"},c.default.createElement("span",{className:"label"},t),c.default.createElement("input",{type:n,name:o,id:o,checked:y(n)&&r.state[o],value:y(n)?o:r.state[o],onChange:r.setStateFromInput(o)}))},l=n,a(r,l)}return l(t,e),u(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({afterSlide:e.afterSlide,animationDuration:e.animationDuration,beforeSlide:e.beforeSlide,className:e.className,easing:e.easing,infinite:e.infinite,gutter:e.gutter,onSlideClick:e.onSlideClick,preventScroll:e.preventScroll,snapToSlide:e.snapToSlide,slideBy:e.slideBy,slideClass:e.slideClass,slideTo:e.slideTo,startAt:e.startAt,visibleSlides:e.visibleSlides})}},{key:"componentDidMount",value:function(){try{var e=window.localStorage.getItem("react-whirligig");if(e){var t=JSON.parse(e);this.setState(t)}}catch(e){}}},{key:"componentDidUpdate",value:function(){window.localStorage.setItem("react-whirligig",JSON.stringify(this.state))}},{key:"render",value:function(){var e=this,t=this.props.children,n=this.state,r=n.animationDuration,o=n.beforeSlide,i=n.className,a=n.easing,l=n.infinite,u=n.gutter,s=n.onSlideClick,p=n.preventScroll,d=n.snapToSlide,f=n.slideBy,g=n.slideClass,m=n.slideTo,y=n.startAt,v=n.visibleSlides,b=function(){return e.whirligig.next().catch(function(){})},C=function(){return e.whirligig.prev().catch(function(){})},k=function(t){return e.handleAfterSlide(t)};return c.default.createElement("div",null,c.default.createElement("div",{className:"slider"},c.default.createElement(h.default,{afterSlide:k,animationDuration:r,beforeSlide:o,className:i,easing:a,infinite:l,gutter:u,onSlideClick:s,preventScroll:p,snapToSlide:d,ref:this.setRef("whirligig"),slideBy:f,slideClass:g,slideTo:m,startAt:y,visibleSlides:v},t),c.default.createElement("div",{className:"controls"},c.default.createElement("button",{className:"prevButton",onClick:C}),c.default.createElement("button",{className:"nextButton",onClick:b}))),c.default.createElement("div",{className:"options"},c.default.createElement("span",{className:"option currentSlide"},"Current slide is ",this.state.currentSlide),c.default.createElement(this.Control,{label:"afterSlide",type:"func",name:"afterSlide"}),c.default.createElement(this.Control,{label:"animationDuration",type:"number",name:"animationDuration"}),c.default.createElement(this.Control,{label:"beforeSlide",type:"func",name:"beforeSlide"}),c.default.createElement(this.Control,{label:"className",type:"text",name:"className"}),c.default.createElement(this.Control,{label:"easing",type:"func",name:"easing"}),c.default.createElement(this.Control,{label:"infinite",type:"checkbox",name:"infinite"}),c.default.createElement(this.Control,{label:"gutter",type:"text",name:"gutter"}),c.default.createElement(this.Control,{label:"onSlideClick",type:"func",name:"onSlideClick"}),c.default.createElement(this.Control,{label:"preventScroll",type:"checkbox",name:"preventScroll"}),c.default.createElement(this.Control,{label:"snapToSlide",type:"checkbox",name:"snapToSlide"}),c.default.createElement(this.Control,{label:"slideBy",type:"number",name:"slideBy"}),c.default.createElement(this.Control,{label:"slideClass",type:"text",name:"slideClass"}),c.default.createElement(this.Control,{label:"slideTo",type:"number",name:"slideTo"}),c.default.createElement(this.Control,{label:"startAt",type:"number",name:"startAt"}),c.default.createElement(this.Control,{label:"visibleSlides",type:"number",name:"visibleSlides"})))}}]),t}(s.Component);C.defaultProps={afterSlide:function(e){return console.log("slid to index "+e)},animationDuration:300,beforeSlide:function(e){return console.log("about to slide to index "+e)},className:"whirligig",gutter:"1em",onSlideClick:function(){console.log("You clicked on a slide!")},easing:function(e){return e},infinite:!1,preventScroll:!1,slideClass:"slideClassName",slideBy:0,slideTo:0,snapToSlide:!1,startAt:0,visibleSlides:0};var k=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(Array(7).fill().map(function(){return{src:"https://placebeard.it",height:300,width:300,joiner:"x"}})),[{text:c.default.createElement("h3",null,["it","need","not","only","be","beards!"].map(function(e){return c.default.createElement("span",{key:e,className:"line align-right"},e)}))},{src:"https://fillmurray.com",height:300,width:300,joiner:"/"},{text:c.default.createElement("h3",null,["it","can","be","anything","you","want!"].map(function(e){return c.default.createElement("span",{key:e,className:"line align-left"},e)}))},{text:c.default.createElement("h3",null,"Featuring:")},{text:c.default.createElement("p",null,'A native scrolling "whirligig"')},{text:c.default.createElement("p",null,"snap-to-slide option")},{text:c.default.createElement("p",null,"set the number of slide visible at a time")},{text:c.default.createElement("p",null,"start at any slide you want")},{text:c.default.createElement("p",null,"slide indecies are normalized to stay within the slide count range")}]),E=function(e){function t(){var e,n,r,o;i(this,t);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.state={docs:""},o=n,a(r,o)}return l(t,e),u(t,[{key:"componentWillMount",value:function(){var e=this;window.fetch("https://raw.githubusercontent.com/jane/react-whirligig/master/README.md").then(function(e){return e.text()}).then(function(t){e.setState({docs:(0,m.default)(t)})}).catch(console.error)}},{key:"render",value:function(){return c.default.createElement("div",{className:"wrapper"},c.default.createElement("div",{dangerouslySetInnerHTML:{__html:this.state.docs},className:"md"}),c.default.createElement(C,null,k.map(function(e,t){var n=e.src,r=e.height,o=e.width,i=e.joiner,a=e.text;return c.default.createElement("figure",{className:"mySlide",key:n+"-"+t},c.default.createElement("figcaption",{className:"caption"},"Slide index ",t),n&&c.default.createElement("img",{alt:"Place Zombie",src:n+"/"+o+i+r+"?"+t}),a&&c.default.createElement("div",{className:"text"},a))})))}}]),t}(s.Component);(0,p.render)(c.default.createElement(E,null),document.querySelector("main"))},function(e,t,n){(function(t){(function(){function t(e){this.tokens=[],this.tokens.links={},this.options=e||c.defaults,this.rules=p.normal,this.options.gfm&&(this.options.tables?this.rules=p.tables:this.rules=p.gfm)}function n(e,t){if(this.options=t||c.defaults,this.links=e,this.rules=d.normal,this.renderer=this.options.renderer||new r,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.gfm?this.options.breaks?this.rules=d.breaks:this.rules=d.gfm:this.options.pedantic&&(this.rules=d.pedantic)}function r(e){this.options=e||{}}function o(e){this.tokens=[],this.token=null,this.options=e||c.defaults,this.options.renderer=this.options.renderer||new r,this.renderer=this.options.renderer,this.renderer.options=this.options}function i(e,t){return e.replace(t?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function a(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g,function(e,t){return t=t.toLowerCase(),"colon"===t?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""})}function l(e,t){return e=e.source,t=t||"",function n(r,o){return r?(o=o.source||o,o=o.replace(/(^|[^\[])\^/g,"$1"),e=e.replace(r,o),n):new RegExp(e,t)}}function u(){}function s(e){for(var t,n,r=1;r<arguments.length;r++){t=arguments[r];for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}function c(e,n,r){if(r||"function"==typeof n){r||(r=n,n=null),n=s({},c.defaults,n||{});var a,l,u=n.highlight,p=0;try{a=t.lex(e,n)}catch(e){return r(e)}l=a.length;var d=function(e){if(e)return n.highlight=u,r(e);var t;try{t=o.parse(a,n)}catch(t){e=t}return n.highlight=u,e?r(e):r(null,t)};if(!u||u.length<3)return d();if(delete n.highlight,!l)return d();for(;p<a.length;p++)!function(e){"code"!==e.type?--l||d():u(e.text,e.lang,function(t,n){return t?d(t):null==n||n===e.text?--l||d():(e.text=n,e.escaped=!0,void(--l||d()))})}(a[p])}else try{return n&&(n=s({},c.defaults,n)),o.parse(t.lex(e,n),n)}catch(e){if(e.message+="\nPlease report this to https://github.com/chjj/marked.",(n||c.defaults).silent)return"<p>An error occured:</p><pre>"+i(e.message+"",!0)+"</pre>";throw e}}var p={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:u,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:u,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:u,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};p.bullet=/(?:[*+-]|\d+\.)/,p.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,p.item=l(p.item,"gm")(/bull/g,p.bullet)(),p.list=l(p.list)(/bull/g,p.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+p.def.source+")")(),p.blockquote=l(p.blockquote)("def",p.def)(),p._tag="(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b",p.html=l(p.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,p._tag)(),p.paragraph=l(p.paragraph)("hr",p.hr)("heading",p.heading)("lheading",p.lheading)("blockquote",p.blockquote)("tag","<"+p._tag)("def",p.def)(),p.normal=s({},p),p.gfm=s({},p.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),p.gfm.paragraph=l(p.paragraph)("(?!","(?!"+p.gfm.fences.source.replace("\\1","\\2")+"|"+p.list.source.replace("\\1","\\3")+"|")(),p.tables=s({},p.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/}),t.rules=p,t.lex=function(e,n){return new t(n).lex(e)},t.prototype.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(e,!0)},t.prototype.token=function(e,t,n){for(var r,o,i,a,l,u,s,c,d,e=e.replace(/^ +$/gm,"");e;)if((i=this.rules.newline.exec(e))&&(e=e.substring(i[0].length),i[0].length>1&&this.tokens.push({type:"space"})),i=this.rules.code.exec(e))e=e.substring(i[0].length),i=i[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?i:i.replace(/\n+$/,"")});else if(i=this.rules.fences.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"code",lang:i[2],text:i[3]||""});else if(i=this.rules.heading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:i[1].length,text:i[2]});else if(t&&(i=this.rules.nptable.exec(e))){for(e=e.substring(i[0].length),u={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/\n$/,"").split("\n")},c=0;c<u.align.length;c++)/^ *-+: *$/.test(u.align[c])?u.align[c]="right":/^ *:-+: *$/.test(u.align[c])?u.align[c]="center":/^ *:-+ *$/.test(u.align[c])?u.align[c]="left":u.align[c]=null;for(c=0;c<u.cells.length;c++)u.cells[c]=u.cells[c].split(/ *\| */);this.tokens.push(u)}else if(i=this.rules.lheading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:"="===i[2]?1:2,text:i[1]});else if(i=this.rules.hr.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"hr"});else if(i=this.rules.blockquote.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"blockquote_start"}),i=i[0].replace(/^ *> ?/gm,""),this.token(i,t,!0),this.tokens.push({type:"blockquote_end"});else if(i=this.rules.list.exec(e)){for(e=e.substring(i[0].length),a=i[2],this.tokens.push({type:"list_start",ordered:a.length>1}),i=i[0].match(this.rules.item),r=!1,d=i.length,c=0;c<d;c++)u=i[c],s=u.length,u=u.replace(/^ *([*+-]|\d+\.) +/,""),~u.indexOf("\n ")&&(s-=u.length,u=this.options.pedantic?u.replace(/^ {1,4}/gm,""):u.replace(new RegExp("^ {1,"+s+"}","gm"),"")),this.options.smartLists&&c!==d-1&&(l=p.bullet.exec(i[c+1])[0],a===l||a.length>1&&l.length>1||(e=i.slice(c+1).join("\n")+e,c=d-1)),o=r||/\n\n(?!\s*$)/.test(u),c!==d-1&&(r="\n"===u.charAt(u.length-1),o||(o=r)),this.tokens.push({type:o?"loose_item_start":"list_item_start"}),this.token(u,!1,n),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(i=this.rules.html.exec(e))e=e.substring(i[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===i[1]||"script"===i[1]||"style"===i[1]),text:i[0]});else if(!n&&t&&(i=this.rules.def.exec(e)))e=e.substring(i[0].length),this.tokens.links[i[1].toLowerCase()]={href:i[2],title:i[3]};else if(t&&(i=this.rules.table.exec(e))){for(e=e.substring(i[0].length),u={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/(?: *\| *)?\n$/,"").split("\n")},c=0;c<u.align.length;c++)/^ *-+: *$/.test(u.align[c])?u.align[c]="right":/^ *:-+: *$/.test(u.align[c])?u.align[c]="center":/^ *:-+ *$/.test(u.align[c])?u.align[c]="left":u.align[c]=null;for(c=0;c<u.cells.length;c++)u.cells[c]=u.cells[c].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */);this.tokens.push(u)}else if(t&&(i=this.rules.paragraph.exec(e)))e=e.substring(i[0].length),this.tokens.push({type:"paragraph",text:"\n"===i[1].charAt(i[1].length-1)?i[1].slice(0,-1):i[1]});else if(i=this.rules.text.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"text",text:i[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens};var d={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ >]+(@|:\/)[^ >]+)>/,url:u,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:u,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};d._inside=/(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/,d._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/,d.link=l(d.link)("inside",d._inside)("href",d._href)(),d.reflink=l(d.reflink)("inside",d._inside)(),d.normal=s({},d),d.pedantic=s({},d.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/}),d.gfm=s({},d.normal,{escape:l(d.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:l(d.text)("]|","~]|")("|","|https?://|")()}),d.breaks=s({},d.gfm,{br:l(d.br)("{2,}","*")(),text:l(d.gfm.text)("{2,}","*")()}),n.rules=d,n.output=function(e,t,r){return new n(t,r).output(e)},n.prototype.output=function(e){for(var t,n,r,o,a="";e;)if(o=this.rules.escape.exec(e))e=e.substring(o[0].length),a+=o[1];else if(o=this.rules.autolink.exec(e))e=e.substring(o[0].length),"@"===o[2]?(n=":"===o[1].charAt(6)?this.mangle(o[1].substring(7)):this.mangle(o[1]),r=this.mangle("mailto:")+n):(n=i(o[1]),r=n),a+=this.renderer.link(r,null,n);else if(this.inLink||!(o=this.rules.url.exec(e))){if(o=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(o[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(o[0])&&(this.inLink=!1),e=e.substring(o[0].length),a+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):i(o[0]):o[0];else if(o=this.rules.link.exec(e))e=e.substring(o[0].length),this.inLink=!0,a+=this.outputLink(o,{href:o[2],title:o[3]}),this.inLink=!1;else if((o=this.rules.reflink.exec(e))||(o=this.rules.nolink.exec(e))){if(e=e.substring(o[0].length),t=(o[2]||o[1]).replace(/\s+/g," "),!(t=this.links[t.toLowerCase()])||!t.href){a+=o[0].charAt(0),e=o[0].substring(1)+e;continue}this.inLink=!0,a+=this.outputLink(o,t),this.inLink=!1}else if(o=this.rules.strong.exec(e))e=e.substring(o[0].length),a+=this.renderer.strong(this.output(o[2]||o[1]));else if(o=this.rules.em.exec(e))e=e.substring(o[0].length),a+=this.renderer.em(this.output(o[2]||o[1]));else if(o=this.rules.code.exec(e))e=e.substring(o[0].length),a+=this.renderer.codespan(i(o[2],!0));else if(o=this.rules.br.exec(e))e=e.substring(o[0].length),a+=this.renderer.br();else if(o=this.rules.del.exec(e))e=e.substring(o[0].length),a+=this.renderer.del(this.output(o[1]));else if(o=this.rules.text.exec(e))e=e.substring(o[0].length),a+=this.renderer.text(i(this.smartypants(o[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else e=e.substring(o[0].length),n=i(o[1]),r=n,a+=this.renderer.link(r,null,n);return a},n.prototype.outputLink=function(e,t){var n=i(t.href),r=t.title?i(t.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(n,r,this.output(e[1])):this.renderer.image(n,r,i(e[1]))},n.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e},n.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var t,n="",r=e.length,o=0;o<r;o++)t=e.charCodeAt(o),Math.random()>.5&&(t="x"+t.toString(16)),n+="&#"+t+";";return n},r.prototype.code=function(e,t,n){if(this.options.highlight){var r=this.options.highlight(e,t);null!=r&&r!==e&&(n=!0,e=r)}return t?'<pre><code class="'+this.options.langPrefix+i(t,!0)+'">'+(n?e:i(e,!0))+"\n</code></pre>\n":"<pre><code>"+(n?e:i(e,!0))+"\n</code></pre>"},r.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},r.prototype.html=function(e){return e},r.prototype.heading=function(e,t,n){return"<h"+t+' id="'+this.options.headerPrefix+n.toLowerCase().replace(/[^\w]+/g,"-")+'">'+e+"</h"+t+">\n"},r.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},r.prototype.list=function(e,t){var n=t?"ol":"ul";return"<"+n+">\n"+e+"</"+n+">\n"},r.prototype.listitem=function(e){return"<li>"+e+"</li>\n"},r.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"},r.prototype.table=function(e,t){return"<table>\n<thead>\n"+e+"</thead>\n<tbody>\n"+t+"</tbody>\n</table>\n"},r.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},r.prototype.tablecell=function(e,t){var n=t.header?"th":"td";return(t.align?"<"+n+' style="text-align:'+t.align+'">':"<"+n+">")+e+"</"+n+">\n"},r.prototype.strong=function(e){return"<strong>"+e+"</strong>"},r.prototype.em=function(e){return"<em>"+e+"</em>"},r.prototype.codespan=function(e){return"<code>"+e+"</code>"},r.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},r.prototype.del=function(e){return"<del>"+e+"</del>"},r.prototype.link=function(e,t,n){if(this.options.sanitize){try{var r=decodeURIComponent(a(e)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return""}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:"))return""}var o='<a href="'+e+'"';return t&&(o+=' title="'+t+'"'),o+=">"+n+"</a>"},r.prototype.image=function(e,t,n){var r='<img src="'+e+'" alt="'+n+'"';return t&&(r+=' title="'+t+'"'),r+=this.options.xhtml?"/>":">"},r.prototype.text=function(e){return e},o.parse=function(e,t,n){return new o(t,n).parse(e)},o.prototype.parse=function(e){this.inline=new n(e.links,this.options,this.renderer),this.tokens=e.reverse();for(var t="";this.next();)t+=this.tok();return t},o.prototype.next=function(){return this.token=this.tokens.pop()},o.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},o.prototype.parseText=function(){for(var e=this.token.text;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)},o.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text);case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var e,t,n,r,o="",i="";for(n="",e=0;e<this.token.header.length;e++)({header:!0,align:this.token.align[e]}),n+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(o+=this.renderer.tablerow(n),e=0;e<this.token.cells.length;e++){for(t=this.token.cells[e],n="",r=0;r<t.length;r++)n+=this.renderer.tablecell(this.inline.output(t[r]),{header:!1,align:this.token.align[r]});i+=this.renderer.tablerow(n)}return this.renderer.table(o,i);case"blockquote_start":for(var i="";"blockquote_end"!==this.next().type;)i+=this.tok();return this.renderer.blockquote(i);case"list_start":for(var i="",a=this.token.ordered;"list_end"!==this.next().type;)i+=this.tok();return this.renderer.list(i,a);case"list_item_start":for(var i="";"list_item_end"!==this.next().type;)i+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(i);case"loose_item_start":for(var i="";"list_item_end"!==this.next().type;)i+=this.tok();return this.renderer.listitem(i);case"html":var l=this.token.pre||this.options.pedantic?this.token.text:this.inline.output(this.token.text);return this.renderer.html(l);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}},u.exec=u,c.options=c.setOptions=function(e){return s(c.defaults,e),c},c.defaults={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,sanitizer:null,mangle:!0,smartLists:!1,silent:!1,highlight:null,langPrefix:"lang-",smartypants:!1,headerPrefix:"",renderer:new r,xhtml:!1},c.Parser=o,c.parser=o.parse,c.Renderer=r,c.Lexer=t,c.lexer=t.lex,c.InlineLexer=n,c.inlineLexer=n.output,c.parse=c,e.exports=c}).call(function(){return this||("undefined"!=typeof window?window:t)}())}).call(t,n(24))},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy9kZW1vLmpzIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCBkMDY3MjFlNWZlNzJjYjdmOTA1MyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXZlbnRMaXN0ZW5lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ZvY3VzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL3NyYy93aGlybGlnaWcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlLmpzIiwid2VicGFjazovLy8uL2Rldi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWFya2VkL2xpYi9tYXJrZWQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJ0aGlzIiwibW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImluc3RhbGxlZE1vZHVsZXMiLCJpIiwibCIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwidG9PYmplY3QiLCJ2YWwiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJlcnIiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwia2V5IiwibWFrZUVtcHR5RnVuY3Rpb24iLCJhcmciLCJlbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwidmFsdWUiLCJlYXNlT3V0UXVpbnQiLCJpbmNsdWRlcyIsImFyciIsImZpbHRlciIsIml0ZW0iLCJ2YWx1ZXMiLCJvYmoiLCJjb21wb3NlIiwiX2xlbiIsImZucyIsIkFycmF5IiwiX2tleSIsInJlZHVjZVJpZ2h0IiwiY3VyclZhbCIsImZuIiwibWluTWFwIiwiX2xlbjIiLCJ2YWxzIiwiX2tleTIiLCJNYXRoIiwibWluIiwiYXBwbHkiLCJjb25jYXQiLCJtYXhNYXAiLCJfbGVuMyIsIl9rZXkzIiwibWF4Iiwibm9vcCIsInQiLCJwb3ciLCJvbiIsImV2dCIsIm9wdHMiLCJjYiIsImVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvbldpbmRvd1Njcm9sbCIsIndpbmRvdyIsIm9uU2Nyb2xsIiwiX3JlZiIsIl9yZWYkdGFyZ2V0IiwiZSIsIm9uU2Nyb2xsRW5kIiwiX3JlZjIiLCJfcmVmMiR3YWl0Iiwid2FpdCIsIl9yZWYyJHRhcmdldCIsInRpbWVvdXRJRCIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ0cmFja1RvdWNoZXNGb3JFbGVtZW50Iiwib25TY3JvbGxTdGFydCIsIl9yZWYzIiwiX3JlZjMkdGFyZ2V0Iiwic3RhcnRlZCIsIm9mZlNjcm9sbEVuZCIsIm9mZlNjcm9sbCIsIm9uU3dpcGUiLCJfcmVmNCIsInRhcmdldFRvdWNoZXMiLCJfdGFyZ2V0VG91Y2hlcyQiLCJzdGFydFgiLCJwYWdlWCIsInN0YXJ0WSIsInBhZ2VZIiwib2ZmVG91Y2hFbmQiLCJfcmVmNSIsImNoYW5nZWRUb3VjaGVzIiwiX2NoYW5nZWRUb3VjaGVzJCIsImVuZFgiLCJlbmRZIiwieERpZmYiLCJhYnNYRGlmZiIsImFicyIsInlEaWZmIiwiYWJzWURpZmYiLCJ0b3VjaElkcyIsIl9yZWY2IiwidHJhY2tPbmdvaW5nTW91c2VJbnRlcmFjdGlvbiIsImlzSW50ZXJhY3RpbmciLCJkb2N1bWVudCIsImJvZHkiLCJoYXNPbmdvaW5nSW50ZXJhY3Rpb24iLCJnZXRPbmdvaW5nVG91Y2hDb3VudCIsImdldE9uZ29pbmdNb3VzZUNsaWNrIiwiaXNXaG9sbHlJblZpZXciLCJwYXJlbnQiLCJjaGlsZCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIl9jaGlsZCRnZXRCb3VuZGluZ0NsaSIsImNMZWZ0IiwibGVmdCIsImNSaWdodCIsInJpZ2h0IiwiX3BhcmVudCRnZXRCb3VuZGluZ0NsIiwicExlZnQiLCJwUmlnaHQiLCJhbmltYXRlIiwiX3JlZjciLCJfcmVmNyRkZWx0YSIsImRlbHRhIiwiX3JlZjckaW1tZWRpYXRlIiwiaW1tZWRpYXRlIiwiX3JlZjckZHVyYXRpb24iLCJkdXJhdGlvbiIsIl9yZWY3JGVhc2luZyIsImVhc2luZyIsIl9yZWY3JHByb3AiLCJwcm9wIiwiUHJvbWlzZSIsInJlcyIsInJlaiIsImluaXRpYWxWYWwiLCJoYXNCYWlsZWQiLCJiYWlsIiwicG9zIiwic3RhcnRUaW1lIiwic3RlcCIsInRpbWVzdGFtcCIsInByb2dyZXNzVGltZSIsInByb2dyZXNzUmF0aW8iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJhIiwiYiIsImVuY29kZVVSSUNvbXBvbmVudCIsIkVycm9yIiwiZnJhbWVzVG9Qb3AiLCJ2IiwicHJvcHMiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJ1IiwidyIsIngiLCJ6IiwiRyIsImciLCJrIiwiJCR0eXBlb2YiLCJFIiwidHlwZSIsInJlZiIsIl9vd25lciIsImVzY2FwZSIsIj0iLCI6IiwicmVwbGFjZSIsIkwiLCJLIiwicG9wIiwicmVzdWx0Iiwia2V5UHJlZml4IiwiZnVuYyIsImNvdW50IiwiTSIsInB1c2giLCJOIiwiSSIsIk8iLCJpc0FycmF5IiwiSCIsIm5leHQiLCJkb25lIiwidG9TdHJpbmciLCJQIiwiUSIsIlIiLCJyIiwiaXNWYWxpZEVsZW1lbnQiLCJjbG9uZUFuZFJlcGxhY2VLZXkiLCJKIiwiZiIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsInkiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiQSIsInVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCIsInJlbmRlciIsImNoaWxkcmVuIiwiQiIsIkNvbXBvbmVudCIsIlB1cmVDb21wb25lbnQiLCJBc3luY0NvbXBvbmVudCIsIkMiLCJjdXJyZW50IiwiRCIsIlN5bWJvbCIsIkYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImNyZWF0ZUVsZW1lbnQiLCJxIiwiaCIsImRlZmF1bHRQcm9wcyIsImNyZWF0ZUZhY3RvcnkiLCJiaW5kIiwiX3NlbGYiLCJfc291cmNlIiwiY2xvbmVFbGVtZW50IiwiaXRlcmF0b3IiLCJTIiwidG9BcnJheSIsIkNoaWxkcmVuIiwib25seSIsInVuc3RhYmxlX0FzeW5jQ29tcG9uZW50IiwidmVyc2lvbiIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50T3duZXIiLCJlbXB0eU9iamVjdCIsImludmFyaWFudCIsImNvbmRpdGlvbiIsImZvcm1hdCIsInZhbGlkYXRlRm9ybWF0IiwiYXJncyIsImFyZ0luZGV4IiwiamEiLCJwYSIsImxhIiwib2EiLCJpbmRleE9mIiwicWEiLCJwbHVnaW5zIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzIiwicmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llcyIsImRlcGVuZGVuY2llcyIsInVhIiwiTGEiLCJfcmVuZGVyZWRDb21wb25lbnQiLCJNYSIsIl9ob3N0Tm9kZSIsIkhhIiwiTmEiLCJfZmxhZ3MiLCJGYSIsImhhc0NhY2hlZENoaWxkTm9kZXMiLCJfcmVuZGVyZWRDaGlsZHJlbiIsImZpcnN0Q2hpbGQiLCJfZG9tSUQiLCJuZXh0U2libGluZyIsIm5vZGVUeXBlIiwiQWEiLCJnZXRBdHRyaWJ1dGUiLCJFYSIsIkJhIiwibm9kZVZhbHVlIiwiT2EiLCJwYXJlbnROb2RlIiwidGFnIiwieWEiLCJ6YSIsIlJhIiwiZ2V0TmFtZSIsImRpc3BsYXlOYW1lIiwiWmEiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJYYSIsIldhIiwiVGEiLCIkYSIsImFiIiwic2libGluZyIsInN0YXRlTm9kZSIsIl9oYXNDYXVnaHRFcnJvciIsIl9jYXVnaHRFcnJvciIsInNsaWNlIiwiZGIiLCJfaGFzUmV0aHJvd0Vycm9yIiwiX3JldGhyb3dFcnJvciIsImdiIiwiY3VycmVudFRhcmdldCIsImhiIiwiZ2V0Tm9kZUZyb21JbnN0YW5jZSIsImViIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yIiwibWIiLCJpYiIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJqYiIsInJlc3RvcmVDb250cm9sbGVkU3RhdGUiLCJnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlIiwib2IiLCJwYiIsInFiIiwidWIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJ0YiIsInhiIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInZiIiwiY29udGFpbmVySW5mbyIsIl9ob3N0UGFyZW50IiwiZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUiLCJ5YiIsIl9oYW5kbGVUb3BMZXZlbCIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwiQ2IiLCJEYiIsIkZiIiwiZXhlY3V0ZURpc3BhdGNoZXNJbk9yZGVyIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkdiIiwiSGIiLCJJYiIsImRpc2FibGVkIiwiTGIiLCJjYW5Vc2VET00iLCJzZXRBdHRyaWJ1dGUiLCJLYiIsImltcGxlbWVudGF0aW9uIiwiaGFzRmVhdHVyZSIsIk1iIiwidG9Mb3dlckNhc2UiLCJRYiIsIk9iIiwiTmIiLCJQYiIsIlZiIiwiVWIiLCJUYiIsIlNiIiwiZmMiLCJlYyIsImRjIiwiY2MiLCJ0ZXN0IiwiamMiLCJyYyIsImFhIiwidGMiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJ5YyIsInhjIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJzdHlsZSIsInpjIiwibm9kZU5hbWUiLCJBYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJfdmFsdWVUcmFja2VyIiwiQ2MiLCJpcyIsIkljIiwibGFzdENoaWxkIiwiSGMiLCJ0ZXh0Q29udGVudCIsIlJjIiwiTmMiLCJMYyIsIk1jIiwib3duZXJEb2N1bWVudCIsIm9kIiwiaWQiLCJoZCIsImdkIiwicGQiLCJmaXJzdCIsImxhc3QiLCJoYXNGb3JjZVVwZGF0ZSIsImNhbGxiYWNrTGlzdCIsInFkIiwicmQiLCJwcmlvcml0eUxldmVsIiwic2QiLCJ1cGRhdGVRdWV1ZSIsIm1kIiwibmQiLCJwYXJ0aWFsU3RhdGUiLCJjYWxsYmFjayIsImlzUmVwbGFjZSIsImlzRm9yY2VkIiwiaXNUb3BMZXZlbFVubW91bnQiLCJ0ZCIsIk1kIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiTmQiLCJ6ZCIsImNoaWxkQ29udGV4dFR5cGVzIiwiT2QiLCJnZXRDaGlsZENvbnRleHQiLCJiZSIsImluZGV4IiwibWVtb2l6ZWRTdGF0ZSIsIm1lbW9pemVkUHJvcHMiLCJwZW5kaW5nUHJvcHMiLCJpbnRlcm5hbENvbnRleHRUYWciLCJhZSIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJwZW5kaW5nV29ya1ByaW9yaXR5IiwiWmQiLCJjZSIsIlJkIiwiUWQiLCJUZCIsIkxlIiwiSmUiLCJNZSIsIkFlIiwiZ2V0UHVibGljSW5zdGFuY2UiLCJfc3RyaW5nUmVmIiwiZGEiLCJOZSIsIk9lIiwiSWUiLCJNYXAiLCJyZSIsIkdlIiwiSGUiLCJCZSIsInVlIiwic2UiLCJEZSIsInZlIiwiRWUiLCJ3ZSIsIkNlIiwieGUiLCJGZSIsInRlIiwiS2UiLCJvZSIsInBlIiwicWUiLCJ5ZSIsIkNhIiwiViIsInplIiwiZWYiLCJQYSIsImRmIiwiWmUiLCIkZSIsImFmIiwiYWRvcHRDbGFzc0luc3RhbmNlIiwiY29uc3RydWN0Q2xhc3NJbnN0YW5jZSIsIlhlIiwiWWUiLCJXZSIsIlZlIiwibW91bnRDbGFzc0luc3RhbmNlIiwic3RhdGUiLCJlZCIsImVuYWJsZUFzeW5jU3VidHJlZUFQSSIsIlVlIiwiY29tcG9uZW50V2lsbE1vdW50IiwiYmYiLCJjb21wb25lbnREaWRNb3VudCIsIlRlIiwidXBkYXRlQ2xhc3NJbnN0YW5jZSIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJjZiIsImNvbXBvbmVudERpZFVwZGF0ZSIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImVhIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIkxmIiwiZmYiLCJnZiIsImhmIiwiSmYiLCJxZiIsIktmIiwiRmYiLCJwZW5kaW5nQ29udGV4dCIsInBmIiwiamYiLCJ1ZiIsInRmIiwib2YiLCJ5ZiIsInNob3VsZFNldFRleHRDb250ZW50IiwidXNlU3luY1NjaGVkdWxpbmciLCJzaG91bGREZXByaW9yaXRpemVTdWJ0cmVlIiwicHVzaEhvc3RDb250ZXh0IiwicHVzaEhvc3RDb250YWluZXIiLCJlbnRlckh5ZHJhdGlvblN0YXRlIiwicmVzZXRIeWRyYXRpb25TdGF0ZSIsInRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlIiwibGQiLCJiZWdpbldvcmsiLCJEZiIsInJmIiwibWYiLCJsZiIsInNmIiwibmYiLCJrZiIsImVsZW1lbnQiLCJHZiIsIndmIiwiSGYiLCJFZiIsInhmIiwiQWYiLCJ6ZiIsIkJmIiwiQ2YiLCJiZWdpbkZhaWxlZFdvcmsiLCJJZiIsImVnIiwiY3JlYXRlSW5zdGFuY2UiLCJjcmVhdGVUZXh0SW5zdGFuY2UiLCJhcHBlbmRJbml0aWFsQ2hpbGQiLCJmaW5hbGl6ZUluaXRpYWxDaGlsZHJlbiIsInByZXBhcmVVcGRhdGUiLCJnZXRSb290SG9zdENvbnRhaW5lciIsInBvcEhvc3RDb250ZXh0IiwiZ2V0SG9zdENvbnRleHQiLCJwb3BIb3N0Q29udGFpbmVyIiwicHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZSIsInByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlIiwicG9wSHlkcmF0aW9uU3RhdGUiLCJjb21wbGV0ZVdvcmsiLCJkZyIsIlFmIiwiUmYiLCJOZiIsIlNmIiwiT2YiLCJhZyIsIlRmIiwiY2ciLCJiZyIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJoYW5kbGVyIiwiTWYiLCJaZiIsIlBmIiwiaGciLCJ2ZyIsImxnIiwia2ciLCJuZyIsIm1nIiwicWciLCJqZyIsImNvbXBvbmVudFdpbGxVbm1vdW50Iiwib2ciLCJjb21taXRNb3VudCIsImNvbW1pdFVwZGF0ZSIsInJlc2V0VGV4dENvbnRlbnQiLCJjb21taXRUZXh0VXBkYXRlIiwiYXBwZW5kQ2hpbGQiLCJhcHBlbmRDaGlsZFRvQ29udGFpbmVyIiwiaW5zZXJ0QmVmb3JlIiwiaW5zZXJ0SW5Db250YWluZXJCZWZvcmUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lciIsImNvbW1pdFBsYWNlbWVudCIsInVnIiwicmciLCJjb21taXREZWxldGlvbiIsImNvbW1pdFdvcmsiLCJjb21taXRMaWZlQ3ljbGVzIiwic2ciLCJ0ZyIsInBnIiwiY29tbWl0QXR0YWNoUmVmIiwiY29tbWl0RGV0YWNoUmVmIiwiQWciLCJ6ZyIsImdldENoaWxkSG9zdENvbnRleHQiLCJnZXRSb290SG9zdENvbnRleHQiLCJ3ZyIsInhnIiwieWciLCJyZXNldEhvc3RDb250YWluZXIiLCJIZyIsIkdnIiwiRWciLCJCZyIsIkNnIiwiRGciLCJjYW5IeWRyYXRlSW5zdGFuY2UiLCJjYW5IeWRyYXRlVGV4dEluc3RhbmNlIiwiZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nIiwiZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQiLCJoeWRyYXRlSW5zdGFuY2UiLCJoeWRyYXRlVGV4dEluc3RhbmNlIiwiZGlkTm90SHlkcmF0ZUluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlIiwiRmciLCJoaCIsIm1hIiwiVCIsImlzU2NoZWR1bGVkIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJ6YiIsIkpnIiwiZ2giLCJMZyIsIm5jIiwib2MiLCJIZCIsIm5hIiwiT2ciLCJVIiwiS2ciLCJUZyIsIlVpIiwiWWciLCJhaCIsIlBoIiwiWmciLCIkZyIsIlVnIiwiV2ciLCJ2ZiIsIlZnIiwiWGciLCJJZCIsIk1oIiwiSmQiLCJWaSIsIkdkIiwiTmgiLCJPaCIsImVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJjb21wb25lbnRTdGFjayIsImJoIiwiSmEiLCJOZyIsInZhIiwiTGgiLCJmaCIsIk1nIiwiUmciLCJzaXplIiwiaGFzIiwiQWIiLCJ0aW1lUmVtYWluaW5nIiwiUGciLCJRZyIsIkRhIiwiS2QiLCJZYSIsIklnIiwiY2giLCJkaCIsIkJiIiwiJGYiLCJLYSIsIlNldCIsImFkZCIsImZlIiwiZ2UiLCJoZSIsImllIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb21wb25lbnROYW1lIiwiZXJyb3JCb3VuZGFyeSIsImVycm9yQm91bmRhcnlGb3VuZCIsImVycm9yQm91bmRhcnlOYW1lIiwid2lsbFJldHJ5IiwiV2kiLCJYaSIsInBjIiwiVyIsIllpIiwiU2ciLCJzY2hlZHVsZURlZmVycmVkQ2FsbGJhY2siLCJwcmVwYXJlRm9yQ29tbWl0IiwicmVzZXRBZnRlckNvbW1pdCIsInNjaGVkdWxlVXBkYXRlIiwiZ2V0UHJpb3JpdHlDb250ZXh0IiwiYmF0Y2hlZFVwZGF0ZXMiLCJ1bmJhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiZGVmZXJyZWRVcGRhdGVzIiwiaWgiLCJqaCIsIl9wcm9jZXNzQ2hpbGRDb250ZXh0IiwiX2NvbnRleHQiLCJzaCIsInRoIiwicmgiLCJub2RlIiwib2Zmc2V0IiwidmgiLCJ1aCIsImRvY3VtZW50RWxlbWVudCIsIkJoIiwiQ2giLCJEaCIsIkFoIiwiRmgiLCJFaCIsIkdoIiwiSmgiLCJJaCIsImRpc3BhdGNoQ29uZmlnIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiS2giLCJIaCIsInRyYXZlcnNlVHdvUGhhc2UiLCJfdGFyZ2V0SW5zdCIsIlFoIiwiZ2V0UGFyZW50SW5zdGFuY2UiLCJSaCIsIlNoIiwiWSIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImNhIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJaaCIsImV2ZW50UG9vbCIsIiRoIiwiZGVzdHJ1Y3RvciIsIlloIiwiZ2V0UG9vbGVkIiwiYWkiLCJiaSIsIm1pIiwiY2kiLCJrZXlDb2RlIiwibmkiLCJkZXRhaWwiLCJkYXRhIiwicGkiLCJ3aGljaCIsImxpIiwiamkiLCJxaSIsIm9pIiwiZGkiLCJWaCIsImdldERhdGEiLCJyZXNldCIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsImlpIiwidGkiLCJzaSIsInZpIiwidWkiLCJjaGFuZ2UiLCJuYiIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJUaCIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJ5aSIsIkpiIiwiZW5xdWV1ZUV2ZW50cyIsInByb2Nlc3NFdmVudFF1ZXVlIiwiemkiLCJCYyIsInVwZGF0ZVZhbHVlSWZDaGFuZ2VkIiwiQWkiLCJDaSIsIndpIiwiZGV0YWNoRXZlbnQiLCJEaSIsInhpIiwicHJvcGVydHlOYW1lIiwic2IiLCJFaSIsImF0dGFjaEV2ZW50IiwiRmkiLCJHaSIsIkhpIiwiSmkiLCJMaSIsImdldE1vZGlmaWVyU3RhdGUiLCJLaSIsIk1pIiwiTmkiLCJjaiIsImFqIiwiVGkiLCJpYSIsInpoIiwiaGFzU2VsZWN0aW9uQ2FwYWJpbGl0aWVzIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIiRpIiwiU2kiLCJzZWxlY3QiLCJaaSIsImVqIiwiZmoiLCJnaiIsImhqIiwiY2hhckNvZGUiLCJraiIsImxqIiwibWoiLCJuaiIsIm9qIiwiQmoiLCJ0b1VwcGVyQ2FzZSIsImFrIiwiRGoiLCJHaiIsIkhqIiwiRmoiLCJiayIsImhhc0F0dHJpYnV0ZSIsIklqIiwiY2siLCJfcmVhY3RSb290Q29udGFpbmVyIiwiWGoiLCJ1cGRhdGVDb250YWluZXIiLCJjcmVhdGVDb250YWluZXIiLCJnZXRQdWJsaWNSb290SW5zdGFuY2UiLCJkayIsIm5lIiwiY3JlYXRlUG9ydGFsIiwiYmEiLCJmYSIsImhhIiwiZmIiLCJrYSIsIk5hbWVzcGFjZXMiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwiZ2V0SW50cmluc2ljTmFtZXNwYWNlIiwiZ2V0Q2hpbGROYW1lc3BhY2UiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsInNhIiwidGEiLCJhdXRvRm9jdXMiLCJkZWZhdWx0VmFsdWUiLCJkZWZhdWx0Q2hlY2tlZCIsImlubmVySFRNTCIsInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyIsIndhIiwiTVVTVF9VU0VfUFJPUEVSVFkiLCJIQVNfQk9PTEVBTl9WQUxVRSIsIkhBU19OVU1FUklDX1ZBTFVFIiwiSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUiLCJIQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFIiwiSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFIiwiaW5qZWN0RE9NUHJvcGVydHlDb25maWciLCJQcm9wZXJ0aWVzIiwiRE9NQXR0cmlidXRlTmFtZXNwYWNlcyIsIkRPTUF0dHJpYnV0ZU5hbWVzIiwiRE9NTXV0YXRpb25NZXRob2RzIiwieGEiLCJwcm9wZXJ0aWVzIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11dGF0aW9uTWV0aG9kIiwibXVzdFVzZVByb3BlcnR5IiwiaGFzQm9vbGVhblZhbHVlIiwiaGFzTnVtZXJpY1ZhbHVlIiwiaGFzUG9zaXRpdmVOdW1lcmljVmFsdWUiLCJoYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlIiwiaGFzU3RyaW5nQm9vbGVhblZhbHVlIiwiSURfQVRUUklCVVRFX05BTUUiLCJST09UX0FUVFJJQlVURV9OQU1FIiwiQVRUUklCVVRFX05BTUVfU1RBUlRfQ0hBUiIsIkFUVFJJQlVURV9OQU1FX0NIQVIiLCJzaG91bGRTZXRBdHRyaWJ1dGUiLCJpc1Jlc2VydmVkUHJvcCIsInNob3VsZEF0dHJpYnV0ZUFjY2VwdEJvb2xlYW5WYWx1ZSIsImdldFByb3BlcnR5SW5mbyIsImluamVjdGlvbiIsIkluZGV0ZXJtaW5hdGVDb21wb25lbnQiLCJGdW5jdGlvbmFsQ29tcG9uZW50IiwiQ2xhc3NDb21wb25lbnQiLCJIb3N0Um9vdCIsIkhvc3RQb3J0YWwiLCJIb3N0Q29tcG9uZW50IiwiSG9zdFRleHQiLCJDb3JvdXRpbmVDb21wb25lbnQiLCJDb3JvdXRpbmVIYW5kbGVyUGhhc2UiLCJZaWVsZENvbXBvbmVudCIsIkZyYWdtZW50IiwiRUxFTUVOVF9OT0RFIiwiVEVYVF9OT0RFIiwiQ09NTUVOVF9OT0RFIiwiRE9DVU1FTlRfTk9ERSIsIkRPQ1VNRU5UX0ZSQUdNRU5UX05PREUiLCJHYSIsInJhbmRvbSIsIklhIiwicHJlY2FjaGVDaGlsZE5vZGVzIiwicHJlY2FjaGVOb2RlIiwidW5jYWNoZU5vZGUiLCJwcmVjYWNoZUZpYmVyTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJyZW1vdmUiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiUWEiLCJOb0VmZmVjdCIsIlBlcmZvcm1lZFdvcmsiLCJQbGFjZW1lbnQiLCJVcGRhdGUiLCJQbGFjZW1lbnRBbmRVcGRhdGUiLCJEZWxldGlvbiIsIkNvbnRlbnRSZXNldCIsIkNhbGxiYWNrIiwiRXJyIiwiUmVmIiwiU2EiLCJVYSIsIlZhIiwiYmIiLCJpc0ZpYmVyTW91bnRlZCIsImZpbmRDdXJyZW50RmliZXJVc2luZ1Nsb3dQYXRoIiwiZmluZEN1cnJlbnRIb3N0RmliZXIiLCJmaW5kQ3VycmVudEhvc3RGaWJlcldpdGhOb1BvcnRhbHMiLCJpbmplY3RFcnJvclV0aWxzIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrIiwiaGFzQ2F1Z2h0RXJyb3IiLCJjbGVhckNhdWdodEVycm9yIiwicmV0aHJvd0NhdWdodEVycm9yIiwiaXNFbmRpc2giLCJpc01vdmVpc2giLCJpc1N0YXJ0aXNoIiwiZXhlY3V0ZURpcmVjdERpc3BhdGNoIiwiZXhlY3V0ZURpc3BhdGNoZXNJbk9yZGVyU3RvcEF0VHJ1ZSIsImhhc0Rpc3BhdGNoZXMiLCJpbmplY3RDb21wb25lbnRUcmVlIiwia2IiLCJsYiIsImluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQiLCJyZXN0b3JlU3RhdGVJZk5lZWRlZCIsInJiIiwiaW5qZWN0U3RhY2tCYXRjaGVkVXBkYXRlcyIsImluamVjdEZpYmVyQmF0Y2hlZFVwZGF0ZXMiLCJ3YiIsIl9lbmFibGVkIiwic2V0SGFuZGxlVG9wTGV2ZWwiLCJzZXRFbmFibGVkIiwiaXNFbmFibGVkIiwidHJhcEJ1YmJsZWRFdmVudCIsImxpc3RlbiIsImRpc3BhdGNoRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsImNhcHR1cmUiLCJFYiIsImdldExpc3RlbmVyIiwiX2N1cnJlbnRFbGVtZW50IiwiX3Jvb3ROb2RlSUQiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiUmIiLCJ0b3BBYm9ydCIsInRvcEFuaW1hdGlvbkVuZCIsInRvcEFuaW1hdGlvbkl0ZXJhdGlvbiIsInRvcEFuaW1hdGlvblN0YXJ0IiwidG9wQmx1ciIsInRvcENhbmNlbCIsInRvcENhblBsYXkiLCJ0b3BDYW5QbGF5VGhyb3VnaCIsInRvcENoYW5nZSIsInRvcENsaWNrIiwidG9wQ2xvc2UiLCJ0b3BDb21wb3NpdGlvbkVuZCIsInRvcENvbXBvc2l0aW9uU3RhcnQiLCJ0b3BDb21wb3NpdGlvblVwZGF0ZSIsInRvcENvbnRleHRNZW51IiwidG9wQ29weSIsInRvcEN1dCIsInRvcERvdWJsZUNsaWNrIiwidG9wRHJhZyIsInRvcERyYWdFbmQiLCJ0b3BEcmFnRW50ZXIiLCJ0b3BEcmFnRXhpdCIsInRvcERyYWdMZWF2ZSIsInRvcERyYWdPdmVyIiwidG9wRHJhZ1N0YXJ0IiwidG9wRHJvcCIsInRvcER1cmF0aW9uQ2hhbmdlIiwidG9wRW1wdGllZCIsInRvcEVuY3J5cHRlZCIsInRvcEVuZGVkIiwidG9wRXJyb3IiLCJ0b3BGb2N1cyIsInRvcElucHV0IiwidG9wS2V5RG93biIsInRvcEtleVByZXNzIiwidG9wS2V5VXAiLCJ0b3BMb2FkZWREYXRhIiwidG9wTG9hZCIsInRvcExvYWRlZE1ldGFkYXRhIiwidG9wTG9hZFN0YXJ0IiwidG9wTW91c2VEb3duIiwidG9wTW91c2VNb3ZlIiwidG9wTW91c2VPdXQiLCJ0b3BNb3VzZU92ZXIiLCJ0b3BNb3VzZVVwIiwidG9wUGFzdGUiLCJ0b3BQYXVzZSIsInRvcFBsYXkiLCJ0b3BQbGF5aW5nIiwidG9wUHJvZ3Jlc3MiLCJ0b3BSYXRlQ2hhbmdlIiwidG9wU2Nyb2xsIiwidG9wU2Vla2VkIiwidG9wU2Vla2luZyIsInRvcFNlbGVjdGlvbkNoYW5nZSIsInRvcFN0YWxsZWQiLCJ0b3BTdXNwZW5kIiwidG9wVGV4dElucHV0IiwidG9wVGltZVVwZGF0ZSIsInRvcFRvZ2dsZSIsInRvcFRvdWNoQ2FuY2VsIiwidG9wVG91Y2hFbmQiLCJ0b3BUb3VjaE1vdmUiLCJ0b3BUb3VjaFN0YXJ0IiwidG9wVHJhbnNpdGlvbkVuZCIsInRvcFZvbHVtZUNoYW5nZSIsInRvcFdhaXRpbmciLCJ0b3BXaGVlbCIsImhhbmRsZVRvcExldmVsIiwibGlzdGVuVG8iLCJpc0xpc3RlbmluZ1RvQWxsRGVwZW5kZW5jaWVzIiwiV2IiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJYYiIsImNoYXJBdCIsInN1YnN0cmluZyIsIlliIiwiaXNVbml0bGVzc051bWJlciIsInNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9ucyIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kQXR0YWNobWVudCIsImJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmRJbWFnZSIsImJhY2tncm91bmRQb3NpdGlvblgiLCJiYWNrZ3JvdW5kUG9zaXRpb25ZIiwiYmFja2dyb3VuZFJlcGVhdCIsImJhY2tncm91bmRQb3NpdGlvbiIsImJvcmRlciIsImJvcmRlcldpZHRoIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJDb2xvciIsImJvcmRlckJvdHRvbSIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyQm90dG9tU3R5bGUiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlckxlZnQiLCJib3JkZXJMZWZ0V2lkdGgiLCJib3JkZXJMZWZ0U3R5bGUiLCJib3JkZXJMZWZ0Q29sb3IiLCJib3JkZXJSaWdodCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJSaWdodFN0eWxlIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlclRvcCIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyVG9wU3R5bGUiLCJib3JkZXJUb3BDb2xvciIsImZvbnQiLCJmb250U3R5bGUiLCJmb250VmFyaWFudCIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsIm91dGxpbmUiLCJvdXRsaW5lV2lkdGgiLCJvdXRsaW5lU3R5bGUiLCJvdXRsaW5lQ29sb3IiLCJaYiIsIiRiIiwiYWMiLCJFYyIsImJjIiwiY3JlYXRlRGFuZ2Vyb3VzU3RyaW5nRm9yU3R5bGVzIiwic2V0VmFsdWVGb3JTdHlsZXMiLCJ0cmltIiwic2V0UHJvcGVydHkiLCJSZWdFeHAiLCJnYyIsInNldEF0dHJpYnV0ZUZvcklEIiwic2V0QXR0cmlidXRlRm9yUm9vdCIsImdldFZhbHVlRm9yUHJvcGVydHkiLCJnZXRWYWx1ZUZvckF0dHJpYnV0ZSIsInNldFZhbHVlRm9yUHJvcGVydHkiLCJpc05hTiIsImRlbGV0ZVZhbHVlRm9yUHJvcGVydHkiLCJzZXRBdHRyaWJ1dGVOUyIsInNldFZhbHVlRm9yQXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiZGVsZXRlVmFsdWVGb3JBdHRyaWJ1dGUiLCJoYyIsImljIiwiUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSIsImtjIiwicGhhc2UiLCJyZXNldEN1cnJlbnRGaWJlciIsImdldEN1cnJlbnRTdGFjayIsInNldEN1cnJlbnRGaWJlciIsImdldEN1cnJlbnRGaWJlck93bmVyTmFtZSIsImdldEN1cnJlbnRGaWJlclN0YWNrQWRkZW5kdW0iLCJsYyIsIm1jIiwiZ2V0SG9zdFByb3BzIiwiY2hlY2tlZCIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsVmFsdWUiLCJpbml0aWFsQ2hlY2tlZCIsImluaXRXcmFwcGVyU3RhdGUiLCJjb250cm9sbGVkIiwidXBkYXRlV3JhcHBlciIsInBhcnNlRmxvYXQiLCJwb3N0TW91bnRXcmFwcGVyIiwicXVlcnlTZWxlY3RvckFsbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwicWMiLCJzYyIsInZhbGlkYXRlUHJvcHMiLCJ1YyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJwb3N0VXBkYXRlV3JhcHBlciIsInZjIiwid2MiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJfZ2V0VHJhY2tlckZyb21Ob2RlIiwiRGMiLCJGYyIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJHYyIsImV4ZWMiLCJjaGFyQ29kZUF0IiwiSmMiLCJPYyIsIlBjIiwiUWMiLCJTYyIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwic2V0SW5pdGlhbFByb3BlcnRpZXMiLCJfX2h0bWwiLCJvbkNsaWNrIiwib25jbGljayIsImRpZmZQcm9wZXJ0aWVzIiwidXBkYXRlUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFByb3BlcnRpZXMiLCJkaWZmSHlkcmF0ZWRUZXh0Iiwid2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQiLCJ3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQiLCJ3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQiLCJUYyIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImFkIiwicGVyZm9ybWFuY2UiLCJub3ciLCJEYXRlIiwiYmQiLCJjZCIsInBvc3RNZXNzYWdlIiwiSW5maW5pdHkiLCJqZSIsImtlIiwiZGQiLCJySUMiLCJOb1dvcmsiLCJTeW5jaHJvbm91c1ByaW9yaXR5IiwiVGFza1ByaW9yaXR5IiwiSGlnaFByaW9yaXR5IiwiTG93UHJpb3JpdHkiLCJPZmZzY3JlZW5Qcmlvcml0eSIsImZkIiwiamQiLCJrZCIsInVkIiwiYWRkVXBkYXRlIiwiYWRkUmVwbGFjZVVwZGF0ZSIsImFkZEZvcmNlVXBkYXRlIiwiZ2V0VXBkYXRlUHJpb3JpdHkiLCJhZGRUb3BMZXZlbFVwZGF0ZSIsImJlZ2luVXBkYXRlUXVldWUiLCJjb21taXRDYWxsYmFja3MiLCJ2ZCIsIndkIiwieGQiLCJjcmVhdGVDdXJzb3IiLCJpc0VtcHR5IiwieWQiLCJBZCIsIkJkIiwiQ2QiLCJEZCIsIkVkIiwiRmQiLCJMZCIsImdldFVubWFza2VkQ29udGV4dCIsImNhY2hlQ29udGV4dCIsImdldE1hc2tlZENvbnRleHQiLCJjb250ZXh0VHlwZXMiLCJoYXNDb250ZXh0Q2hhbmdlZCIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJwb3BDb250ZXh0UHJvdmlkZXIiLCJwb3BUb3BMZXZlbENvbnRleHRPYmplY3QiLCJwdXNoVG9wTGV2ZWxDb250ZXh0T2JqZWN0IiwiY3Vyc29yIiwicHJvY2Vzc0NoaWxkQ29udGV4dCIsInB1c2hDb250ZXh0UHJvdmlkZXIiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsImludmFsaWRhdGVDb250ZXh0UHJvdmlkZXIiLCJyZXNldENvbnRleHQiLCJmaW5kQ3VycmVudFVubWFza2VkQ29udGV4dCIsIlBkIiwiTm9Db250ZXh0IiwiQXN5bmNVcGRhdGVzIiwiU2QiLCJVZCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiJGQiLCJkZSIsImNyZWF0ZVdvcmtJblByb2dyZXNzIiwiY3JlYXRlSG9zdFJvb3RGaWJlciIsImNyZWF0ZUZpYmVyRnJvbUVsZW1lbnQiLCJjcmVhdGVGaWJlckZyb21GcmFnbWVudCIsImNyZWF0ZUZpYmVyRnJvbVRleHQiLCJjcmVhdGVGaWJlckZyb21FbGVtZW50VHlwZSIsImNyZWF0ZUZpYmVyRnJvbUhvc3RJbnN0YW5jZUZvckRlbGV0aW9uIiwiY3JlYXRlRmliZXJGcm9tQ29yb3V0aW5lIiwiY3JlYXRlRmliZXJGcm9tWWllbGQiLCJjcmVhdGVGaWJlckZyb21Qb3J0YWwiLCJsYXJnZXJQcmlvcml0eSIsImVlIiwibGUiLCJjcmVhdGVDb3JvdXRpbmUiLCJjcmVhdGVZaWVsZCIsImlzQ29yb3V0aW5lIiwiaXNZaWVsZCIsIlJFQUNUX1lJRUxEX1RZUEUiLCJSRUFDVF9DT1JPVVRJTkVfVFlQRSIsIm1lIiwiaXNQb3J0YWwiLCJSRUFDVF9QT1JUQUxfVFlQRSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwicmVjb25jaWxlQ2hpbGRGaWJlcnMiLCJyZWNvbmNpbGVDaGlsZEZpYmVyc0luUGxhY2UiLCJtb3VudENoaWxkRmliZXJzSW5QbGFjZSIsImNsb25lQ2hpbGRGaWJlcnMiLCJmZyIsImdnIiwiaWciLCJpbmplY3RJbnRlcm5hbHMiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm9uQ29tbWl0Um9vdCIsIm9uQ29tbWl0VW5tb3VudCIsIl9pbmplY3RGaWJlciIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwid2giLCJnZXRPZmZzZXRzIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJzdGFydENvbnRhaW5lciIsImVuZENvbnRhaW5lciIsImNsb25lUmFuZ2UiLCJzZWxlY3ROb2RlQ29udGVudHMiLCJzZXRFbmQiLCJzdGFydE9mZnNldCIsImVuZE9mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJjb2xsYXBzZWQiLCJzZXRPZmZzZXRzIiwiZXh0ZW5kIiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJ4aCIsInloIiwiY29udGVudEVkaXRhYmxlIiwiZ2V0U2VsZWN0aW9uSW5mb3JtYXRpb24iLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwicmVzdG9yZVNlbGVjdGlvbiIsInNldFNlbGVjdGlvbiIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJfaW5qZWN0U3RhY2siLCJpc0FuY2VzdG9yIiwiZ2V0TG93ZXN0Q29tbW9uQW5jZXN0b3IiLCJ0cmF2ZXJzZUVudGVyTGVhdmUiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzIiwiWCIsIl9yb290IiwiX3N0YXJ0VGV4dCIsIl9mYWxsYmFja1RleHQiLCJVaCIsImluaXRpYWxpemUiLCJnZXRUZXh0IiwiV2giLCJYaCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImF1Z21lbnRDbGFzcyIsImVpIiwiZG9jdW1lbnRNb2RlIiwiZmkiLCJnaSIsIm9wZXJhIiwicGFyc2VJbnQiLCJoaSIsImtpIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInJpIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiQmkiLCJJaSIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJ2aWV3IiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0Iiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIk9pIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJQaSIsIlFpIiwiUmkiLCJiaiIsImRqIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImNsaXBib2FyZERhdGEiLCJpaiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJqaiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJsb2NhdGlvbiIsInJlcGVhdCIsImxvY2FsZSIsImRhdGFUcmFuc2ZlciIsInRvdWNoZXMiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInBqIiwicWoiLCJyaiIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJzaiIsIloiLCJ0aiIsInVqIiwidmoiLCJ3aiIsImFsbG93RnVsbFNjcmVlbiIsImFsbG93VHJhbnNwYXJlbmN5IiwiYXN5bmMiLCJhdXRvUGxheSIsImNvbHMiLCJjb250cm9scyIsImRlZmF1bHQiLCJkZWZlciIsImRvd25sb2FkIiwiZHJhZ2dhYmxlIiwiZm9ybU5vVmFsaWRhdGUiLCJoaWRkZW4iLCJsb29wIiwibXV0ZWQiLCJub1ZhbGlkYXRlIiwib3BlbiIsInBsYXlzSW5saW5lIiwicmVhZE9ubHkiLCJyZXF1aXJlZCIsInJldmVyc2VkIiwicm93cyIsInJvd1NwYW4iLCJzY29wZWQiLCJzZWFtbGVzcyIsInNwYW4iLCJzcGVsbENoZWNrIiwiaXRlbVNjb3BlIiwiYWNjZXB0Q2hhcnNldCIsImNsYXNzTmFtZSIsImh0bWxGb3IiLCJodHRwRXF1aXYiLCJ2YWxpZGl0eSIsImJhZElucHV0IiwiYWN0aXZlRWxlbWVudCIsInhqIiwieWoiLCJ4bGluayIsInhtbCIsInpqIiwiYXV0b1JldmVyc2UiLCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkIiwicHJlc2VydmVBbHBoYSIsInhsaW5rQWN0dWF0ZSIsInhsaW5rQXJjcm9sZSIsInhsaW5rSHJlZiIsInhsaW5rUm9sZSIsInhsaW5rU2hvdyIsInhsaW5rVGl0bGUiLCJ4bGlua1R5cGUiLCJ4bWxCYXNlIiwieG1sTGFuZyIsInhtbFNwYWNlIiwiQWoiLCJDaiIsIkVqIiwiSmoiLCJLaiIsIkxqIiwiTWoiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImZpbmRIb3N0SW5zdGFuY2UiLCJZaiIsIlpqIiwiZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHMiLCJ0YWdOYW1lIiwiZm9jdXMiLCJlayIsImh5ZHJhdGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzIiwiRXZlbnRQbHVnaW5IdWIiLCJFdmVudFBsdWdpblJlZ2lzdHJ5IiwiRXZlbnRQcm9wYWdhdG9ycyIsIlJlYWN0Q29udHJvbGxlZENvbXBvbmVudCIsIlJlYWN0RE9NQ29tcG9uZW50VHJlZSIsIlJlYWN0RE9NRXZlbnRMaXN0ZW5lciIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsIkV4ZWN1dGlvbkVudmlyb25tZW50IiwiY2FuVXNlV29ya2VycyIsIldvcmtlciIsImNhblVzZUV2ZW50TGlzdGVuZXJzIiwiY2FuVXNlVmlld3BvcnQiLCJzY3JlZW4iLCJpc0luV29ya2VyIiwiRXZlbnRMaXN0ZW5lciIsImV2ZW50VHlwZSIsInJlZ2lzdGVyRGVmYXVsdCIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsImNvbnRhaW5zTm9kZSIsIm91dGVyTm9kZSIsImlubmVyTm9kZSIsImlzVGV4dE5vZGUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiaXNOb2RlIiwiZG9jIiwiTm9kZSIsImdldEFjdGl2ZUVsZW1lbnQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyMiIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9pbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsIndyaXRhYmxlIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfZXh0ZW5kcyIsIl9zbGljZWRUb0FycmF5Iiwic2xpY2VJdGVyYXRvciIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJfcyIsIl9pIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX3JlYWN0RG9tIiwiX3NsaWRlIiwiX3NsaWRlMiIsIl91dGlscyIsIndyYXBBcm91bmRWYWx1ZSIsImhhcmRCb3VuZGVkVmFsdWUiLCJub3JtYWxpemVJbmRleCIsImlkeCIsImxlbiIsIldoaXJsaWdpZyIsIl9Db21wb25lbnQiLCJfdGhpcyIsImdldFByb3RvdHlwZU9mIiwiZXZlbnRMaXN0ZW5lcnMiLCJpc1Njcm9sbGluZyIsImNhblNlbGZDb3JyZWN0IiwicHJldmVudEF1dG9Db3JyZWN0IiwiaXNBbmltYXRpbmciLCJzaG91bGRTZWxmQ29ycmVjdCIsInNuYXBUb1NsaWRlIiwiaGFuZGxlS2V5VXAiLCJuZXh0S2V5cyIsInByZXZLZXlzIiwiaXNOZXh0IiwiaXNQcmV2IiwiY2F0Y2giLCJwcmV2IiwiZ2V0UGFydGlhbGx5T2JzY3VyZWRTbGlkZXMiLCJ3aGlybGlnaWciLCJmaW5kRmlyc3RPYnNjdXJlZENoaWxkSW5kZXgiLCJmaW5kSW5kZXgiLCJmaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCIsImZpbmRMYXN0T2JzY3VyZWRDaGlsZEluZGV4IiwiZ2V0TmVhcmVzdFNsaWRlSW5kZXgiLCJfdGhpcyR3aGlybGlnaWciLCJvZmZzZXRzIiwib2Zmc2V0TGVmdCIsInNldFJlZiIsImFjdGl2ZUluZGV4Iiwic3RhcnRBdCIsInZpc2libGVTbGlkZXMiLCJzbGlkZUJ5Iiwic2xpZGVUbyIsIl90aGlzMiIsIkRPTU5vZGUiLCJjaGlsZENvdW50IiwidXAiLCJkb3duIiwiYWZ0ZXJTbGlkZSIsImRpcmVjdGlvbiIsInByZXZlbnRTd2lwZSIsInByZXZQcm9wcyIsIm5leHRQcm9wcyIsInByb3BWYWx1ZXMiLCJuZXh0UHJvcFZhbHVlcyIsImV2ZXJ5IiwiaW5maW5pdGUiLCJsYXN0SW5kZXgiLCJfZ2V0UGFydGlhbGx5T2JzY3VyZWQiLCJfZ2V0UGFydGlhbGx5T2JzY3VyZWQyIiwibmV4dFNsaWRlIiwibmV4dEluZmludGVTbGlkZSIsIm5leHRBY3RpdmVDYW5kaWRhdGUiLCJuZXh0QWN0aXZlIiwibmV4dEFjdGl2ZUluZmluaXRlIiwicHJldlNsaWRlIiwicHJldkluZmludGVTbGlkZSIsIl90aGlzMyIsIl9yZWY1JGltbWVkaWF0ZSIsInJlamVjdCIsIl9wcm9wcyIsImJlZm9yZVNsaWRlIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJwcmV2ZW50U2Nyb2xsIiwiX3doaXJsaWdpZyIsInNsaWRlSW5kZXgiLCJzdGFydGluZ0luZGV4IiwiXyIsIm9yaWdpbmFsT3ZlcmZsb3dYIiwidGhlbiIsIl9wcm9wczIiLCJndXR0ZXIiLCJpbm5lclJlZiIsIm9uU2xpZGVDbGljayIsInNsaWRlQ2xhc3MiLCJwcmV2ZW50U2Nyb2xsaW5nIiwic3R5bGVzIiwiZGlzcGxheSIsImZsZXhGbG93IiwianVzdGlmeUNvbnRlbnQiLCJvdmVyZmxvd1giLCJtc092ZXJmbG93U3R5bGUiLCJwb3NpdGlvbiIsIldlYmtpdE92ZXJmbG93U2Nyb2xsaW5nIiwidGFiSW5kZXgiLCJvbktleVVwIiwiYmFzaXMiLCJTbGlkZSIsIl9yZWYkYmFzaXMiLCJfcmVmJGd1dHRlciIsIl9yZWYkY2xhc3NOYW1lIiwid2lkdGgiLCJtYXJnaW5MZWZ0IiwiX2RlZmluZVByb3BlcnR5IiwiX3doaXJsaWdpZzIiLCJfbWFya2VkIiwiX21hcmtlZDIiLCJpc0NoZWNrYWJsZSIsImNvZXJjZVRhYmxlIiwiTnVtYmVyIiwiRnVuY3Rpb24iLCJjaGVja2JveCIsIkJvb2xlYW4iLCJyYWRpbyIsImNvZXJjZVZhbHVlVG9UeXBlIiwiaWRlbnQiLCJTbGlkZXIiLCJfdGVtcCIsIl9yZXQiLCJoYW5kbGVBZnRlclNsaWRlIiwiY3VycmVudFNsaWRlIiwic2V0U3RhdGVGcm9tSW5wdXQiLCJwcm9wTmFtZSIsImxhYmVsIiwib25DaGFuZ2UiLCJwZXJzaXN0ZWRTdGF0ZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwYXJzZSIsInNldEl0ZW0iLCJfc3RhdGUiLCJhZnRlciIsIm5ld0luZGV4IiwibG9nIiwic2xpZGVzIiwiZmlsbCIsInNyYyIsImhlaWdodCIsImpvaW5lciIsIkRlbW8iLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl9yZXQyIiwiZG9jcyIsIl90aGlzNCIsImZldGNoIiwiYWx0IiwicXVlcnlTZWxlY3RvciIsImdsb2JhbCIsIkxleGVyIiwidG9rZW5zIiwibGlua3MiLCJtYXJrZWQiLCJkZWZhdWx0cyIsInJ1bGVzIiwiYmxvY2siLCJub3JtYWwiLCJnZm0iLCJ0YWJsZXMiLCJJbmxpbmVMZXhlciIsImlubGluZSIsInJlbmRlcmVyIiwiUmVuZGVyZXIiLCJicmVha3MiLCJwZWRhbnRpYyIsIlBhcnNlciIsInRva2VuIiwiZW5jb2RlIiwidW5lc2NhcGUiLCJyZWdleCIsIm9wdCIsIm1lcmdlIiwicGVuZGluZyIsImhpZ2hsaWdodCIsImxleCIsIm91dCIsImxhbmciLCJjb2RlIiwiZXNjYXBlZCIsIm1lc3NhZ2UiLCJzaWxlbnQiLCJuZXdsaW5lIiwiZmVuY2VzIiwiaGVhZGluZyIsIm5wdGFibGUiLCJsaGVhZGluZyIsImJsb2NrcXVvdGUiLCJsaXN0IiwiZGVmIiwidGFibGUiLCJwYXJhZ3JhcGgiLCJidWxsZXQiLCJfdGFnIiwiYnEiLCJsb29zZSIsImNhcCIsImJ1bGwiLCJzcGFjZSIsImRlcHRoIiwiaGVhZGVyIiwiYWxpZ24iLCJjZWxscyIsIm9yZGVyZWQiLCJtYXRjaCIsInNtYXJ0TGlzdHMiLCJzYW5pdGl6ZSIsInByZSIsInNhbml0aXplciIsImhyZWYiLCJ0aXRsZSIsImF1dG9saW5rIiwicmVmbGluayIsIm5vbGluayIsInN0cm9uZyIsImVtIiwiZGVsIiwiX2luc2lkZSIsIl9ocmVmIiwib3V0cHV0IiwibWFuZ2xlIiwiaW5MaW5rIiwib3V0cHV0TGluayIsImNvZGVzcGFuIiwic21hcnR5cGFudHMiLCJpbWFnZSIsImxhbmdQcmVmaXgiLCJxdW90ZSIsImxldmVsIiwicmF3IiwiaGVhZGVyUHJlZml4IiwieGh0bWwiLCJsaXN0aXRlbSIsInRhYmxlcm93IiwiY29udGVudCIsInRhYmxlY2VsbCIsImZsYWdzIiwicHJvdCIsImRlY29kZVVSSUNvbXBvbmVudCIsInJldmVyc2UiLCJ0b2siLCJwZWVrIiwicGFyc2VUZXh0Iiwicm93IiwiY2VsbCIsImoiLCJzZXRPcHRpb25zIiwicGFyc2VyIiwibGV4ZXIiLCJpbmxpbmVMZXhlciIsImV2YWwiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEVBQUFDLEdBQ0EsZ0JBQUFDLFVBQUEsZ0JBQUFDLFFBQ0FBLE9BQUFELFFBQUFELElBQ0Esa0JBQUFHLGdCQUFBQyxJQUNBRCxVQUFBSCxHQUNBLGdCQUFBQyxTQUNBQSxRQUFBLGVBQUFELElBRUFELEVBQUEsZUFBQUMsS0FDQ0ssS0FBQSxXQUNELE1DQWdCLFVBQVVDLEdDTjFCLFFBQUFDLEdBQUFDLEdBR0EsR0FBQUMsRUFBQUQsR0FDQSxNQUFBQyxHQUFBRCxHQUFBUCxPQUdBLElBQUFDLEdBQUFPLEVBQUFELElBQ0FFLEVBQUFGLEVBQ0FHLEdBQUEsRUFDQVYsV0FVQSxPQU5BSyxHQUFBRSxHQUFBSSxLQUFBVixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBTSxHQUdBTCxFQUFBUyxHQUFBLEVBR0FULEVBQUFELFFBdkJBLEdBQUFRLEtBNERBLE9BaENBRixHQUFBTSxFQUFBUCxFQUdBQyxFQUFBTyxFQUFBTCxFQUdBRixFQUFBUSxFQUFBLFNBQUFkLEVBQUFlLEVBQUFDLEdBQ0FWLEVBQUFXLEVBQUFqQixFQUFBZSxJQUNBRyxPQUFBQyxlQUFBbkIsRUFBQWUsR0FDQUssY0FBQSxFQUNBQyxZQUFBLEVBQ0FDLElBQUFOLEtBTUFWLEVBQUFpQixFQUFBLFNBQUF0QixHQUNBLEdBQUFlLEdBQUFmLEtBQUF1QixXQUNBLFdBQTJCLE1BQUF2QixHQUFBLFNBQzNCLFdBQWlDLE1BQUFBLEdBRWpDLE9BREFLLEdBQUFRLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVYsRUFBQVcsRUFBQSxTQUFBUSxFQUFBQyxHQUFzRCxNQUFBUixRQUFBUyxVQUFBQyxlQUFBakIsS0FBQWMsRUFBQUMsSUFHdERwQixFQUFBdUIsRUFBQSxHQUdBdkIsSUFBQXdCLEVBQUEsTURnQk0sU0FBVTdCLEVBQVFELEVBQVNNLEdBRWpD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QUYsYUFBQSxFQUNBTSxhQUFBLEdBQ0FwRSxTQUFBLEdBQUFDLEdBQ0FvRSxPQUFBLEdBT0E5RSxFQUFBYSxTQUNBYixFQUFBOEYsT0FBQWpGLEVBQUFyQyxNQUVBd0IsRUFBQVUsV0FFQVYsRUFBQUgsUUFDQUcsRUFBQStGLE1BQUFsRyxFQUFBeUIsSUFFQXRCLEVBQUFPLGNBQ0FQLEVBQUFnRyxZQUFBekYsRUFBQTJELE9BRUFsRSxFQUFBeEIsTUFBQXdCLEVBR0ExNUQsRUFBQUQsUUFBQTI1RCxJQU9DaDVELEtBQUEsV0FDRCxNQUFBUCxRQUFBLG1CQUFBNEcsZUFBQXV5RCxTekJpdUU2QjU0RCxLQUFLWCxFQUFTTSxFQUFvQixNQUl6RCxTQUFVTCxFQUFRRCxHMEJ6K0d4QixHQUFBb04sRUFHQUEsR0FBQSxXQUNBLE1BQUFoTixRQUdBLEtBRUFnTixLQUFBNnBELFNBQUEscUJBQUEySSxNQUFBLFFBQ0MsTUFBQXg0RCxHQUVELGdCQUFBSixVQUNBb0csRUFBQXBHLFFBT0EvRyxFQUFBRCxRQUFBb04iLCJmaWxlIjoiZGVtby5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcInJlYWN0LXRyYWNrXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcInJlYWN0LXRyYWNrXCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcInJlYWN0LXRyYWNrXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcInJlYWN0LXRyYWNrXCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbi8qKioqKiovIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHRpOiBtb2R1bGVJZCxcbi8qKioqKiovIFx0XHRcdGw6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbi8qKioqKiovIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuLyoqKioqKi8gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuLyoqKioqKi8gXHRcdFx0XHRnZXQ6IGdldHRlclxuLyoqKioqKi8gXHRcdFx0fSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4vKioqKioqLyBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4vKioqKioqLyBcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIyKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuaWYgKHRydWUpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuXG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcblxuXG4vKioqLyB9KSxcbi8qIDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChmYWxzZSkge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAodHJ1ZSkge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG5cblxuLyoqKi8gfSksXG4vKiA0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgaW5jbHVkZXMgPSBleHBvcnRzLmluY2x1ZGVzID0gZnVuY3Rpb24gaW5jbHVkZXModmFsLCBhcnIpIHtcbiAgcmV0dXJuIGFyci5pbmNsdWRlcyA/IGFyci5pbmNsdWRlcyh2YWwpIDogISFhcnIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW0gPT09IHZhbDtcbiAgfSkubGVuZ3RoO1xufTtcbnZhciB2YWx1ZXMgPSBleHBvcnRzLnZhbHVlcyA9IE9iamVjdC52YWx1ZXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBvYmpba2V5XTtcbiAgfSk7XG59O1xudmFyIGNvbXBvc2UgPSBleHBvcnRzLmNvbXBvc2UgPSBmdW5jdGlvbiBjb21wb3NlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZm5zID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgZm5zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gZm5zLnJlZHVjZVJpZ2h0KGZ1bmN0aW9uIChjdXJyVmFsLCBmbikge1xuICAgICAgcmV0dXJuIGZuKGN1cnJWYWwpO1xuICAgIH0sIHZhbCk7XG4gIH07XG59O1xudmFyIG1pbk1hcCA9IGV4cG9ydHMubWluTWFwID0gZnVuY3Rpb24gbWluTWFwKCkge1xuICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHMgPSBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgIHZhbHNbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIE1hdGgubWluLmFwcGx5KE1hdGgsIHZhbHMuY29uY2F0KFt2YWxdKSk7XG4gIH07XG59O1xudmFyIG1heE1hcCA9IGV4cG9ydHMubWF4TWFwID0gZnVuY3Rpb24gbWF4TWFwKCkge1xuICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHMgPSBBcnJheShfbGVuMyksIF9rZXkzID0gMDsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgIHZhbHNbX2tleTNdID0gYXJndW1lbnRzW19rZXkzXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KE1hdGgsIHZhbHMuY29uY2F0KFt2YWxdKSk7XG4gIH07XG59O1xudmFyIG5vb3AgPSBleHBvcnRzLm5vb3AgPSBmdW5jdGlvbiBub29wKCkge307XG52YXIgZWFzZU91dFF1aW50ID0gZXhwb3J0cy5lYXNlT3V0UXVpbnQgPSBmdW5jdGlvbiBlYXNlT3V0UXVpbnQodCkge1xuICByZXR1cm4gMSArIC0tdCAqIE1hdGgucG93KHQsIDQpO1xufTtcbnZhciBvbiA9IGV4cG9ydHMub24gPSBmdW5jdGlvbiBvbihldnQpIHtcbiAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKGNiKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbCkge1xuICAgICAgaWYgKGVsICYmIHR5cGVvZiBlbC5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZ0LCBjYiwgb3B0cyk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0LCBjYik7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbn07XG5cbnZhciBvbldpbmRvd1Njcm9sbCA9IGV4cG9ydHMub25XaW5kb3dTY3JvbGwgPSBmdW5jdGlvbiBvbldpbmRvd1Njcm9sbChjYikge1xuICByZXR1cm4gb24oJ3Njcm9sbCcsIHRydWUpKGNiKSh3aW5kb3cpO1xufTtcblxudmFyIG9uU2Nyb2xsID0gZXhwb3J0cy5vblNjcm9sbCA9IGZ1bmN0aW9uIG9uU2Nyb2xsKGNiKSB7XG4gIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSxcbiAgICAgIF9yZWYkdGFyZ2V0ID0gX3JlZi50YXJnZXQsXG4gICAgICB0YXJnZXQgPSBfcmVmJHRhcmdldCA9PT0gdW5kZWZpbmVkID8gd2luZG93IDogX3JlZiR0YXJnZXQ7XG5cbiAgcmV0dXJuIG9uV2luZG93U2Nyb2xsKGZ1bmN0aW9uIChlKSB7XG4gICAgcmV0dXJuICh0YXJnZXQgPT09IHdpbmRvdyB8fCB0YXJnZXQgPT09IGUudGFyZ2V0KSAmJiBjYihlKTtcbiAgfSk7XG59O1xuXG52YXIgb25TY3JvbGxFbmQgPSBleHBvcnRzLm9uU2Nyb2xsRW5kID0gZnVuY3Rpb24gb25TY3JvbGxFbmQoY2IpIHtcbiAgdmFyIF9yZWYyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSxcbiAgICAgIF9yZWYyJHdhaXQgPSBfcmVmMi53YWl0LFxuICAgICAgd2FpdCA9IF9yZWYyJHdhaXQgPT09IHVuZGVmaW5lZCA/IDEwMCA6IF9yZWYyJHdhaXQsXG4gICAgICBfcmVmMiR0YXJnZXQgPSBfcmVmMi50YXJnZXQsXG4gICAgICB0YXJnZXQgPSBfcmVmMiR0YXJnZXQgPT09IHVuZGVmaW5lZCA/IHdpbmRvdyA6IF9yZWYyJHRhcmdldDtcblxuICByZXR1cm4gZnVuY3Rpb24gKHRpbWVvdXRJRCkge1xuICAgIHJldHVybiBvblNjcm9sbChmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dElEKTtcbiAgICAgIHRpbWVvdXRJRCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZXZ0LnRhcmdldCA9PT0gdGFyZ2V0ID8gY2IoKSA6IHVuZGVmaW5lZDtcbiAgICAgIH0sIHdhaXQpO1xuICAgIH0pO1xuICB9KDApO1xufTtcblxudmFyIG9uU2Nyb2xsU3RhcnQgPSBleHBvcnRzLm9uU2Nyb2xsU3RhcnQgPSBmdW5jdGlvbiBvblNjcm9sbFN0YXJ0KGNiKSB7XG4gIHZhciBfcmVmMyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sXG4gICAgICBfcmVmMyR0YXJnZXQgPSBfcmVmMy50YXJnZXQsXG4gICAgICB0YXJnZXQgPSBfcmVmMyR0YXJnZXQgPT09IHVuZGVmaW5lZCA/IHdpbmRvdyA6IF9yZWYzJHRhcmdldDtcblxuICB2YXIgc3RhcnRlZCA9IGZhbHNlO1xuICB2YXIgb2ZmU2Nyb2xsRW5kID0gb25TY3JvbGxFbmQoZnVuY3Rpb24gKCkge1xuICAgIHN0YXJ0ZWQgPSBmYWxzZTtcbiAgfSwgeyB0YXJnZXQ6IHRhcmdldCB9KTtcbiAgdmFyIG9mZlNjcm9sbCA9IG9uU2Nyb2xsKGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKCFzdGFydGVkKSB7XG4gICAgICBzdGFydGVkID0gdHJ1ZTtcbiAgICAgIGNiKGUpO1xuICAgIH1cbiAgfSwgeyB0YXJnZXQ6IHRhcmdldCB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIG9mZlNjcm9sbCgpO1xuICAgIG9mZlNjcm9sbEVuZCgpO1xuICB9O1xufTtcblxudmFyIG9uU3dpcGUgPSBleHBvcnRzLm9uU3dpcGUgPSBmdW5jdGlvbiBvblN3aXBlKGNiKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgdmFyIG9mZlRvdWNoU3RhcnQgPSBvbigndG91Y2hzdGFydCcpKGZ1bmN0aW9uIChfcmVmNCkge1xuICAgICAgdmFyIHRhcmdldFRvdWNoZXMgPSBfcmVmNC50YXJnZXRUb3VjaGVzO1xuICAgICAgdmFyIF90YXJnZXRUb3VjaGVzJCA9IHRhcmdldFRvdWNoZXNbMF0sXG4gICAgICAgICAgc3RhcnRYID0gX3RhcmdldFRvdWNoZXMkLnBhZ2VYLFxuICAgICAgICAgIHN0YXJ0WSA9IF90YXJnZXRUb3VjaGVzJC5wYWdlWTtcblxuICAgICAgdmFyIG9mZlRvdWNoRW5kID0gb24oJ3RvdWNoZW5kJykoZnVuY3Rpb24gKF9yZWY1KSB7XG4gICAgICAgIHZhciBjaGFuZ2VkVG91Y2hlcyA9IF9yZWY1LmNoYW5nZWRUb3VjaGVzO1xuICAgICAgICB2YXIgX2NoYW5nZWRUb3VjaGVzJCA9IGNoYW5nZWRUb3VjaGVzWzBdLFxuICAgICAgICAgICAgZW5kWCA9IF9jaGFuZ2VkVG91Y2hlcyQucGFnZVgsXG4gICAgICAgICAgICBlbmRZID0gX2NoYW5nZWRUb3VjaGVzJC5wYWdlWTtcblxuICAgICAgICB2YXIgeERpZmYgPSBlbmRYIC0gc3RhcnRYO1xuICAgICAgICB2YXIgYWJzWERpZmYgPSBNYXRoLmFicyh4RGlmZik7XG4gICAgICAgIHZhciB5RGlmZiA9IGVuZFkgLSBzdGFydFk7XG4gICAgICAgIHZhciBhYnNZRGlmZiA9IE1hdGguYWJzKHlEaWZmKTtcbiAgICAgICAgaWYgKE1hdGgubWF4KGFic1hEaWZmLCBhYnNZRGlmZikgPiAyMCkge1xuICAgICAgICAgIHZhciBkaXIgPSBhYnNYRGlmZiA+IGFic1lEaWZmID8gLyogaCAqL3hEaWZmIDwgMCA/ICdyaWdodCcgOiAnbGVmdCcgOiAvKiB2ICoveURpZmYgPCAwID8gJ2Rvd24nIDogJ3VwJztcbiAgICAgICAgICBjYihkaXIpO1xuICAgICAgICB9XG4gICAgICAgIG9mZlRvdWNoRW5kKCk7XG4gICAgICB9KSh0YXJnZXQpO1xuICAgIH0pKHRhcmdldCk7XG5cbiAgICByZXR1cm4gb2ZmVG91Y2hTdGFydDtcbiAgfTtcbn07XG5cbnZhciB0cmFja1RvdWNoZXNGb3JFbGVtZW50ID0gZXhwb3J0cy50cmFja1RvdWNoZXNGb3JFbGVtZW50ID0gZnVuY3Rpb24gdHJhY2tUb3VjaGVzRm9yRWxlbWVudChlbCkge1xuICB2YXIgdG91Y2hJZHMgPSBbXTtcbiAgb24oJ3RvdWNoZW5kJykoZnVuY3Rpb24gKF9yZWY2KSB7XG4gICAgdmFyIHRhcmdldFRvdWNoZXMgPSBfcmVmNi50YXJnZXRUb3VjaGVzO1xuICAgIHRvdWNoSWRzID0gdGFyZ2V0VG91Y2hlcztcbiAgfSkoZWwpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0b3VjaElkcy5sZW5ndGg7XG4gIH07XG59O1xuXG52YXIgdHJhY2tPbmdvaW5nTW91c2VJbnRlcmFjdGlvbiA9IGV4cG9ydHMudHJhY2tPbmdvaW5nTW91c2VJbnRlcmFjdGlvbiA9IGZ1bmN0aW9uIHRyYWNrT25nb2luZ01vdXNlSW50ZXJhY3Rpb24oZWwpIHtcbiAgdmFyIGlzSW50ZXJhY3RpbmcgPSBmYWxzZTtcbiAgb24oJ21vdXNlZG93bicpKGZ1bmN0aW9uICgpIHtcbiAgICBpc0ludGVyYWN0aW5nID0gdHJ1ZTtcbiAgfSkoZWwpO1xuICBvbignbW91c2V1cCcpKGZ1bmN0aW9uICgpIHtcbiAgICBpc0ludGVyYWN0aW5nID0gZmFsc2U7XG4gIH0pKGRvY3VtZW50LmJvZHkpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBpc0ludGVyYWN0aW5nO1xuICB9O1xufTtcblxudmFyIGhhc09uZ29pbmdJbnRlcmFjdGlvbiA9IGV4cG9ydHMuaGFzT25nb2luZ0ludGVyYWN0aW9uID0gZnVuY3Rpb24gaGFzT25nb2luZ0ludGVyYWN0aW9uKGVsKSB7XG4gIHZhciBnZXRPbmdvaW5nVG91Y2hDb3VudCA9IHRyYWNrVG91Y2hlc0ZvckVsZW1lbnQoZWwpO1xuICB2YXIgZ2V0T25nb2luZ01vdXNlQ2xpY2sgPSB0cmFja09uZ29pbmdNb3VzZUludGVyYWN0aW9uKGVsKTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZ2V0T25nb2luZ1RvdWNoQ291bnQoKSB8fCBnZXRPbmdvaW5nTW91c2VDbGljaygpO1xuICB9O1xufTtcblxudmFyIGlzV2hvbGx5SW5WaWV3ID0gZXhwb3J0cy5pc1dob2xseUluVmlldyA9IGZ1bmN0aW9uIGlzV2hvbGx5SW5WaWV3KHBhcmVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjaGlsZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogeyBnZXRCb3VuZGluZ0NsaWVudFJlY3Q6IGZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgfSB9O1xuXG4gICAgdmFyIF9jaGlsZCRnZXRCb3VuZGluZ0NsaSA9IGNoaWxkLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICBjTGVmdCA9IF9jaGlsZCRnZXRCb3VuZGluZ0NsaS5sZWZ0LFxuICAgICAgICBjUmlnaHQgPSBfY2hpbGQkZ2V0Qm91bmRpbmdDbGkucmlnaHQ7XG5cbiAgICB2YXIgX3BhcmVudCRnZXRCb3VuZGluZ0NsID0gcGFyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICBwTGVmdCA9IF9wYXJlbnQkZ2V0Qm91bmRpbmdDbC5sZWZ0LFxuICAgICAgICBwUmlnaHQgPSBfcGFyZW50JGdldEJvdW5kaW5nQ2wucmlnaHQ7XG5cbiAgICByZXR1cm4gY0xlZnQgPj0gcExlZnQgJiYgY1JpZ2h0IDw9IHBSaWdodDtcbiAgfTtcbn07XG5cbnZhciBhbmltYXRlID0gZXhwb3J0cy5hbmltYXRlID0gZnVuY3Rpb24gYW5pbWF0ZShlbCkge1xuICB2YXIgX3JlZjcgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LFxuICAgICAgX3JlZjckZGVsdGEgPSBfcmVmNy5kZWx0YSxcbiAgICAgIGRlbHRhID0gX3JlZjckZGVsdGEgPT09IHVuZGVmaW5lZCA/IDAgOiBfcmVmNyRkZWx0YSxcbiAgICAgIF9yZWY3JGltbWVkaWF0ZSA9IF9yZWY3LmltbWVkaWF0ZSxcbiAgICAgIGltbWVkaWF0ZSA9IF9yZWY3JGltbWVkaWF0ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcmVmNyRpbW1lZGlhdGUsXG4gICAgICBfcmVmNyRkdXJhdGlvbiA9IF9yZWY3LmR1cmF0aW9uLFxuICAgICAgZHVyYXRpb24gPSBfcmVmNyRkdXJhdGlvbiA9PT0gdW5kZWZpbmVkID8gNTAwIDogX3JlZjckZHVyYXRpb24sXG4gICAgICBfcmVmNyRlYXNpbmcgPSBfcmVmNy5lYXNpbmcsXG4gICAgICBlYXNpbmcgPSBfcmVmNyRlYXNpbmcgPT09IHVuZGVmaW5lZCA/IGVhc2VPdXRRdWludCA6IF9yZWY3JGVhc2luZyxcbiAgICAgIF9yZWY3JHByb3AgPSBfcmVmNy5wcm9wLFxuICAgICAgcHJvcCA9IF9yZWY3JHByb3AgPT09IHVuZGVmaW5lZCA/ICdzY3JvbGxUb3AnIDogX3JlZjckcHJvcDtcblxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlcywgcmVqKSB7XG4gICAgaWYgKCFkZWx0YSkgcmV0dXJuIHJlcygpO1xuICAgIHZhciBpbml0aWFsVmFsID0gZWxbcHJvcF07XG4gICAgaWYgKGltbWVkaWF0ZSkge1xuICAgICAgZWxbcHJvcF0gPSBpbml0aWFsVmFsICsgZGVsdGE7XG4gICAgICByZXR1cm4gcmVzKCk7XG4gICAgfVxuICAgIHZhciBoYXNCYWlsZWQgPSBmYWxzZTtcbiAgICB2YXIgYmFpbCA9IGZ1bmN0aW9uIGJhaWwoKSB7XG4gICAgICBoYXNCYWlsZWQgPSB0cnVlO1xuICAgICAgdmFyIHBvcyA9IGVsW3Byb3BdO1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGJhaWwpO1xuICAgICAgZWxbcHJvcF0gPSBwb3M7XG4gICAgICByZXR1cm4gcmVqKCdBbmltYXRpb24gaW50ZXJ1cHRlZCBieSBpbnRlcmFjdGlvbicpO1xuICAgIH07XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGJhaWwpO1xuICAgIHZhciBzdGFydFRpbWUgPSBudWxsO1xuICAgIHZhciBzdGVwID0gZnVuY3Rpb24gc3RlcCh0aW1lc3RhbXApIHtcbiAgICAgIGlmIChoYXNCYWlsZWQpIHJldHVybjtcbiAgICAgIGlmICghc3RhcnRUaW1lKSBzdGFydFRpbWUgPSB0aW1lc3RhbXA7XG4gICAgICB2YXIgcHJvZ3Jlc3NUaW1lID0gdGltZXN0YW1wIC0gc3RhcnRUaW1lO1xuICAgICAgdmFyIHByb2dyZXNzUmF0aW8gPSBlYXNpbmcocHJvZ3Jlc3NUaW1lIC8gZHVyYXRpb24pO1xuICAgICAgZWxbcHJvcF0gPSBpbml0aWFsVmFsICsgZGVsdGEgKiBwcm9ncmVzc1JhdGlvO1xuICAgICAgaWYgKHByb2dyZXNzVGltZSA8IGR1cmF0aW9uKSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbFtwcm9wXSA9IGluaXRpYWxWYWwgKyBkZWx0YTsgLy8ganVtcCB0byBlbmQgd2hlbiBhbmltYXRpb24gaXMgY29tcGxldGUuIG5lY2Vzc2FyeSBhdCBsZWFzdCBmb3IgaW1tZWRpYXRlIHNjcm9sbFxuICAgICAgICByZXMoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7XG4gIH0pO1xufTtcblxuLyoqKi8gfSksXG4vKiA1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLypcbiBSZWFjdCB2MTYuMC4wXG4gcmVhY3QucHJvZHVjdGlvbi5taW4uanNcblxuIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuXG4gVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuKi9cbnZhciBmPV9fd2VicGFja19yZXF1aXJlX18oMSkscD1fX3dlYnBhY2tfcmVxdWlyZV9fKDYpO19fd2VicGFja19yZXF1aXJlX18oNyk7dmFyIHI9X193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxkPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGU9MDtlPGI7ZSsrKWQrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZSsxXSk7Yj1FcnJvcihkK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31cbnZhciB1PXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fTtmdW5jdGlvbiB2KGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWR8fHV9di5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTt2LnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/dChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O3YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gdyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1wO3RoaXMudXBkYXRlcj1kfHx1fWZ1bmN0aW9uIHgoKXt9eC5wcm90b3R5cGU9di5wcm90b3R5cGU7dmFyIHk9dy5wcm90b3R5cGU9bmV3IHg7eS5jb25zdHJ1Y3Rvcj13O2YoeSx2LnByb3RvdHlwZSk7eS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDtmdW5jdGlvbiB6KGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWR8fHV9dmFyIEE9ei5wcm90b3R5cGU9bmV3IHg7QS5jb25zdHJ1Y3Rvcj16O2YoQSx2LnByb3RvdHlwZSk7QS51bnN0YWJsZV9pc0FzeW5jUmVhY3RDb21wb25lbnQ9ITA7QS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbn07XG52YXIgQj17Q29tcG9uZW50OnYsUHVyZUNvbXBvbmVudDp3LEFzeW5jQ29tcG9uZW50Onp9LEM9e2N1cnJlbnQ6bnVsbH0sRD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdJiZTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpfHw2MDEwMyxGPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07ZnVuY3Rpb24gRyhhLGIsZCxlLGMsZyxrKXtyZXR1cm57JCR0eXBlb2Y6RSx0eXBlOmEsa2V5OmIscmVmOmQscHJvcHM6ayxfb3duZXI6Z319XG5HLmNyZWF0ZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGQpe3ZhciBlLGM9e30sZz1udWxsLGs9bnVsbCxtPW51bGwscT1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksbT12b2lkIDA9PT1iLl9fc2VsZj9udWxsOmIuX19zZWxmLHE9dm9pZCAwPT09Yi5fX3NvdXJjZT9udWxsOmIuX19zb3VyY2UsYilELmNhbGwoYixlKSYmIUYuaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPWJbZV0pO3ZhciBsPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09bCljLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGwpe2Zvcih2YXIgaD1BcnJheShsKSxuPTA7bjxsO24rKyloW25dPWFyZ3VtZW50c1tuKzJdO2MuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBsPWEuZGVmYXVsdFByb3BzLGwpdm9pZCAwPT09Y1tlXSYmKGNbZV09bFtlXSk7cmV0dXJuIEcoYSxnLGssbSxxLEMuY3VycmVudCxjKX07XG5HLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Ry5jcmVhdGVFbGVtZW50LmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07Ry5jbG9uZUFuZFJlcGxhY2VLZXk9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gRyhhLnR5cGUsYixhLnJlZixhLl9zZWxmLGEuX3NvdXJjZSxhLl9vd25lcixhLnByb3BzKX07XG5HLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsZCl7dmFyIGU9Zih7fSxhLnByb3BzKSxjPWEua2V5LGc9YS5yZWYsaz1hLl9zZWxmLG09YS5fc291cmNlLHE9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLHE9Qy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBsPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilELmNhbGwoYixoKSYmIUYuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWw/bFtoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxoKXtsPUFycmF5KGgpO2Zvcih2YXIgbj0wO248aDtuKyspbFtuXT1hcmd1bWVudHNbbisyXTtlLmNoaWxkcmVuPWx9cmV0dXJuIEcoYS50eXBlLGMsZyxrLG0scSxlKX07XG5HLmlzVmFsaWRFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1FfTt2YXIgSD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3IsST1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0mJlN5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIil8fDYwMTAzO2Z1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCJcXHgzZFwiOlwiXFx4M2QwXCIsXCI6XCI6XCJcXHgzZDJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIEo9L1xcLysvZyxLPVtdO1xuZnVuY3Rpb24gTChhLGIsZCxlKXtpZihLLmxlbmd0aCl7dmFyIGM9Sy5wb3AoKTtjLnJlc3VsdD1hO2Mua2V5UHJlZml4PWI7Yy5mdW5jPWQ7Yy5jb250ZXh0PWU7Yy5jb3VudD0wO3JldHVybiBjfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmQsY29udGV4dDplLGNvdW50OjB9fWZ1bmN0aW9uIE0oYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5LLmxlbmd0aCYmSy5wdXNoKGEpfVxuZnVuY3Rpb24gTihhLGIsZCxlKXt2YXIgYz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09Y3x8XCJib29sZWFuXCI9PT1jKWE9bnVsbDtpZihudWxsPT09YXx8XCJzdHJpbmdcIj09PWN8fFwibnVtYmVyXCI9PT1jfHxcIm9iamVjdFwiPT09YyYmYS4kJHR5cGVvZj09PUkpcmV0dXJuIGQoZSxhLFwiXCI9PT1iP1wiLlwiK08oYSwwKTpiKSwxO3ZhciBnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2M9YVtrXTt2YXIgbT1iK08oYyxrKTtnKz1OKGMsbSxkLGUpfWVsc2UgaWYobT1IJiZhW0hdfHxhW1wiQEBpdGVyYXRvclwiXSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSlmb3IoYT1tLmNhbGwoYSksaz0wOyEoYz1hLm5leHQoKSkuZG9uZTspYz1jLnZhbHVlLG09YitPKGMsaysrKSxnKz1OKGMsbSxkLGUpO2Vsc2VcIm9iamVjdFwiPT09YyYmKGQ9XCJcIithLHQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrXG5PYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gTyhhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gUChhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9ZnVuY3Rpb24gUShhLGIsZCl7dmFyIGU9YS5yZXN1bHQsYz1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9SKGEsZSxkLHIudGhhdFJldHVybnNBcmd1bWVudCk6bnVsbCE9YSYmKEcuaXNWYWxpZEVsZW1lbnQoYSkmJihhPUcuY2xvbmVBbmRSZXBsYWNlS2V5KGEsYysoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoSixcIiRcXHgyNi9cIikrXCIvXCIpK2QpKSxlLnB1c2goYSkpfVxuZnVuY3Rpb24gUihhLGIsZCxlLGMpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShKLFwiJFxceDI2L1wiKStcIi9cIik7Yj1MKGIsZyxlLGMpO251bGw9PWF8fE4oYSxcIlwiLFEsYik7TShiKX12YXIgUz17Zm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPUwobnVsbCxudWxsLGIsZCk7bnVsbD09YXx8TihhLFwiXCIsUCxiKTtNKGIpfSxtYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107UihhLGUsbnVsbCxiLGQpO3JldHVybiBlfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOk4oYSxcIlwiLHIudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1IoYSxiLG51bGwsci50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn19O1xubW9kdWxlLmV4cG9ydHM9e0NoaWxkcmVuOnttYXA6Uy5tYXAsZm9yRWFjaDpTLmZvckVhY2gsY291bnQ6Uy5jb3VudCx0b0FycmF5OlMudG9BcnJheSxvbmx5OmZ1bmN0aW9uKGEpe0cuaXNWYWxpZEVsZW1lbnQoYSk/dm9pZCAwOnQoXCIxNDNcIik7cmV0dXJuIGF9fSxDb21wb25lbnQ6Qi5Db21wb25lbnQsUHVyZUNvbXBvbmVudDpCLlB1cmVDb21wb25lbnQsdW5zdGFibGVfQXN5bmNDb21wb25lbnQ6Qi5Bc3luY0NvbXBvbmVudCxjcmVhdGVFbGVtZW50OkcuY3JlYXRlRWxlbWVudCxjbG9uZUVsZW1lbnQ6Ry5jbG9uZUVsZW1lbnQsaXNWYWxpZEVsZW1lbnQ6Ry5pc1ZhbGlkRWxlbWVudCxjcmVhdGVGYWN0b3J5OkcuY3JlYXRlRmFjdG9yeSx2ZXJzaW9uOlwiMTYuMC4wXCIsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudE93bmVyOkMsYXNzaWduOmZ9fTtcblxuXG4vKioqLyB9KSxcbi8qIDYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5cblxudmFyIGVtcHR5T2JqZWN0ID0ge307XG5cbmlmIChmYWxzZSkge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDtcblxuLyoqKi8gfSksXG4vKiA3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuXG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge307XG5cbmlmIChmYWxzZSkge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuXG4vKioqLyB9KSxcbi8qIDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuLyoqKi8gfSksXG4vKiA5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLypcbiBSZWFjdCB2MTYuMC4wXG4gcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG5cbiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cblxuIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG52YXIgYWE9X193ZWJwYWNrX3JlcXVpcmVfXygwKTtfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTt2YXIgbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDExKSxuPV9fd2VicGFja19yZXF1aXJlX18oMSksYmE9X193ZWJwYWNrX3JlcXVpcmVfXygxMiksY2E9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxkYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDEzKSxlYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KSxmYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE1KSxoYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE4KSxpYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE5KTtcbmZ1bmN0aW9uIHcoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGQ9MDtkPGI7ZCsrKWMrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Yj1FcnJvcihjK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31hYT92b2lkIDA6dyhcIjIyN1wiKTtcbmZ1bmN0aW9uIGphKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19XG52YXIga2E9e05hbWVzcGFjZXM6e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9LGdldEludHJpbnNpY05hbWVzcGFjZTpqYSxnZXRDaGlsZE5hbWVzcGFjZTpmdW5jdGlvbihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/amEoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9fSxsYT1udWxsLG9hPXt9O1xuZnVuY3Rpb24gcGEoKXtpZihsYSlmb3IodmFyIGEgaW4gb2Epe3ZhciBiPW9hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp3KFwiOTZcIixhKTtpZighcWEucGx1Z2luc1tjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp3KFwiOTdcIixhKTtxYS5wbHVnaW5zW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cWEuZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzLmhhc093blByb3BlcnR5KGgpP3coXCI5OVwiLGgpOnZvaWQgMDtxYS5ldmVudE5hbWVEaXNwYXRjaENvbmZpZ3NbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmcmEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHJhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6dyhcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHJhKGEsYixjKXtxYS5yZWdpc3RyYXRpb25OYW1lTW9kdWxlc1thXT93KFwiMTAwXCIsYSk6dm9pZCAwO3FhLnJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzW2FdPWI7cWEucmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llc1thXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfVxudmFyIHFhPXtwbHVnaW5zOltdLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczp7fSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczp7fSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOnt9LHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2xhP3coXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO3BhKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtvYS5oYXNPd25Qcm9wZXJ0eShjKSYmb2FbY109PT1kfHwob2FbY10/dyhcIjEwMlwiLGMpOnZvaWQgMCxvYVtjXT1kLGI9ITApfWImJnBhKCl9fSxzYT1xYSx0YT17Y2hpbGRyZW46ITAsZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6ITAsYXV0b0ZvY3VzOiEwLGRlZmF1bHRWYWx1ZTohMCxkZWZhdWx0Q2hlY2tlZDohMCxcbmlubmVySFRNTDohMCxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmc6ITAsc3R5bGU6ITB9O2Z1bmN0aW9uIHVhKGEsYil7cmV0dXJuKGEmYik9PT1ifVxudmFyIHdhPXtNVVNUX1VTRV9QUk9QRVJUWToxLEhBU19CT09MRUFOX1ZBTFVFOjQsSEFTX05VTUVSSUNfVkFMVUU6OCxIQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRToyNCxIQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFOjMyLEhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRTo2NCxpbmplY3RET01Qcm9wZXJ0eUNvbmZpZzpmdW5jdGlvbihhKXt2YXIgYj13YSxjPWEuUHJvcGVydGllc3x8e30sZD1hLkRPTUF0dHJpYnV0ZU5hbWVzcGFjZXN8fHt9LGU9YS5ET01BdHRyaWJ1dGVOYW1lc3x8e307YT1hLkRPTU11dGF0aW9uTWV0aG9kc3x8e307Zm9yKHZhciBmIGluIGMpe3hhLnByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoZik/dyhcIjQ4XCIsZik6dm9pZCAwO3ZhciBnPWYudG9Mb3dlckNhc2UoKSxoPWNbZl07Zz17YXR0cmlidXRlTmFtZTpnLGF0dHJpYnV0ZU5hbWVzcGFjZTpudWxsLHByb3BlcnR5TmFtZTpmLG11dGF0aW9uTWV0aG9kOm51bGwsbXVzdFVzZVByb3BlcnR5OnVhKGgsYi5NVVNUX1VTRV9QUk9QRVJUWSksXG5oYXNCb29sZWFuVmFsdWU6dWEoaCxiLkhBU19CT09MRUFOX1ZBTFVFKSxoYXNOdW1lcmljVmFsdWU6dWEoaCxiLkhBU19OVU1FUklDX1ZBTFVFKSxoYXNQb3NpdGl2ZU51bWVyaWNWYWx1ZTp1YShoLGIuSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUpLGhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU6dWEoaCxiLkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUpLGhhc1N0cmluZ0Jvb2xlYW5WYWx1ZTp1YShoLGIuSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFKX07MT49Zy5oYXNCb29sZWFuVmFsdWUrZy5oYXNOdW1lcmljVmFsdWUrZy5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlP3ZvaWQgMDp3KFwiNTBcIixmKTtlLmhhc093blByb3BlcnR5KGYpJiYoZy5hdHRyaWJ1dGVOYW1lPWVbZl0pO2QuaGFzT3duUHJvcGVydHkoZikmJihnLmF0dHJpYnV0ZU5hbWVzcGFjZT1kW2ZdKTthLmhhc093blByb3BlcnR5KGYpJiYoZy5tdXRhdGlvbk1ldGhvZD1hW2ZdKTt4YS5wcm9wZXJ0aWVzW2ZdPVxuZ319fSx4YT17SURfQVRUUklCVVRFX05BTUU6XCJkYXRhLXJlYWN0aWRcIixST09UX0FUVFJJQlVURV9OQU1FOlwiZGF0YS1yZWFjdHJvb3RcIixBVFRSSUJVVEVfTkFNRV9TVEFSVF9DSEFSOlwiOkEtWl9hLXpcXFxcdTAwQzAtXFxcXHUwMEQ2XFxcXHUwMEQ4LVxcXFx1MDBGNlxcXFx1MDBGOC1cXFxcdTAyRkZcXFxcdTAzNzAtXFxcXHUwMzdEXFxcXHUwMzdGLVxcXFx1MUZGRlxcXFx1MjAwQy1cXFxcdTIwMERcXFxcdTIwNzAtXFxcXHUyMThGXFxcXHUyQzAwLVxcXFx1MkZFRlxcXFx1MzAwMS1cXFxcdUQ3RkZcXFxcdUY5MDAtXFxcXHVGRENGXFxcXHVGREYwLVxcXFx1RkZGRFwiLEFUVFJJQlVURV9OQU1FX0NIQVI6XCI6QS1aX2EtelxcXFx1MDBDMC1cXFxcdTAwRDZcXFxcdTAwRDgtXFxcXHUwMEY2XFxcXHUwMEY4LVxcXFx1MDJGRlxcXFx1MDM3MC1cXFxcdTAzN0RcXFxcdTAzN0YtXFxcXHUxRkZGXFxcXHUyMDBDLVxcXFx1MjAwRFxcXFx1MjA3MC1cXFxcdTIxOEZcXFxcdTJDMDAtXFxcXHUyRkVGXFxcXHUzMDAxLVxcXFx1RDdGRlxcXFx1RjkwMC1cXFxcdUZEQ0ZcXFxcdUZERjAtXFxcXHVGRkZEXFxcXC0uMC05XFxcXHUwMEI3XFxcXHUwMzAwLVxcXFx1MDM2RlxcXFx1MjAzRi1cXFxcdTIwNDBcIixcbnByb3BlcnRpZXM6e30sc2hvdWxkU2V0QXR0cmlidXRlOmZ1bmN0aW9uKGEsYil7aWYoeGEuaXNSZXNlcnZlZFByb3AoYSl8fCEoXCJvXCIhPT1hWzBdJiZcIk9cIiE9PWFbMF18fFwiblwiIT09YVsxXSYmXCJOXCIhPT1hWzFdKSlyZXR1cm4hMTtpZihudWxsPT09YilyZXR1cm4hMDtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJib29sZWFuXCI6cmV0dXJuIHhhLnNob3VsZEF0dHJpYnV0ZUFjY2VwdEJvb2xlYW5WYWx1ZShhKTtjYXNlIFwidW5kZWZpbmVkXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwib2JqZWN0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19LGdldFByb3BlcnR5SW5mbzpmdW5jdGlvbihhKXtyZXR1cm4geGEucHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShhKT94YS5wcm9wZXJ0aWVzW2FdOm51bGx9LHNob3VsZEF0dHJpYnV0ZUFjY2VwdEJvb2xlYW5WYWx1ZTpmdW5jdGlvbihhKXtpZih4YS5pc1Jlc2VydmVkUHJvcChhKSlyZXR1cm4hMDt2YXIgYj14YS5nZXRQcm9wZXJ0eUluZm8oYSk7XG5pZihiKXJldHVybiBiLmhhc0Jvb2xlYW5WYWx1ZXx8Yi5oYXNTdHJpbmdCb29sZWFuVmFsdWV8fGIuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZTthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIj09PWF8fFwiYXJpYS1cIj09PWF9LGlzUmVzZXJ2ZWRQcm9wOmZ1bmN0aW9uKGEpe3JldHVybiB0YS5oYXNPd25Qcm9wZXJ0eShhKX0saW5qZWN0aW9uOndhfSxBPXhhLEU9e0luZGV0ZXJtaW5hdGVDb21wb25lbnQ6MCxGdW5jdGlvbmFsQ29tcG9uZW50OjEsQ2xhc3NDb21wb25lbnQ6MixIb3N0Um9vdDozLEhvc3RQb3J0YWw6NCxIb3N0Q29tcG9uZW50OjUsSG9zdFRleHQ6NixDb3JvdXRpbmVDb21wb25lbnQ6NyxDb3JvdXRpbmVIYW5kbGVyUGhhc2U6OCxZaWVsZENvbXBvbmVudDo5LEZyYWdtZW50OjEwfSxGPXtFTEVNRU5UX05PREU6MSxURVhUX05PREU6MyxDT01NRU5UX05PREU6OCxET0NVTUVOVF9OT0RFOjksRE9DVU1FTlRfRlJBR01FTlRfTk9ERToxMX0sXG55YT1FLkhvc3RDb21wb25lbnQsemE9RS5Ib3N0VGV4dCxBYT1GLkVMRU1FTlRfTk9ERSxCYT1GLkNPTU1FTlRfTk9ERSxFYT1BLklEX0FUVFJJQlVURV9OQU1FLEZhPXtoYXNDYWNoZWRDaGlsZE5vZGVzOjF9LEdhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEhhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrR2EsSWE9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitHYTtmdW5jdGlvbiBMYShhKXtmb3IodmFyIGI7Yj1hLl9yZW5kZXJlZENvbXBvbmVudDspYT1iO3JldHVybiBhfWZ1bmN0aW9uIE1hKGEsYil7YT1MYShhKTthLl9ob3N0Tm9kZT1iO2JbSGFdPWF9XG5mdW5jdGlvbiBOYShhLGIpe2lmKCEoYS5fZmxhZ3MmRmEuaGFzQ2FjaGVkQ2hpbGROb2Rlcykpe3ZhciBjPWEuX3JlbmRlcmVkQ2hpbGRyZW47Yj1iLmZpcnN0Q2hpbGQ7dmFyIGQ7YTpmb3IoZCBpbiBjKWlmKGMuaGFzT3duUHJvcGVydHkoZCkpe3ZhciBlPWNbZF0sZj1MYShlKS5fZG9tSUQ7aWYoMCE9PWYpe2Zvcig7bnVsbCE9PWI7Yj1iLm5leHRTaWJsaW5nKXt2YXIgZz1iLGg9ZjtpZihnLm5vZGVUeXBlPT09QWEmJmcuZ2V0QXR0cmlidXRlKEVhKT09PVwiXCIraHx8Zy5ub2RlVHlwZT09PUJhJiZnLm5vZGVWYWx1ZT09PVwiIHJlYWN0LXRleHQ6IFwiK2grXCIgXCJ8fGcubm9kZVR5cGU9PT1CYSYmZy5ub2RlVmFsdWU9PT1cIiByZWFjdC1lbXB0eTogXCIraCtcIiBcIil7TWEoZSxiKTtjb250aW51ZSBhfX13KFwiMzJcIixmKX19YS5fZmxhZ3N8PUZhLmhhc0NhY2hlZENoaWxkTm9kZXN9fVxuZnVuY3Rpb24gT2EoYSl7aWYoYVtIYV0pcmV0dXJuIGFbSGFdO2Zvcih2YXIgYj1bXTshYVtIYV07KWlmKGIucHVzaChhKSxhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDt2YXIgYz1hW0hhXTtpZihjLnRhZz09PXlhfHxjLnRhZz09PXphKXJldHVybiBjO2Zvcig7YSYmKGM9YVtIYV0pO2E9Yi5wb3AoKSl7dmFyIGQ9YztiLmxlbmd0aCYmTmEoYyxhKX1yZXR1cm4gZH1cbnZhciBHPXtnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpPYSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe3ZhciBiPWFbSGFdO2lmKGIpcmV0dXJuIGIudGFnPT09eWF8fGIudGFnPT09emE/YjpiLl9ob3N0Tm9kZT09PWE/YjpudWxsO2I9T2EoYSk7cmV0dXJuIG51bGwhPWImJmIuX2hvc3ROb2RlPT09YT9iOm51bGx9LGdldE5vZGVGcm9tSW5zdGFuY2U6ZnVuY3Rpb24oYSl7aWYoYS50YWc9PT15YXx8YS50YWc9PT16YSlyZXR1cm4gYS5zdGF0ZU5vZGU7dm9pZCAwPT09YS5faG9zdE5vZGU/dyhcIjMzXCIpOnZvaWQgMDtpZihhLl9ob3N0Tm9kZSlyZXR1cm4gYS5faG9zdE5vZGU7Zm9yKHZhciBiPVtdOyFhLl9ob3N0Tm9kZTspYi5wdXNoKGEpLGEuX2hvc3RQYXJlbnQ/dm9pZCAwOncoXCIzNFwiKSxhPWEuX2hvc3RQYXJlbnQ7Zm9yKDtiLmxlbmd0aDthPWIucG9wKCkpTmEoYSxhLl9ob3N0Tm9kZSk7cmV0dXJuIGEuX2hvc3ROb2RlfSxwcmVjYWNoZUNoaWxkTm9kZXM6TmEsXG5wcmVjYWNoZU5vZGU6TWEsdW5jYWNoZU5vZGU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5faG9zdE5vZGU7YiYmKGRlbGV0ZSBiW0hhXSxhLl9ob3N0Tm9kZT1udWxsKX0scHJlY2FjaGVGaWJlck5vZGU6ZnVuY3Rpb24oYSxiKXtiW0hhXT1hfSxnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlOmZ1bmN0aW9uKGEpe3JldHVybiBhW0lhXXx8bnVsbH0sdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2FbSWFdPWJ9fSxQYT17cmVtb3ZlOmZ1bmN0aW9uKGEpe2EuX3JlYWN0SW50ZXJuYWxGaWJlcj12b2lkIDB9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5fcmVhY3RJbnRlcm5hbEZpYmVyfSxoYXM6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMCE9PWEuX3JlYWN0SW50ZXJuYWxGaWJlcn0sc2V0OmZ1bmN0aW9uKGEsYil7YS5fcmVhY3RJbnRlcm5hbEZpYmVyPWJ9fSxRYT17UmVhY3RDdXJyZW50T3duZXI6YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXJ9O1xuZnVuY3Rpb24gUmEoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuZ2V0TmFtZSlyZXR1cm4gYS5nZXROYW1lKCk7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBhLnRhZyl7YT1hLnR5cGU7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV9cmV0dXJuIG51bGx9dmFyIEo9e05vRWZmZWN0OjAsUGVyZm9ybWVkV29yazoxLFBsYWNlbWVudDoyLFVwZGF0ZTo0LFBsYWNlbWVudEFuZFVwZGF0ZTo2LERlbGV0aW9uOjgsQ29udGVudFJlc2V0OjE2LENhbGxiYWNrOjMyLEVycjo2NCxSZWY6MTI4fSxTYT1FLkhvc3RDb21wb25lbnQsVGE9RS5Ib3N0Um9vdCxVYT1FLkhvc3RQb3J0YWwsVmE9RS5Ib3N0VGV4dCxXYT1KLk5vRWZmZWN0LFhhPUouUGxhY2VtZW50O1xuZnVuY3Rpb24gWmEoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2JbXCJyZXR1cm5cIl07KWI9YltcInJldHVyblwiXTtlbHNle2lmKChiLmVmZmVjdFRhZyZYYSkhPT1XYSlyZXR1cm4gMTtmb3IoO2JbXCJyZXR1cm5cIl07KWlmKGI9YltcInJldHVyblwiXSwoYi5lZmZlY3RUYWcmWGEpIT09V2EpcmV0dXJuIDF9cmV0dXJuIGIudGFnPT09VGE/MjozfWZ1bmN0aW9uICRhKGEpezIhPT1aYShhKT93KFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGFiKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPVphKGEpLDM9PT1iP3coXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Y1tcInJldHVyblwiXSxmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gJGEoZSksYTtpZihnPT09ZClyZXR1cm4gJGEoZSksYjtnPWcuc2libGluZ313KFwiMTg4XCIpfWlmKGNbXCJyZXR1cm5cIl0hPT1kW1wicmV0dXJuXCJdKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOncoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD93KFwiMTkwXCIpOnZvaWQgMH1jLnRhZyE9PVRhP3coXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9XG52YXIgYmI9e2lzRmliZXJNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybiAyPT09WmEoYSl9LGlzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1QYS5nZXQoYSkpPzI9PT1aYShhKTohMX0sZmluZEN1cnJlbnRGaWJlclVzaW5nU2xvd1BhdGg6YWIsZmluZEN1cnJlbnRIb3N0RmliZXI6ZnVuY3Rpb24oYSl7YT1hYihhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZihiLnRhZz09PVNhfHxiLnRhZz09PVZhKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfSxmaW5kQ3VycmVudEhvc3RGaWJlcldpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1hYihhKTtcbmlmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKGIudGFnPT09U2F8fGIudGFnPT09VmEpcmV0dXJuIGI7aWYoYi5jaGlsZCYmYi50YWchPT1VYSliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9fSxLPXtfY2F1Z2h0RXJyb3I6bnVsbCxfaGFzQ2F1Z2h0RXJyb3I6ITEsX3JldGhyb3dFcnJvcjpudWxsLF9oYXNSZXRocm93RXJyb3I6ITEsaW5qZWN0aW9uOntpbmplY3RFcnJvclV0aWxzOmZ1bmN0aW9uKGEpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBhLmludm9rZUd1YXJkZWRDYWxsYmFjaz93KFwiMTk3XCIpOnZvaWQgMDtjYj1hLmludm9rZUd1YXJkZWRDYWxsYmFja319LGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLFxuYixjLGQsZSxmLGcsaCxrKXtjYi5hcHBseShLLGFyZ3VtZW50cyl9LGludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcjpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7Sy5pbnZva2VHdWFyZGVkQ2FsbGJhY2suYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKEsuaGFzQ2F1Z2h0RXJyb3IoKSl7dmFyIHA9Sy5jbGVhckNhdWdodEVycm9yKCk7Sy5faGFzUmV0aHJvd0Vycm9yfHwoSy5faGFzUmV0aHJvd0Vycm9yPSEwLEsuX3JldGhyb3dFcnJvcj1wKX19LHJldGhyb3dDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBkYi5hcHBseShLLGFyZ3VtZW50cyl9LGhhc0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIEsuX2hhc0NhdWdodEVycm9yfSxjbGVhckNhdWdodEVycm9yOmZ1bmN0aW9uKCl7aWYoSy5faGFzQ2F1Z2h0RXJyb3Ipe3ZhciBhPUsuX2NhdWdodEVycm9yO0suX2NhdWdodEVycm9yPW51bGw7Sy5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9dyhcIjE5OFwiKX19O1xuZnVuY3Rpb24gY2IoYSxiLGMsZCxlLGYsZyxoLGspe0suX2hhc0NhdWdodEVycm9yPSExO0suX2NhdWdodEVycm9yPW51bGw7dmFyIHA9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMscCl9Y2F0Y2goeCl7Sy5fY2F1Z2h0RXJyb3I9eCxLLl9oYXNDYXVnaHRFcnJvcj0hMH19ZnVuY3Rpb24gZGIoKXtpZihLLl9oYXNSZXRocm93RXJyb3Ipe3ZhciBhPUsuX3JldGhyb3dFcnJvcjtLLl9yZXRocm93RXJyb3I9bnVsbDtLLl9oYXNSZXRocm93RXJyb3I9ITE7dGhyb3cgYTt9fXZhciBlYj1LLGZiO2Z1bmN0aW9uIGdiKGEsYixjLGQpe2I9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9aGIuZ2V0Tm9kZUZyb21JbnN0YW5jZShkKTtlYi5pbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IoYixjLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbnZhciBoYj17aXNFbmRpc2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJ0b3BNb3VzZVVwXCI9PT1hfHxcInRvcFRvdWNoRW5kXCI9PT1hfHxcInRvcFRvdWNoQ2FuY2VsXCI9PT1hfSxpc01vdmVpc2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJ0b3BNb3VzZU1vdmVcIj09PWF8fFwidG9wVG91Y2hNb3ZlXCI9PT1hfSxpc1N0YXJ0aXNoOmZ1bmN0aW9uKGEpe3JldHVyblwidG9wTW91c2VEb3duXCI9PT1hfHxcInRvcFRvdWNoU3RhcnRcIj09PWF9LGV4ZWN1dGVEaXJlY3REaXNwYXRjaDpmdW5jdGlvbihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO0FycmF5LmlzQXJyYXkoYik/dyhcIjEwM1wiKTp2b2lkIDA7YS5jdXJyZW50VGFyZ2V0PWI/aGIuZ2V0Tm9kZUZyb21JbnN0YW5jZShjKTpudWxsO2I9Yj9iKGEpOm51bGw7YS5jdXJyZW50VGFyZ2V0PW51bGw7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO3JldHVybiBifSxleGVjdXRlRGlzcGF0Y2hlc0luT3JkZXI6ZnVuY3Rpb24oYSxcbmIpe3ZhciBjPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGQ9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShjKSlmb3IodmFyIGU9MDtlPGMubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKylnYihhLGIsY1tlXSxkW2VdKTtlbHNlIGMmJmdiKGEsYixjLGQpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbH0sZXhlY3V0ZURpc3BhdGNoZXNJbk9yZGVyU3RvcEF0VHJ1ZTpmdW5jdGlvbihhKXthOnt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVyczt2YXIgYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXtpZihiW2RdKGEsY1tkXSkpe2I9Y1tkXTticmVhayBhfX1lbHNlIGlmKGImJmIoYSxjKSl7Yj1jO2JyZWFrIGF9Yj1udWxsfWEuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9XG5udWxsO3JldHVybiBifSxoYXNEaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe3JldHVybiEhYS5fZGlzcGF0Y2hMaXN0ZW5lcnN9LGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGZiLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGUoYSl9LGdldEluc3RhbmNlRnJvbU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGZiLmdldEluc3RhbmNlRnJvbU5vZGUoYSl9LGdldE5vZGVGcm9tSW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGZiLmdldE5vZGVGcm9tSW5zdGFuY2UoYSl9LGluamVjdGlvbjp7aW5qZWN0Q29tcG9uZW50VHJlZTpmdW5jdGlvbihhKXtmYj1hfX19LGliPWhiLGpiPW51bGwsa2I9bnVsbCxsYj1udWxsO1xuZnVuY3Rpb24gbWIoYSl7aWYoYT1pYi5nZXRJbnN0YW5jZUZyb21Ob2RlKGEpKWlmKFwibnVtYmVyXCI9PT10eXBlb2YgYS50YWcpe2piJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgamIucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZT92b2lkIDA6dyhcIjE5NFwiKTt2YXIgYj1pYi5nZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlKGEuc3RhdGVOb2RlKTtqYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEuc3RhdGVOb2RlLGEudHlwZSxiKX1lbHNlXCJmdW5jdGlvblwiIT09dHlwZW9mIGEucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZT93KFwiMTk1XCIpOnZvaWQgMCxhLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoKX1cbnZhciBuYj17aW5qZWN0aW9uOntpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe2piPWF9fSxlbnF1ZXVlU3RhdGVSZXN0b3JlOmZ1bmN0aW9uKGEpe2tiP2xiP2xiLnB1c2goYSk6bGI9W2FdOmtiPWF9LHJlc3RvcmVTdGF0ZUlmTmVlZGVkOmZ1bmN0aW9uKCl7aWYoa2Ipe3ZhciBhPWtiLGI9bGI7bGI9a2I9bnVsbDttYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspbWIoYlthXSl9fX07ZnVuY3Rpb24gb2IoYSxiLGMsZCxlLGYpe3JldHVybiBhKGIsYyxkLGUsZil9ZnVuY3Rpb24gcGIoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBxYihhLGIpe3JldHVybiBwYihhLGIpfVxudmFyIHJiPSExLHNiPXtiYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhLGIpe2lmKHJiKXJldHVybiBvYihxYixhLGIpO3JiPSEwO3RyeXtyZXR1cm4gb2IocWIsYSxiKX1maW5hbGx5e3JiPSExLG5iLnJlc3RvcmVTdGF0ZUlmTmVlZGVkKCl9fSxpbmplY3Rpb246e2luamVjdFN0YWNrQmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7b2I9YX0saW5qZWN0RmliZXJCYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhKXtwYj1hfX19LHRiPUYuVEVYVF9OT0RFO2Z1bmN0aW9uIHViKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiBhLm5vZGVUeXBlPT09dGI/YS5wYXJlbnROb2RlOmF9dmFyIHZiPUUuSG9zdFJvb3Qsd2I9W107XG5mdW5jdGlvbiB4YihhKXt2YXIgYj1hLnRhcmdldEluc3Q7ZG97aWYoIWIpe2EuYW5jZXN0b3JzLnB1c2goYik7YnJlYWt9dmFyIGM9YjtpZihcIm51bWJlclwiPT09dHlwZW9mIGMudGFnKXtmb3IoO2NbXCJyZXR1cm5cIl07KWM9Y1tcInJldHVyblwiXTtjPWMudGFnIT09dmI/bnVsbDpjLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWVsc2V7Zm9yKDtjLl9ob3N0UGFyZW50OyljPWMuX2hvc3RQYXJlbnQ7Yz1HLmdldE5vZGVGcm9tSW5zdGFuY2UoYykucGFyZW50Tm9kZX1pZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9Ry5nZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZShjKX13aGlsZShiKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyliPWEuYW5jZXN0b3JzW2NdLHliLl9oYW5kbGVUb3BMZXZlbChhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsdWIoYS5uYXRpdmVFdmVudCkpfVxudmFyIHliPXtfZW5hYmxlZDohMCxfaGFuZGxlVG9wTGV2ZWw6bnVsbCxzZXRIYW5kbGVUb3BMZXZlbDpmdW5jdGlvbihhKXt5Yi5faGFuZGxlVG9wTGV2ZWw9YX0sc2V0RW5hYmxlZDpmdW5jdGlvbihhKXt5Yi5fZW5hYmxlZD0hIWF9LGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiB5Yi5fZW5hYmxlZH0sdHJhcEJ1YmJsZWRFdmVudDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGM/YmEubGlzdGVuKGMsYix5Yi5kaXNwYXRjaEV2ZW50LmJpbmQobnVsbCxhKSk6bnVsbH0sdHJhcENhcHR1cmVkRXZlbnQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjP2JhLmNhcHR1cmUoYyxiLHliLmRpc3BhdGNoRXZlbnQuYmluZChudWxsLGEpKTpudWxsfSxkaXNwYXRjaEV2ZW50OmZ1bmN0aW9uKGEsYil7aWYoeWIuX2VuYWJsZWQpe3ZhciBjPXViKGIpO2M9Ry5nZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8YmIuaXNGaWJlck1vdW50ZWQoYyl8fFxuKGM9bnVsbCk7aWYod2IubGVuZ3RoKXt2YXIgZD13Yi5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtzYi5iYXRjaGVkVXBkYXRlcyh4YixhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPndiLmxlbmd0aCYmd2IucHVzaChhKX19fX0sTD15YjtmdW5jdGlvbiBDYihhLGIpe251bGw9PWI/dyhcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiBEYihhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgRWI9bnVsbDtmdW5jdGlvbiBGYihhLGIpe2EmJihpYi5leGVjdXRlRGlzcGF0Y2hlc0luT3JkZXIoYSxiKSxhLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSkpfWZ1bmN0aW9uIEdiKGEpe3JldHVybiBGYihhLCEwKX1mdW5jdGlvbiBIYihhKXtyZXR1cm4gRmIoYSwhMSl9XG5mdW5jdGlvbiBJYihhLGIsYyl7c3dpdGNoKGEpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOnJldHVybiEoIWMuZGlzYWJsZWR8fFwiYnV0dG9uXCIhPT1iJiZcImlucHV0XCIhPT1iJiZcInNlbGVjdFwiIT09YiYmXCJ0ZXh0YXJlYVwiIT09Yik7ZGVmYXVsdDpyZXR1cm4hMX19XG52YXIgSmI9e2luamVjdGlvbjp7aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpzYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpzYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWV9LGdldExpc3RlbmVyOmZ1bmN0aW9uKGEsYil7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBhLnRhZyl7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9aWIuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07aWYoSWIoYixhLnR5cGUsZCkpcmV0dXJuIG51bGx9ZWxzZXtkPWEuX2N1cnJlbnRFbGVtZW50O2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkfHwhYS5fcm9vdE5vZGVJRClyZXR1cm4gbnVsbDthPWQucHJvcHM7Yz1hW2JdO2lmKEliKGIsZC50eXBlLGEpKXJldHVybiBudWxsfWMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3coXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY30sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXtmb3IodmFyIGUsZj1zYS5wbHVnaW5zLGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtoJiYoaD1oLmV4dHJhY3RFdmVudHMoYSxiLGMsZCkpJiYoZT1DYihlLGgpKX1yZXR1cm4gZX0sZW5xdWV1ZUV2ZW50czpmdW5jdGlvbihhKXthJiYoRWI9Q2IoRWIsYSkpfSxwcm9jZXNzRXZlbnRRdWV1ZTpmdW5jdGlvbihhKXt2YXIgYj1FYjtFYj1udWxsO2E/RGIoYixHYik6RGIoYixIYik7RWI/dyhcIjk1XCIpOnZvaWQgMDtlYi5yZXRocm93Q2F1Z2h0RXJyb3IoKX19LEtiO2wuY2FuVXNlRE9NJiYoS2I9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24mJmRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUmJiEwIT09ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZShcIlwiLFwiXCIpKTtcbmZ1bmN0aW9uIExiKGEsYil7aWYoIWwuY2FuVXNlRE9NfHxiJiYhKFwiYWRkRXZlbnRMaXN0ZW5lclwiaW4gZG9jdW1lbnQpKXJldHVybiExO2I9XCJvblwiK2E7dmFyIGM9YiBpbiBkb2N1bWVudDtjfHwoYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGMuc2V0QXR0cmlidXRlKGIsXCJyZXR1cm47XCIpLGM9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNbYl0pOyFjJiZLYiYmXCJ3aGVlbFwiPT09YSYmKGM9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZShcIkV2ZW50cy53aGVlbFwiLFwiMy4wXCIpKTtyZXR1cm4gY31mdW5jdGlvbiBNYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO2NbXCJtc1wiK2FdPVwiTVNcIitiO2NbXCJPXCIrYV09XCJvXCIrYi50b0xvd2VyQ2FzZSgpO3JldHVybiBjfVxudmFyIE5iPXthbmltYXRpb25lbmQ6TWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246TWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpNYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpNYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LE9iPXt9LFBiPXt9O2wuY2FuVXNlRE9NJiYoUGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgTmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgTmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgTmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgTmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcbmZ1bmN0aW9uIFFiKGEpe2lmKE9iW2FdKXJldHVybiBPYlthXTtpZighTmJbYV0pcmV0dXJuIGE7dmFyIGI9TmJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gUGIpcmV0dXJuIE9iW2FdPWJbY107cmV0dXJuXCJcIn1cbnZhciBSYj17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcEFuaW1hdGlvbkVuZDpRYihcImFuaW1hdGlvbmVuZFwiKXx8XCJhbmltYXRpb25lbmRcIix0b3BBbmltYXRpb25JdGVyYXRpb246UWIoXCJhbmltYXRpb25pdGVyYXRpb25cIil8fFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIsdG9wQW5pbWF0aW9uU3RhcnQ6UWIoXCJhbmltYXRpb25zdGFydFwiKXx8XCJhbmltYXRpb25zdGFydFwiLHRvcEJsdXI6XCJibHVyXCIsdG9wQ2FuY2VsOlwiY2FuY2VsXCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wQ2hhbmdlOlwiY2hhbmdlXCIsdG9wQ2xpY2s6XCJjbGlja1wiLHRvcENsb3NlOlwiY2xvc2VcIix0b3BDb21wb3NpdGlvbkVuZDpcImNvbXBvc2l0aW9uZW5kXCIsdG9wQ29tcG9zaXRpb25TdGFydDpcImNvbXBvc2l0aW9uc3RhcnRcIix0b3BDb21wb3NpdGlvblVwZGF0ZTpcImNvbXBvc2l0aW9udXBkYXRlXCIsdG9wQ29udGV4dE1lbnU6XCJjb250ZXh0bWVudVwiLHRvcENvcHk6XCJjb3B5XCIsXG50b3BDdXQ6XCJjdXRcIix0b3BEb3VibGVDbGljazpcImRibGNsaWNrXCIsdG9wRHJhZzpcImRyYWdcIix0b3BEcmFnRW5kOlwiZHJhZ2VuZFwiLHRvcERyYWdFbnRlcjpcImRyYWdlbnRlclwiLHRvcERyYWdFeGl0OlwiZHJhZ2V4aXRcIix0b3BEcmFnTGVhdmU6XCJkcmFnbGVhdmVcIix0b3BEcmFnT3ZlcjpcImRyYWdvdmVyXCIsdG9wRHJhZ1N0YXJ0OlwiZHJhZ3N0YXJ0XCIsdG9wRHJvcDpcImRyb3BcIix0b3BEdXJhdGlvbkNoYW5nZTpcImR1cmF0aW9uY2hhbmdlXCIsdG9wRW1wdGllZDpcImVtcHRpZWRcIix0b3BFbmNyeXB0ZWQ6XCJlbmNyeXB0ZWRcIix0b3BFbmRlZDpcImVuZGVkXCIsdG9wRXJyb3I6XCJlcnJvclwiLHRvcEZvY3VzOlwiZm9jdXNcIix0b3BJbnB1dDpcImlucHV0XCIsdG9wS2V5RG93bjpcImtleWRvd25cIix0b3BLZXlQcmVzczpcImtleXByZXNzXCIsdG9wS2V5VXA6XCJrZXl1cFwiLHRvcExvYWRlZERhdGE6XCJsb2FkZWRkYXRhXCIsdG9wTG9hZDpcImxvYWRcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsXG50b3BNb3VzZURvd246XCJtb3VzZWRvd25cIix0b3BNb3VzZU1vdmU6XCJtb3VzZW1vdmVcIix0b3BNb3VzZU91dDpcIm1vdXNlb3V0XCIsdG9wTW91c2VPdmVyOlwibW91c2VvdmVyXCIsdG9wTW91c2VVcDpcIm1vdXNldXBcIix0b3BQYXN0ZTpcInBhc3RlXCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTY3JvbGw6XCJzY3JvbGxcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFNlbGVjdGlvbkNoYW5nZTpcInNlbGVjdGlvbmNoYW5nZVwiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUZXh0SW5wdXQ6XCJ0ZXh0SW5wdXRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFRvZ2dsZTpcInRvZ2dsZVwiLHRvcFRvdWNoQ2FuY2VsOlwidG91Y2hjYW5jZWxcIix0b3BUb3VjaEVuZDpcInRvdWNoZW5kXCIsdG9wVG91Y2hNb3ZlOlwidG91Y2htb3ZlXCIsXG50b3BUb3VjaFN0YXJ0OlwidG91Y2hzdGFydFwiLHRvcFRyYW5zaXRpb25FbmQ6UWIoXCJ0cmFuc2l0aW9uZW5kXCIpfHxcInRyYW5zaXRpb25lbmRcIix0b3BWb2x1bWVDaGFuZ2U6XCJ2b2x1bWVjaGFuZ2VcIix0b3BXYWl0aW5nOlwid2FpdGluZ1wiLHRvcFdoZWVsOlwid2hlZWxcIn0sU2I9e30sVGI9MCxVYj1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7ZnVuY3Rpb24gVmIoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsVWIpfHwoYVtVYl09VGIrKyxTYlthW1ViXV09e30pO3JldHVybiBTYlthW1ViXV19XG52YXIgTT1uKHt9LHtoYW5kbGVUb3BMZXZlbDpmdW5jdGlvbihhLGIsYyxkKXthPUpiLmV4dHJhY3RFdmVudHMoYSxiLGMsZCk7SmIuZW5xdWV1ZUV2ZW50cyhhKTtKYi5wcm9jZXNzRXZlbnRRdWV1ZSghMSl9fSx7c2V0RW5hYmxlZDpmdW5jdGlvbihhKXtMJiZMLnNldEVuYWJsZWQoYSl9LGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiEoIUx8fCFMLmlzRW5hYmxlZCgpKX0sbGlzdGVuVG86ZnVuY3Rpb24oYSxiKXt2YXIgYz1WYihiKTthPXNhLnJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXNbYV07Zm9yKHZhciBkPTA7ZDxhLmxlbmd0aDtkKyspe3ZhciBlPWFbZF07Yy5oYXNPd25Qcm9wZXJ0eShlKSYmY1tlXXx8KFwidG9wV2hlZWxcIj09PWU/TGIoXCJ3aGVlbFwiKT9MLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BXaGVlbFwiLFwid2hlZWxcIixiKTpMYihcIm1vdXNld2hlZWxcIik/TC50cmFwQnViYmxlZEV2ZW50KFwidG9wV2hlZWxcIixcIm1vdXNld2hlZWxcIixiKTpMLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BXaGVlbFwiLFxuXCJET01Nb3VzZVNjcm9sbFwiLGIpOlwidG9wU2Nyb2xsXCI9PT1lP0wudHJhcENhcHR1cmVkRXZlbnQoXCJ0b3BTY3JvbGxcIixcInNjcm9sbFwiLGIpOlwidG9wRm9jdXNcIj09PWV8fFwidG9wQmx1clwiPT09ZT8oTC50cmFwQ2FwdHVyZWRFdmVudChcInRvcEZvY3VzXCIsXCJmb2N1c1wiLGIpLEwudHJhcENhcHR1cmVkRXZlbnQoXCJ0b3BCbHVyXCIsXCJibHVyXCIsYiksYy50b3BCbHVyPSEwLGMudG9wRm9jdXM9ITApOlwidG9wQ2FuY2VsXCI9PT1lPyhMYihcImNhbmNlbFwiLCEwKSYmTC50cmFwQ2FwdHVyZWRFdmVudChcInRvcENhbmNlbFwiLFwiY2FuY2VsXCIsYiksYy50b3BDYW5jZWw9ITApOlwidG9wQ2xvc2VcIj09PWU/KExiKFwiY2xvc2VcIiwhMCkmJkwudHJhcENhcHR1cmVkRXZlbnQoXCJ0b3BDbG9zZVwiLFwiY2xvc2VcIixiKSxjLnRvcENsb3NlPSEwKTpSYi5oYXNPd25Qcm9wZXJ0eShlKSYmTC50cmFwQnViYmxlZEV2ZW50KGUsUmJbZV0sYiksY1tlXT0hMCl9fSxpc0xpc3RlbmluZ1RvQWxsRGVwZW5kZW5jaWVzOmZ1bmN0aW9uKGEsXG5iKXtiPVZiKGIpO2E9c2EucmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llc1thXTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXTtpZighYi5oYXNPd25Qcm9wZXJ0eShkKXx8IWJbZF0pcmV0dXJuITF9cmV0dXJuITB9LHRyYXBCdWJibGVkRXZlbnQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBMLnRyYXBCdWJibGVkRXZlbnQoYSxiLGMpfSx0cmFwQ2FwdHVyZWRFdmVudDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEwudHJhcENhcHR1cmVkRXZlbnQoYSxiLGMpfX0pLFdiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsXG5mbGV4T3JkZXI6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LFhiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtcbk9iamVjdC5rZXlzKFdiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1hiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7V2JbYl09V2JbYV19KX0pO1xudmFyIFliPXtpc1VuaXRsZXNzTnVtYmVyOldiLHNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9uczp7YmFja2dyb3VuZDp7YmFja2dyb3VuZEF0dGFjaG1lbnQ6ITAsYmFja2dyb3VuZENvbG9yOiEwLGJhY2tncm91bmRJbWFnZTohMCxiYWNrZ3JvdW5kUG9zaXRpb25YOiEwLGJhY2tncm91bmRQb3NpdGlvblk6ITAsYmFja2dyb3VuZFJlcGVhdDohMH0sYmFja2dyb3VuZFBvc2l0aW9uOntiYWNrZ3JvdW5kUG9zaXRpb25YOiEwLGJhY2tncm91bmRQb3NpdGlvblk6ITB9LGJvcmRlcjp7Ym9yZGVyV2lkdGg6ITAsYm9yZGVyU3R5bGU6ITAsYm9yZGVyQ29sb3I6ITB9LGJvcmRlckJvdHRvbTp7Ym9yZGVyQm90dG9tV2lkdGg6ITAsYm9yZGVyQm90dG9tU3R5bGU6ITAsYm9yZGVyQm90dG9tQ29sb3I6ITB9LGJvcmRlckxlZnQ6e2JvcmRlckxlZnRXaWR0aDohMCxib3JkZXJMZWZ0U3R5bGU6ITAsYm9yZGVyTGVmdENvbG9yOiEwfSxib3JkZXJSaWdodDp7Ym9yZGVyUmlnaHRXaWR0aDohMCxib3JkZXJSaWdodFN0eWxlOiEwLFxuYm9yZGVyUmlnaHRDb2xvcjohMH0sYm9yZGVyVG9wOntib3JkZXJUb3BXaWR0aDohMCxib3JkZXJUb3BTdHlsZTohMCxib3JkZXJUb3BDb2xvcjohMH0sZm9udDp7Zm9udFN0eWxlOiEwLGZvbnRWYXJpYW50OiEwLGZvbnRXZWlnaHQ6ITAsZm9udFNpemU6ITAsbGluZUhlaWdodDohMCxmb250RmFtaWx5OiEwfSxvdXRsaW5lOntvdXRsaW5lV2lkdGg6ITAsb3V0bGluZVN0eWxlOiEwLG91dGxpbmVDb2xvcjohMH19fSxaYj1ZYi5pc1VuaXRsZXNzTnVtYmVyLCRiPSExO2lmKGwuY2FuVXNlRE9NKXt2YXIgYWM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZTt0cnl7YWMuZm9udD1cIlwifWNhdGNoKGEpeyRiPSEwfX1cbnZhciBiYz17Y3JlYXRlRGFuZ2Vyb3VzU3RyaW5nRm9yU3R5bGVzOmZ1bmN0aW9uKCl7fSxzZXRWYWx1ZUZvclN0eWxlczpmdW5jdGlvbihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIik7dmFyIGU9Yzt2YXIgZj1iW2NdO2U9bnVsbD09Znx8XCJib29sZWFuXCI9PT10eXBlb2YgZnx8XCJcIj09PWY/XCJcIjpkfHxcIm51bWJlclwiIT09dHlwZW9mIGZ8fDA9PT1mfHxaYi5oYXNPd25Qcm9wZXJ0eShlKSYmWmJbZV0/KFwiXCIrZikudHJpbSgpOmYrXCJweFwiO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7aWYoZClhLnNldFByb3BlcnR5KGMsZSk7ZWxzZSBpZihlKWFbY109ZTtlbHNlIGlmKGQ9JGImJlliLnNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9uc1tjXSlmb3IodmFyIGcgaW4gZClhW2ddPVwiXCI7ZWxzZSBhW2NdPVwiXCJ9fX0sY2M9bmV3IFJlZ0V4cChcIl5bXCIrQS5BVFRSSUJVVEVfTkFNRV9TVEFSVF9DSEFSK1xuXCJdW1wiK0EuQVRUUklCVVRFX05BTUVfQ0hBUitcIl0qJFwiKSxkYz17fSxlYz17fTtmdW5jdGlvbiBmYyhhKXtpZihlYy5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMDtpZihkYy5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMTtpZihjYy50ZXN0KGEpKXJldHVybiBlY1thXT0hMDtkY1thXT0hMDtyZXR1cm4hMX1cbnZhciBnYz17c2V0QXR0cmlidXRlRm9ySUQ6ZnVuY3Rpb24oYSxiKXthLnNldEF0dHJpYnV0ZShBLklEX0FUVFJJQlVURV9OQU1FLGIpfSxzZXRBdHRyaWJ1dGVGb3JSb290OmZ1bmN0aW9uKGEpe2Euc2V0QXR0cmlidXRlKEEuUk9PVF9BVFRSSUJVVEVfTkFNRSxcIlwiKX0sZ2V0VmFsdWVGb3JQcm9wZXJ0eTpmdW5jdGlvbigpe30sZ2V0VmFsdWVGb3JBdHRyaWJ1dGU6ZnVuY3Rpb24oKXt9LHNldFZhbHVlRm9yUHJvcGVydHk6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUEuZ2V0UHJvcGVydHlJbmZvKGIpO2lmKGQmJkEuc2hvdWxkU2V0QXR0cmlidXRlKGIsYykpe3ZhciBlPWQubXV0YXRpb25NZXRob2Q7ZT9lKGEsYyk6bnVsbD09Y3x8ZC5oYXNCb29sZWFuVmFsdWUmJiFjfHxkLmhhc051bWVyaWNWYWx1ZSYmaXNOYU4oYyl8fGQuaGFzUG9zaXRpdmVOdW1lcmljVmFsdWUmJjE+Y3x8ZC5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlJiYhMT09PWM/Z2MuZGVsZXRlVmFsdWVGb3JQcm9wZXJ0eShhLFxuYik6ZC5tdXN0VXNlUHJvcGVydHk/YVtkLnByb3BlcnR5TmFtZV09YzooYj1kLmF0dHJpYnV0ZU5hbWUsKGU9ZC5hdHRyaWJ1dGVOYW1lc3BhY2UpP2Euc2V0QXR0cmlidXRlTlMoZSxiLFwiXCIrYyk6ZC5oYXNCb29sZWFuVmFsdWV8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITA9PT1jP2Euc2V0QXR0cmlidXRlKGIsXCJcIik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKX1lbHNlIGdjLnNldFZhbHVlRm9yQXR0cmlidXRlKGEsYixBLnNob3VsZFNldEF0dHJpYnV0ZShiLGMpP2M6bnVsbCl9LHNldFZhbHVlRm9yQXR0cmlidXRlOmZ1bmN0aW9uKGEsYixjKXtmYyhiKSYmKG51bGw9PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKX0sZGVsZXRlVmFsdWVGb3JBdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiKXthLnJlbW92ZUF0dHJpYnV0ZShiKX0sZGVsZXRlVmFsdWVGb3JQcm9wZXJ0eTpmdW5jdGlvbihhLGIpe3ZhciBjPUEuZ2V0UHJvcGVydHlJbmZvKGIpO1xuYz8oYj1jLm11dGF0aW9uTWV0aG9kKT9iKGEsdm9pZCAwKTpjLm11c3RVc2VQcm9wZXJ0eT9hW2MucHJvcGVydHlOYW1lXT1jLmhhc0Jvb2xlYW5WYWx1ZT8hMTpcIlwiOmEucmVtb3ZlQXR0cmlidXRlKGMuYXR0cmlidXRlTmFtZSk6YS5yZW1vdmVBdHRyaWJ1dGUoYil9fSxoYz1nYyxpYz1RYS5SZWFjdERlYnVnQ3VycmVudEZyYW1lO2Z1bmN0aW9uIGpjKCl7cmV0dXJuIG51bGx9XG52YXIga2M9e2N1cnJlbnQ6bnVsbCxwaGFzZTpudWxsLHJlc2V0Q3VycmVudEZpYmVyOmZ1bmN0aW9uKCl7aWMuZ2V0Q3VycmVudFN0YWNrPW51bGw7a2MuY3VycmVudD1udWxsO2tjLnBoYXNlPW51bGx9LHNldEN1cnJlbnRGaWJlcjpmdW5jdGlvbihhLGIpe2ljLmdldEN1cnJlbnRTdGFjaz1qYztrYy5jdXJyZW50PWE7a2MucGhhc2U9Yn0sZ2V0Q3VycmVudEZpYmVyT3duZXJOYW1lOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGdldEN1cnJlbnRGaWJlclN0YWNrQWRkZW5kdW06amN9LGxjPWtjLG1jPXtnZXRIb3N0UHJvcHM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLnZhbHVlLGQ9Yi5jaGVja2VkO3JldHVybiBuKHt0eXBlOnZvaWQgMCxzdGVwOnZvaWQgMCxtaW46dm9pZCAwLG1heDp2b2lkIDB9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlLGNoZWNrZWQ6bnVsbCE9ZD9cbmQ6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9LGluaXRXcmFwcGVyU3RhdGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLmRlZmF1bHRWYWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOm51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZCxpbml0aWFsVmFsdWU6bnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19LHVwZGF0ZVdyYXBwZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLmNoZWNrZWQ7bnVsbCE9YyYmaGMuc2V0VmFsdWVGb3JQcm9wZXJ0eShhLFwiY2hlY2tlZFwiLGN8fCExKTtjPWIudmFsdWU7aWYobnVsbCE9YylpZigwPT09YyYmXCJcIj09PWEudmFsdWUpYS52YWx1ZT1cIjBcIjtlbHNlIGlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKGI9cGFyc2VGbG9hdChhLnZhbHVlKXx8MCxjIT1ifHxjPT1iJiZhLnZhbHVlIT1cbmMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgbnVsbD09Yi52YWx1ZSYmbnVsbCE9Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09XCJcIitiLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYi5kZWZhdWx0VmFsdWUpLG51bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX0scG9zdE1vdW50V3JhcHBlcjpmdW5jdGlvbihhLGIpe3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztjYXNlIFwiY29sb3JcIjpjYXNlIFwiZGF0ZVwiOmNhc2UgXCJkYXRldGltZVwiOmNhc2UgXCJkYXRldGltZS1sb2NhbFwiOmNhc2UgXCJtb250aFwiOmNhc2UgXCJ0aW1lXCI6Y2FzZSBcIndlZWtcIjphLnZhbHVlPVwiXCI7YS52YWx1ZT1hLmRlZmF1bHRWYWx1ZTticmVhaztkZWZhdWx0OmEudmFsdWU9YS52YWx1ZX1iPWEubmFtZTtcIlwiIT09XG5iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX0scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIpe21jLnVwZGF0ZVdyYXBwZXIoYSxiKTt2YXIgYz1iLm5hbWU7aWYoXCJyYWRpb1wiPT09Yi50eXBlJiZudWxsIT1jKXtmb3IoYj1hO2IucGFyZW50Tm9kZTspYj1iLnBhcmVudE5vZGU7Yz1iLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lXFx4M2RcIitKU09OLnN0cmluZ2lmeShcIlwiK2MpKyddW3R5cGVcXHgzZFwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPUcuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZShkKTtlP3ZvaWQgMDp3KFwiOTBcIik7bWMudXBkYXRlV3JhcHBlcihkLGUpfX19fX0scWM9bWM7XG5mdW5jdGlvbiByYyhhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsPT1hfHxcInN0cmluZ1wiIT09dHlwZW9mIGEmJlwibnVtYmVyXCIhPT10eXBlb2YgYXx8KGIrPWEpfSk7cmV0dXJuIGJ9dmFyIHNjPXt2YWxpZGF0ZVByb3BzOmZ1bmN0aW9uKCl7fSxwb3N0TW91bnRXcmFwcGVyOmZ1bmN0aW9uKGEsYil7bnVsbCE9Yi52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGIudmFsdWUpfSxnZXRIb3N0UHJvcHM6ZnVuY3Rpb24oYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1yYyhiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9fTtcbmZ1bmN0aW9uIHRjKGEsYixjKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKWJbXCIkXCIrY1tkXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKylkPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWQmJihhW2NdLnNlbGVjdGVkPWQpfWVsc2V7Yz1cIlwiK2M7Yj1udWxsO2ZvcihkPTA7ZDxhLmxlbmd0aDtkKyspe2lmKGFbZF0udmFsdWU9PT1jKXthW2RdLnNlbGVjdGVkPSEwO3JldHVybn1udWxsIT09Ynx8YVtkXS5kaXNhYmxlZHx8KGI9YVtkXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG52YXIgdWM9e2dldEhvc3RQcm9wczpmdW5jdGlvbihhLGIpe3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMH0pfSxpbml0V3JhcHBlclN0YXRlOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi52YWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpudWxsIT1jP2M6Yi5kZWZhdWx0VmFsdWUsd2FzTXVsdGlwbGU6ISFiLm11bHRpcGxlfX0scG9zdE1vdW50V3JhcHBlcjpmdW5jdGlvbihhLGIpe2EubXVsdGlwbGU9ISFiLm11bHRpcGxlO3ZhciBjPWIudmFsdWU7bnVsbCE9Yz90YyhhLCEhYi5tdWx0aXBsZSxjKTpudWxsIT1iLmRlZmF1bHRWYWx1ZSYmdGMoYSwhIWIubXVsdGlwbGUsYi5kZWZhdWx0VmFsdWUpfSxwb3N0VXBkYXRlV3JhcHBlcjpmdW5jdGlvbihhLGIpe2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwO3ZhciBjPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZTthLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFiLm11bHRpcGxlO3ZhciBkPWIudmFsdWU7XG5udWxsIT1kP3RjKGEsISFiLm11bHRpcGxlLGQpOmMhPT0hIWIubXVsdGlwbGUmJihudWxsIT1iLmRlZmF1bHRWYWx1ZT90YyhhLCEhYi5tdWx0aXBsZSxiLmRlZmF1bHRWYWx1ZSk6dGMoYSwhIWIubXVsdGlwbGUsYi5tdWx0aXBsZT9bXTpcIlwiKSl9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLnZhbHVlO251bGwhPWMmJnRjKGEsISFiLm11bHRpcGxlLGMpfX0sdmM9e2dldEhvc3RQcm9wczpmdW5jdGlvbihhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dyhcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX0saW5pdFdyYXBwZXJTdGF0ZTpmdW5jdGlvbihhLGIpe3ZhciBjPWIudmFsdWUsZD1jO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz9cbncoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp3KFwiOTNcIiksYj1iWzBdKSxjPVwiXCIrYiksbnVsbD09YyYmKGM9XCJcIiksZD1jKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpcIlwiK2R9fSx1cGRhdGVXcmFwcGVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9Yi5kZWZhdWx0VmFsdWUpfSxwb3N0TW91bnRXcmFwcGVyOmZ1bmN0aW9uKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsYil7dmMudXBkYXRlV3JhcHBlcihhLGIpfX0sd2M9dmMseGM9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLFxuYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO2Z1bmN0aW9uIHljKGEsYil7YiYmKHhjW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD93KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3coXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6dyhcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/dyhcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHpjKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBBYyhhKXt2YXIgYj16YyhhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldClyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGUsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBjLmdldC5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Yy5zZXQuY2FsbCh0aGlzLGEpfX0pLHtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPW51bGw7ZGVsZXRlIGFbYl19fX1cbnZhciBCYz17X2dldFRyYWNrZXJGcm9tTm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5fdmFsdWVUcmFja2VyfSx0cmFjazpmdW5jdGlvbihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9QWMoYSkpfSx1cGRhdGVWYWx1ZUlmQ2hhbmdlZDpmdW5jdGlvbihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9emMoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKGEpeyhhPWEuX3ZhbHVlVHJhY2tlcikmJmEuc3RvcFRyYWNraW5nKCl9fTtcbmZ1bmN0aW9uIENjKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbnZhciBEYz1rYS5OYW1lc3BhY2VzLEVjLEZjPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PURjLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNlIGZvcihFYz1FY3x8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxFYy5pbm5lckhUTUw9XCJcXHgzY3N2Z1xceDNlXCIrYitcIlxceDNjL3N2Z1xceDNlXCIsYj1FYy5maXJzdENoaWxkO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfSksR2M9L1tcIicmPD5dLyxIYz1GLlRFWFRfTk9ERTtcbmZ1bmN0aW9uIEljKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmYy5ub2RlVHlwZT09PUhjKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxubC5jYW5Vc2VET00mJihcInRleHRDb250ZW50XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR8fChJYz1mdW5jdGlvbihhLGIpe2lmKGEubm9kZVR5cGU9PT1IYylhLm5vZGVWYWx1ZT1iO2Vsc2V7aWYoXCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKWI9XCJcIitiO2Vsc2V7Yj1cIlwiK2I7dmFyIGM9R2MuZXhlYyhiKTtpZihjKXt2YXIgZD1cIlwiLGUsZj0wO2ZvcihlPWMuaW5kZXg7ZTxiLmxlbmd0aDtlKyspe3N3aXRjaChiLmNoYXJDb2RlQXQoZSkpe2Nhc2UgMzQ6Yz1cIlxceDI2cXVvdDtcIjticmVhaztjYXNlIDM4OmM9XCJcXHgyNmFtcDtcIjticmVhaztjYXNlIDM5OmM9XCJcXHgyNiN4Mjc7XCI7YnJlYWs7Y2FzZSA2MDpjPVwiXFx4MjZsdDtcIjticmVhaztjYXNlIDYyOmM9XCJcXHgyNmd0O1wiO2JyZWFrO2RlZmF1bHQ6Y29udGludWV9ZiE9PWUmJihkKz1iLnN1YnN0cmluZyhmLGUpKTtmPWUrMTtkKz1jfWI9ZiE9PWU/ZCtiLnN1YnN0cmluZyhmLGUpOmR9fUZjKGEsYil9fSkpO1xudmFyIEpjPUljLEtjPWxjLmdldEN1cnJlbnRGaWJlck93bmVyTmFtZSxMYz1GLkRPQ1VNRU5UX05PREUsTWM9Ri5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFLE5jPU0ubGlzdGVuVG8sT2M9c2EucmVnaXN0cmF0aW9uTmFtZU1vZHVsZXMsUGM9a2EuTmFtZXNwYWNlcy5odG1sLFFjPWthLmdldEludHJpbnNpY05hbWVzcGFjZTtmdW5jdGlvbiBSYyhhLGIpe05jKGIsYS5ub2RlVHlwZT09PUxjfHxhLm5vZGVUeXBlPT09TWM/YTphLm93bmVyRG9jdW1lbnQpfVxudmFyIFNjPXt0b3BBYm9ydDpcImFib3J0XCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wRHVyYXRpb25DaGFuZ2U6XCJkdXJhdGlvbmNoYW5nZVwiLHRvcEVtcHRpZWQ6XCJlbXB0aWVkXCIsdG9wRW5jcnlwdGVkOlwiZW5jcnlwdGVkXCIsdG9wRW5kZWQ6XCJlbmRlZFwiLHRvcEVycm9yOlwiZXJyb3JcIix0b3BMb2FkZWREYXRhOlwibG9hZGVkZGF0YVwiLHRvcExvYWRlZE1ldGFkYXRhOlwibG9hZGVkbWV0YWRhdGFcIix0b3BMb2FkU3RhcnQ6XCJsb2Fkc3RhcnRcIix0b3BQYXVzZTpcInBhdXNlXCIsdG9wUGxheTpcInBsYXlcIix0b3BQbGF5aW5nOlwicGxheWluZ1wiLHRvcFByb2dyZXNzOlwicHJvZ3Jlc3NcIix0b3BSYXRlQ2hhbmdlOlwicmF0ZWNoYW5nZVwiLHRvcFNlZWtlZDpcInNlZWtlZFwiLHRvcFNlZWtpbmc6XCJzZWVraW5nXCIsdG9wU3RhbGxlZDpcInN0YWxsZWRcIix0b3BTdXNwZW5kOlwic3VzcGVuZFwiLHRvcFRpbWVVcGRhdGU6XCJ0aW1ldXBkYXRlXCIsdG9wVm9sdW1lQ2hhbmdlOlwidm9sdW1lY2hhbmdlXCIsXG50b3BXYWl0aW5nOlwid2FpdGluZ1wifSxOPXtjcmVhdGVFbGVtZW50OmZ1bmN0aW9uKGEsYixjLGQpe2M9Yy5ub2RlVHlwZT09PUxjP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1QYyYmKGQ9UWMoYSkpO2Q9PT1QYz9cInNjcmlwdFwiPT09YT8oYT1jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCJcXHgzY3NjcmlwdFxceDNlXFx4M2Mvc2NyaXB0XFx4M2VcIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6YT1cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM/Yy5jcmVhdGVFbGVtZW50KGEse2lzOmIuaXN9KTpjLmNyZWF0ZUVsZW1lbnQoYSk6YT1jLmNyZWF0ZUVsZW1lbnROUyhkLGEpO3JldHVybiBhfSxjcmVhdGVUZXh0Tm9kZTpmdW5jdGlvbihhLGIpe3JldHVybihiLm5vZGVUeXBlPT09TGM/YjpiLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGEpfSxzZXRJbml0aWFsUHJvcGVydGllczpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1DYyhiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcExvYWRcIixcblwibG9hZFwiLGEpO3ZhciBmPWM7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGYgaW4gU2MpU2MuaGFzT3duUHJvcGVydHkoZikmJk0udHJhcEJ1YmJsZWRFdmVudChmLFNjW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wUmVzZXRcIixcInJlc2V0XCIsYSk7TS50cmFwQnViYmxlZEV2ZW50KFwidG9wU3VibWl0XCIsXCJzdWJtaXRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW5wdXRcIjpxYy5pbml0V3JhcHBlclN0YXRlKGEsXG5jKTtmPXFjLmdldEhvc3RQcm9wcyhhLGMpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtSYyhkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOnNjLnZhbGlkYXRlUHJvcHMoYSxjKTtmPXNjLmdldEhvc3RQcm9wcyhhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp1Yy5pbml0V3JhcHBlclN0YXRlKGEsYyk7Zj11Yy5nZXRIb3N0UHJvcHMoYSxjKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7UmMoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOndjLmluaXRXcmFwcGVyU3RhdGUoYSxjKTtmPXdjLmdldEhvc3RQcm9wcyhhLGMpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtSYyhkLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpmPWN9eWMoYixmLEtjKTt2YXIgZz1mLGg7Zm9yKGggaW4gZylpZihnLmhhc093blByb3BlcnR5KGgpKXt2YXIgaz1nW2hdO1wic3R5bGVcIj09PVxuaD9iYy5zZXRWYWx1ZUZvclN0eWxlcyhhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmRmMoYSxrKSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/SmMoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJkpjKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmKE9jLmhhc093blByb3BlcnR5KGgpP251bGwhPWsmJlJjKGQsaCk6ZT9oYy5zZXRWYWx1ZUZvckF0dHJpYnV0ZShhLGgsayk6bnVsbCE9ayYmaGMuc2V0VmFsdWVGb3JQcm9wZXJ0eShhLGgsaykpfXN3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpCYy50cmFjayhhKTtxYy5wb3N0TW91bnRXcmFwcGVyKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6QmMudHJhY2soYSk7d2MucG9zdE1vdW50V3JhcHBlcihhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpzYy5wb3N0TW91bnRXcmFwcGVyKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnVjLnBvc3RNb3VudFdyYXBwZXIoYSxcbmMpO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGEub25jbGljaz1jYSl9fSxkaWZmUHJvcGVydGllczpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPW51bGw7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmM9cWMuZ2V0SG9zdFByb3BzKGEsYyk7ZD1xYy5nZXRIb3N0UHJvcHMoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpjPXNjLmdldEhvc3RQcm9wcyhhLGMpO2Q9c2MuZ2V0SG9zdFByb3BzKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Yz11Yy5nZXRIb3N0UHJvcHMoYSxjKTtkPXVjLmdldEhvc3RQcm9wcyhhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Yz13Yy5nZXRIb3N0UHJvcHMoYSxjKTtkPXdjLmdldEhvc3RQcm9wcyhhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWNhKX15YyhiLGQsS2MpO1xudmFyIGcsaDthPW51bGw7Zm9yKGcgaW4gYylpZighZC5oYXNPd25Qcm9wZXJ0eShnKSYmYy5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9Y1tnXSlpZihcInN0eWxlXCI9PT1nKWZvcihoIGluIGI9Y1tnXSxiKWIuaGFzT3duUHJvcGVydHkoaCkmJihhfHwoYT17fSksYVtoXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09ZyYmXCJjaGlsZHJlblwiIT09ZyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJihPYy5oYXNPd25Qcm9wZXJ0eShnKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2goZyxudWxsKSk7Zm9yKGcgaW4gZCl7dmFyIGs9ZFtnXTtiPW51bGwhPWM/Y1tnXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShnKSYmayE9PWImJihudWxsIT1rfHxudWxsIT1iKSlpZihcInN0eWxlXCI9PT1nKWlmKGIpe2ZvcihoIGluIGIpIWIuaGFzT3duUHJvcGVydHkoaCl8fGsmJmsuaGFzT3duUHJvcGVydHkoaCl8fChhfHwoYT17fSksYVtoXT1cIlwiKTtmb3IoaCBpbiBrKWsuaGFzT3duUHJvcGVydHkoaCkmJlxuYltoXSE9PWtbaF0mJihhfHwoYT17fSksYVtoXT1rW2hdKX1lbHNlIGF8fChmfHwoZj1bXSksZi5wdXNoKGcsYSkpLGE9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz8oaz1rP2suX19odG1sOnZvaWQgMCxiPWI/Yi5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmIhPT1rJiYoZj1mfHxbXSkucHVzaChnLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWc/Yj09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChnLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJihPYy5oYXNPd25Qcm9wZXJ0eShnKT8obnVsbCE9ayYmUmMoZSxnKSxmfHxiPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChnLGspKX1hJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsYSk7cmV0dXJuIGZ9LHVwZGF0ZVByb3BlcnRpZXM6ZnVuY3Rpb24oYSxiLGMsZCxlKXtDYyhjLGQpO2Q9Q2MoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPVxuMil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP2JjLnNldFZhbHVlRm9yU3R5bGVzKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9GYyhhLGgpOlwiY2hpbGRyZW5cIj09PWc/SmMoYSxoKTpkP251bGwhPWg/aGMuc2V0VmFsdWVGb3JBdHRyaWJ1dGUoYSxnLGgpOmhjLmRlbGV0ZVZhbHVlRm9yQXR0cmlidXRlKGEsZyk6bnVsbCE9aD9oYy5zZXRWYWx1ZUZvclByb3BlcnR5KGEsZyxoKTpoYy5kZWxldGVWYWx1ZUZvclByb3BlcnR5KGEsZyl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOnFjLnVwZGF0ZVdyYXBwZXIoYSxlKTtCYy51cGRhdGVWYWx1ZUlmQ2hhbmdlZChhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp3Yy51cGRhdGVXcmFwcGVyKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnVjLnBvc3RVcGRhdGVXcmFwcGVyKGEsZSl9fSxkaWZmSHlkcmF0ZWRQcm9wZXJ0aWVzOmZ1bmN0aW9uKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wTG9hZFwiLFxuXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKHZhciBmIGluIFNjKVNjLmhhc093blByb3BlcnR5KGYpJiZNLnRyYXBCdWJibGVkRXZlbnQoZixTY1tmXSxhKTticmVhaztjYXNlIFwic291cmNlXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwiZm9ybVwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOnFjLmluaXRXcmFwcGVyU3RhdGUoYSxjKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXG5cImludmFsaWRcIixhKTtSYyhlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOnNjLnZhbGlkYXRlUHJvcHMoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6dWMuaW5pdFdyYXBwZXJTdGF0ZShhLGMpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtSYyhlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6d2MuaW5pdFdyYXBwZXJTdGF0ZShhLGMpLE0udHJhcEJ1YmJsZWRFdmVudChcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKSxSYyhlLFwib25DaGFuZ2VcIil9eWMoYixjLEtjKTtkPW51bGw7Zm9yKHZhciBnIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShnKSYmKGY9Y1tnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZj9hLnRleHRDb250ZW50IT09ZiYmKGQ9W1wiY2hpbGRyZW5cIixmXSk6XCJudW1iZXJcIj09PXR5cGVvZiBmJiZhLnRleHRDb250ZW50IT09XCJcIitmJiYoZD1bXCJjaGlsZHJlblwiLFwiXCIrZl0pOk9jLmhhc093blByb3BlcnR5KGcpJiZcbm51bGwhPWYmJlJjKGUsZykpO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpCYy50cmFjayhhKTtxYy5wb3N0TW91bnRXcmFwcGVyKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6QmMudHJhY2soYSk7d2MucG9zdE1vdW50V3JhcHBlcihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiYoYS5vbmNsaWNrPWNhKX1yZXR1cm4gZH0sZGlmZkh5ZHJhdGVkVGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBhLm5vZGVWYWx1ZSE9PWJ9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0OmZ1bmN0aW9uKCl7fSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsXG5iLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpxYy5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6d2MucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp1Yy5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEsYyl9fX0sVGM9dm9pZCAwO1xuaWYobC5jYW5Vc2VET00paWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHJlcXVlc3RJZGxlQ2FsbGJhY2spe3ZhciBVYz1udWxsLFZjPW51bGwsV2M9ITEsWGM9ITEsWWM9MCxaYz0zMywkYz0zMyxhZD17dGltZVJlbWFpbmluZzpcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93P2Z1bmN0aW9uKCl7cmV0dXJuIFljLXBlcmZvcm1hbmNlLm5vdygpfTpmdW5jdGlvbigpe3JldHVybiBZYy1EYXRlLm5vdygpfX0sYmQ9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2Euc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1iZCYmKFdjPSExLGE9VmMsVmM9bnVsbCxudWxsIT09YSYmYShhZCkpfSwhMSk7dmFyIGNkPWZ1bmN0aW9uKGEpe1hjPSExO3ZhciBiPWEtWWMrJGM7YjwkYyYmWmM8JGM/KDg+XG5iJiYoYj04KSwkYz1iPFpjP1pjOmIpOlpjPWI7WWM9YSskYztXY3x8KFdjPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShiZCxcIipcIikpO2I9VWM7VWM9bnVsbDtudWxsIT09YiYmYihhKX07VGM9ZnVuY3Rpb24oYSl7VmM9YTtYY3x8KFhjPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShjZCkpO3JldHVybiAwfX1lbHNlIFRjPXJlcXVlc3RJZGxlQ2FsbGJhY2s7ZWxzZSBUYz1mdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YSh7dGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3JldHVybiBJbmZpbml0eX19KX0pO3JldHVybiAwfTtcbnZhciBkZD17cklDOlRjfSxlZD17ZW5hYmxlQXN5bmNTdWJ0cmVlQVBJOiEwfSxRPXtOb1dvcms6MCxTeW5jaHJvbm91c1ByaW9yaXR5OjEsVGFza1ByaW9yaXR5OjIsSGlnaFByaW9yaXR5OjMsTG93UHJpb3JpdHk6NCxPZmZzY3JlZW5Qcmlvcml0eTo1fSxmZD1KLkNhbGxiYWNrLGdkPVEuTm9Xb3JrLGhkPVEuU3luY2hyb25vdXNQcmlvcml0eSxpZD1RLlRhc2tQcmlvcml0eSxqZD1FLkNsYXNzQ29tcG9uZW50LGtkPUUuSG9zdFJvb3QsbWQ9dm9pZCAwLG5kPXZvaWQgMDtmdW5jdGlvbiBvZChhLGIpe3JldHVybiBhIT09aWQmJmEhPT1oZHx8YiE9PWlkJiZiIT09aGQ/YT09PWdkJiZiIT09Z2Q/LTI1NTphIT09Z2QmJmI9PT1nZD8yNTU6YS1iOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm57Zmlyc3Q6bnVsbCxsYXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITEsY2FsbGJhY2tMaXN0Om51bGx9fVxuZnVuY3Rpb24gcWQoYSxiLGMsZCl7bnVsbCE9PWM/Yy5uZXh0PWI6KGIubmV4dD1hLmZpcnN0LGEuZmlyc3Q9Yik7bnVsbCE9PWQ/Yi5uZXh0PWQ6YS5sYXN0PWJ9ZnVuY3Rpb24gcmQoYSxiKXtiPWIucHJpb3JpdHlMZXZlbDt2YXIgYz1udWxsO2lmKG51bGwhPT1hLmxhc3QmJjA+PW9kKGEubGFzdC5wcmlvcml0eUxldmVsLGIpKWM9YS5sYXN0O2Vsc2UgZm9yKGE9YS5maXJzdDtudWxsIT09YSYmMD49b2QoYS5wcmlvcml0eUxldmVsLGIpOyljPWEsYT1hLm5leHQ7cmV0dXJuIGN9XG5mdW5jdGlvbiBzZChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS51cGRhdGVRdWV1ZTtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1wZCgpKTtudWxsIT09Yz8oYT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1hJiYoYT1jLnVwZGF0ZVF1ZXVlPXBkKCkpKTphPW51bGw7bWQ9ZDtuZD1hIT09ZD9hOm51bGw7dmFyIGU9bWQ7Yz1uZDt2YXIgZj1yZChlLGIpLGc9bnVsbCE9PWY/Zi5uZXh0OmUuZmlyc3Q7aWYobnVsbD09PWMpcmV0dXJuIHFkKGUsYixmLGcpLG51bGw7ZD1yZChjLGIpO2E9bnVsbCE9PWQ/ZC5uZXh0OmMuZmlyc3Q7cWQoZSxiLGYsZyk7aWYoZz09PWEmJm51bGwhPT1nfHxmPT09ZCYmbnVsbCE9PWYpcmV0dXJuIG51bGw9PT1kJiYoYy5maXJzdD1iKSxudWxsPT09YSYmKGMubGFzdD1udWxsKSxudWxsO2I9e3ByaW9yaXR5TGV2ZWw6Yi5wcmlvcml0eUxldmVsLHBhcnRpYWxTdGF0ZTpiLnBhcnRpYWxTdGF0ZSxjYWxsYmFjazpiLmNhbGxiYWNrLGlzUmVwbGFjZTpiLmlzUmVwbGFjZSxcbmlzRm9yY2VkOmIuaXNGb3JjZWQsaXNUb3BMZXZlbFVubW91bnQ6Yi5pc1RvcExldmVsVW5tb3VudCxuZXh0Om51bGx9O3FkKGMsYixkLGEpO3JldHVybiBifWZ1bmN0aW9uIHRkKGEsYixjLGQpe2E9YS5wYXJ0aWFsU3RhdGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGIsYyxkKTphfVxudmFyIHVkPXthZGRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCl7c2QoYSx7cHJpb3JpdHlMZXZlbDpkLHBhcnRpYWxTdGF0ZTpiLGNhbGxiYWNrOmMsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLGlzVG9wTGV2ZWxVbm1vdW50OiExLG5leHQ6bnVsbH0pfSxhZGRSZXBsYWNlVXBkYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3NkKGEse3ByaW9yaXR5TGV2ZWw6ZCxwYXJ0aWFsU3RhdGU6YixjYWxsYmFjazpjLGlzUmVwbGFjZTohMCxpc0ZvcmNlZDohMSxpc1RvcExldmVsVW5tb3VudDohMSxuZXh0Om51bGx9KX0sYWRkRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiLGMpe3NkKGEse3ByaW9yaXR5TGV2ZWw6YyxwYXJ0aWFsU3RhdGU6bnVsbCxjYWxsYmFjazpiLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMCxpc1RvcExldmVsVW5tb3VudDohMSxuZXh0Om51bGx9KX0sZ2V0VXBkYXRlUHJpb3JpdHk6ZnVuY3Rpb24oYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtyZXR1cm4gbnVsbD09PWJ8fGEudGFnIT09XG5qZCYmYS50YWchPT1rZD9nZDpudWxsIT09Yi5maXJzdD9iLmZpcnN0LnByaW9yaXR5TGV2ZWw6Z2R9LGFkZFRvcExldmVsVXBkYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPW51bGw9PT1iLmVsZW1lbnQ7Yj17cHJpb3JpdHlMZXZlbDpkLHBhcnRpYWxTdGF0ZTpiLGNhbGxiYWNrOmMsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLGlzVG9wTGV2ZWxVbm1vdW50OmUsbmV4dDpudWxsfTthPXNkKGEsYik7ZSYmKGU9bWQsYz1uZCxudWxsIT09ZSYmbnVsbCE9PWIubmV4dCYmKGIubmV4dD1udWxsLGUubGFzdD1iKSxudWxsIT09YyYmbnVsbCE9PWEmJm51bGwhPT1hLm5leHQmJihhLm5leHQ9bnVsbCxjLmxhc3Q9YikpfSxiZWdpblVwZGF0ZVF1ZXVlOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe251bGwhPT1hJiZhLnVwZGF0ZVF1ZXVlPT09YyYmKGM9Yi51cGRhdGVRdWV1ZT17Zmlyc3Q6Yy5maXJzdCxsYXN0OmMubGFzdCxjYWxsYmFja0xpc3Q6bnVsbCxoYXNGb3JjZVVwZGF0ZTohMX0pO1xuYT1jLmNhbGxiYWNrTGlzdDtmb3IodmFyIGg9Yy5oYXNGb3JjZVVwZGF0ZSxrPSEwLHA9Yy5maXJzdDtudWxsIT09cCYmMD49b2QocC5wcmlvcml0eUxldmVsLGcpOyl7Yy5maXJzdD1wLm5leHQ7bnVsbD09PWMuZmlyc3QmJihjLmxhc3Q9bnVsbCk7dmFyIHg7aWYocC5pc1JlcGxhY2UpZT10ZChwLGQsZSxmKSxrPSEwO2Vsc2UgaWYoeD10ZChwLGQsZSxmKSllPWs/bih7fSxlLHgpOm4oZSx4KSxrPSExO3AuaXNGb3JjZWQmJihoPSEwKTtudWxsPT09cC5jYWxsYmFja3x8cC5pc1RvcExldmVsVW5tb3VudCYmbnVsbCE9PXAubmV4dHx8KGE9bnVsbCE9PWE/YTpbXSxhLnB1c2gocC5jYWxsYmFjayksYi5lZmZlY3RUYWd8PWZkKTtwPXAubmV4dH1jLmNhbGxiYWNrTGlzdD1hO2MuaGFzRm9yY2VVcGRhdGU9aDtudWxsIT09Yy5maXJzdHx8bnVsbCE9PWF8fGh8fChiLnVwZGF0ZVF1ZXVlPW51bGwpO3JldHVybiBlfSxjb21taXRDYWxsYmFja3M6ZnVuY3Rpb24oYSxiLGMpe2E9Yi5jYWxsYmFja0xpc3Q7XG5pZihudWxsIT09YSlmb3IoYi5jYWxsYmFja0xpc3Q9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGQ/dyhcIjE5MVwiLGQpOnZvaWQgMDtkLmNhbGwoYyl9fX0sdmQ9W10sd2Q9LTEseGQ9e2NyZWF0ZUN1cnNvcjpmdW5jdGlvbihhKXtyZXR1cm57Y3VycmVudDphfX0saXNFbXB0eTpmdW5jdGlvbigpe3JldHVybi0xPT09d2R9LHBvcDpmdW5jdGlvbihhKXswPndkfHwoYS5jdXJyZW50PXZkW3dkXSx2ZFt3ZF09bnVsbCx3ZC0tKX0scHVzaDpmdW5jdGlvbihhLGIpe3dkKys7dmRbd2RdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn0scmVzZXQ6ZnVuY3Rpb24oKXtmb3IoOy0xPHdkOyl2ZFt3ZF09bnVsbCx3ZC0tfX0seWQ9YmIuaXNGaWJlck1vdW50ZWQsemQ9RS5DbGFzc0NvbXBvbmVudCxBZD1FLkhvc3RSb290LEJkPXhkLmNyZWF0ZUN1cnNvcixDZD14ZC5wb3AsRGQ9eGQucHVzaCxFZD1CZChkYSksRmQ9QmQoITEpLExkPWRhO1xuZnVuY3Rpb24gTWQoYSxiLGMpe2E9YS5zdGF0ZU5vZGU7YS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWI7YS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1jfWZ1bmN0aW9uIE5kKGEpe3JldHVybiBhLnRhZz09PXpkJiZudWxsIT1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXN9ZnVuY3Rpb24gT2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6dyhcIjEwOFwiLFJhKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxiLGMpfVxudmFyIFI9e2dldFVubWFza2VkQ29udGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gTmQoYSk/TGQ6RWQuY3VycmVudH0sY2FjaGVDb250ZXh0Ok1kLGdldE1hc2tlZENvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBkYTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmTWQoYSxiLGUpO3JldHVybiBlfSxoYXNDb250ZXh0Q2hhbmdlZDpmdW5jdGlvbigpe3JldHVybiBGZC5jdXJyZW50fSxpc0NvbnRleHRDb25zdW1lcjpmdW5jdGlvbihhKXtyZXR1cm4gYS50YWc9PT16ZCYmbnVsbCE9YS50eXBlLmNvbnRleHRUeXBlc30saXNDb250ZXh0UHJvdmlkZXI6TmQscG9wQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKGEpe05kKGEpJiZcbihDZChGZCxhKSxDZChFZCxhKSl9LHBvcFRvcExldmVsQ29udGV4dE9iamVjdDpmdW5jdGlvbihhKXtDZChGZCxhKTtDZChFZCxhKX0scHVzaFRvcExldmVsQ29udGV4dE9iamVjdDpmdW5jdGlvbihhLGIsYyl7bnVsbCE9RWQuY3Vyc29yP3coXCIxNjhcIik6dm9pZCAwO0RkKEVkLGIsYSk7RGQoRmQsYyxhKX0scHJvY2Vzc0NoaWxkQ29udGV4dDpPZCxwdXNoQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKGEpe2lmKCFOZChhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fGRhO0xkPUVkLmN1cnJlbnQ7RGQoRWQsYixhKTtEZChGZCxGZC5jdXJyZW50LGEpO3JldHVybiEwfSxpbnZhbGlkYXRlQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7Yz92b2lkIDA6dyhcIjE2OVwiKTtpZihiKXt2YXIgZD1PZChhLExkLCEwKTtjLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PVxuZDtDZChGZCxhKTtDZChFZCxhKTtEZChFZCxkLGEpfWVsc2UgQ2QoRmQsYSk7RGQoRmQsYixhKX0scmVzZXRDb250ZXh0OmZ1bmN0aW9uKCl7TGQ9ZGE7RWQuY3VycmVudD1kYTtGZC5jdXJyZW50PSExfSxmaW5kQ3VycmVudFVubWFza2VkQ29udGV4dDpmdW5jdGlvbihhKXtmb3IoeWQoYSkmJmEudGFnPT09emQ/dm9pZCAwOncoXCIxNzBcIik7YS50YWchPT1BZDspe2lmKE5kKGEpKXJldHVybiBhLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDsoYT1hW1wicmV0dXJuXCJdKT92b2lkIDA6dyhcIjE3MVwiKX1yZXR1cm4gYS5zdGF0ZU5vZGUuY29udGV4dH19LFBkPXtOb0NvbnRleHQ6MCxBc3luY1VwZGF0ZXM6MX0sUWQ9RS5JbmRldGVybWluYXRlQ29tcG9uZW50LFJkPUUuQ2xhc3NDb21wb25lbnQsU2Q9RS5Ib3N0Um9vdCxUZD1FLkhvc3RDb21wb25lbnQsVWQ9RS5Ib3N0VGV4dCxWZD1FLkhvc3RQb3J0YWwsV2Q9RS5Db3JvdXRpbmVDb21wb25lbnQsXG5YZD1FLllpZWxkQ29tcG9uZW50LFlkPUUuRnJhZ21lbnQsWmQ9US5Ob1dvcmssJGQ9UGQuTm9Db250ZXh0LGFlPUouTm9FZmZlY3Q7ZnVuY3Rpb24gYmUoYSxiLGMpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yjt0aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzW1wicmV0dXJuXCJdPW51bGw7dGhpcy5pbmRleD0wO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz10aGlzLnBlbmRpbmdQcm9wcz10aGlzLnJlZj1udWxsO3RoaXMuaW50ZXJuYWxDb250ZXh0VGFnPWM7dGhpcy5lZmZlY3RUYWc9YWU7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5wZW5kaW5nV29ya1ByaW9yaXR5PVpkO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiBjZShhLGIsYyl7dmFyIGQ9dm9pZCAwO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhPyhkPWEucHJvdG90eXBlJiZhLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50P25ldyBiZShSZCxiLGMpOm5ldyBiZShRZCxiLGMpLGQudHlwZT1hKTpcInN0cmluZ1wiPT09dHlwZW9mIGE/KGQ9bmV3IGJlKFRkLGIsYyksZC50eXBlPWEpOlwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJlwibnVtYmVyXCI9PT10eXBlb2YgYS50YWc/ZD1hOncoXCIxMzBcIixudWxsPT1hP2E6dHlwZW9mIGEsXCJcIik7cmV0dXJuIGR9XG52YXIgZGU9e2NyZWF0ZVdvcmtJblByb2dyZXNzOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmV3IGJlKGEudGFnLGEua2V5LGEuaW50ZXJuYWxDb250ZXh0VGFnKSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMuZWZmZWN0VGFnPWFlLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5wZW5kaW5nV29ya1ByaW9yaXR5PWI7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9LGNyZWF0ZUhvc3RSb290RmliZXI6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGJlKFNkLG51bGwsJGQpfSxcbmNyZWF0ZUZpYmVyRnJvbUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGMpe2I9Y2UoYS50eXBlLGEua2V5LGIsbnVsbCk7Yi5wZW5kaW5nUHJvcHM9YS5wcm9wcztiLnBlbmRpbmdXb3JrUHJpb3JpdHk9YztyZXR1cm4gYn0sY3JlYXRlRmliZXJGcm9tRnJhZ21lbnQ6ZnVuY3Rpb24oYSxiLGMpe2I9bmV3IGJlKFlkLG51bGwsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLnBlbmRpbmdXb3JrUHJpb3JpdHk9YztyZXR1cm4gYn0sY3JlYXRlRmliZXJGcm9tVGV4dDpmdW5jdGlvbihhLGIsYyl7Yj1uZXcgYmUoVWQsbnVsbCxiKTtiLnBlbmRpbmdQcm9wcz1hO2IucGVuZGluZ1dvcmtQcmlvcml0eT1jO3JldHVybiBifSxjcmVhdGVGaWJlckZyb21FbGVtZW50VHlwZTpjZSxjcmVhdGVGaWJlckZyb21Ib3N0SW5zdGFuY2VGb3JEZWxldGlvbjpmdW5jdGlvbigpe3ZhciBhPW5ldyBiZShUZCxudWxsLCRkKTthLnR5cGU9XCJERUxFVEVEXCI7cmV0dXJuIGF9LGNyZWF0ZUZpYmVyRnJvbUNvcm91dGluZTpmdW5jdGlvbihhLFxuYixjKXtiPW5ldyBiZShXZCxhLmtleSxiKTtiLnR5cGU9YS5oYW5kbGVyO2IucGVuZGluZ1Byb3BzPWE7Yi5wZW5kaW5nV29ya1ByaW9yaXR5PWM7cmV0dXJuIGJ9LGNyZWF0ZUZpYmVyRnJvbVlpZWxkOmZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBiZShYZCxudWxsLGIpfSxjcmVhdGVGaWJlckZyb21Qb3J0YWw6ZnVuY3Rpb24oYSxiLGMpe2I9bmV3IGJlKFZkLGEua2V5LGIpO2IucGVuZGluZ1Byb3BzPWEuY2hpbGRyZW58fFtdO2IucGVuZGluZ1dvcmtQcmlvcml0eT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn0sbGFyZ2VyUHJpb3JpdHk6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSE9PVpkJiYoYj09PVpkfHxiPmEpP2E6Yn19LGVlPWRlLmNyZWF0ZUhvc3RSb290RmliZXIsZmU9RS5JbmRldGVybWluYXRlQ29tcG9uZW50LGdlPUUuRnVuY3Rpb25hbENvbXBvbmVudCxoZT1FLkNsYXNzQ29tcG9uZW50LFxuaWU9RS5Ib3N0Q29tcG9uZW50LGplLGtlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXT8oamU9U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY29yb3V0aW5lXCIpLGtlPVN5bWJvbFtcImZvclwiXShcInJlYWN0LnlpZWxkXCIpKTooamU9NjAxMDQsa2U9NjAxMDUpO1xudmFyIGxlPXtjcmVhdGVDb3JvdXRpbmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpqZSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGhhbmRsZXI6Yixwcm9wczpjfX0sY3JlYXRlWWllbGQ6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmtlLHZhbHVlOmF9fSxpc0Nvcm91dGluZTpmdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09amV9LGlzWWllbGQ6ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWtlfSxSRUFDVF9ZSUVMRF9UWVBFOmtlLFJFQUNUX0NPUk9VVElORV9UWVBFOmplfSxtZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0mJlN5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKXx8XG42MDEwNixuZT17Y3JlYXRlUG9ydGFsOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6bWUsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319LGlzUG9ydGFsOmZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1tZX0sUkVBQ1RfUE9SVEFMX1RZUEU6bWV9LG9lPWxlLlJFQUNUX0NPUk9VVElORV9UWVBFLHBlPWxlLlJFQUNUX1lJRUxEX1RZUEUscWU9bmUuUkVBQ1RfUE9SVEFMX1RZUEUscmU9ZGUuY3JlYXRlV29ya0luUHJvZ3Jlc3Msc2U9ZGUuY3JlYXRlRmliZXJGcm9tRWxlbWVudCx0ZT1kZS5jcmVhdGVGaWJlckZyb21GcmFnbWVudCx1ZT1kZS5jcmVhdGVGaWJlckZyb21UZXh0LHZlPWRlLmNyZWF0ZUZpYmVyRnJvbUNvcm91dGluZSxcbndlPWRlLmNyZWF0ZUZpYmVyRnJvbVlpZWxkLHhlPWRlLmNyZWF0ZUZpYmVyRnJvbVBvcnRhbCx5ZT1BcnJheS5pc0FycmF5LHplPUUuRnVuY3Rpb25hbENvbXBvbmVudCxBZT1FLkNsYXNzQ29tcG9uZW50LEJlPUUuSG9zdFRleHQsQ2U9RS5Ib3N0UG9ydGFsLERlPUUuQ29yb3V0aW5lQ29tcG9uZW50LEVlPUUuWWllbGRDb21wb25lbnQsRmU9RS5GcmFnbWVudCxHZT1KLk5vRWZmZWN0LEhlPUouUGxhY2VtZW50LEllPUouRGVsZXRpb24sSmU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yLEtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSYmU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKXx8NjAxMDM7XG5mdW5jdGlvbiBMZShhKXtpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmUmJmFbSmVdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBNZShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGwhPT1jJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl7aWYoYi5fb3duZXIpe2I9Yi5fb3duZXI7dmFyIGQ9dm9pZCAwO2ImJihcIm51bWJlclwiPT09dHlwZW9mIGIudGFnPyhiLnRhZyE9PUFlP3coXCIxMTBcIik6dm9pZCAwLGQ9Yi5zdGF0ZU5vZGUpOmQ9Yi5nZXRQdWJsaWNJbnN0YW5jZSgpKTtkP3ZvaWQgMDp3KFwiMTQ3XCIsYyk7dmFyIGU9XCJcIitjO2lmKG51bGwhPT1hJiZudWxsIT09YS5yZWYmJmEucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBhLnJlZjthPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PWRhP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTthLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYX1cInN0cmluZ1wiIT09dHlwZW9mIGM/dyhcIjE0OFwiKTp2b2lkIDA7Yi5fb3duZXI/dm9pZCAwOncoXCIxNDlcIixjKX1yZXR1cm4gY31cbmZ1bmN0aW9uIE5lKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ3KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBPZShhLGIpe2Z1bmN0aW9uIGMoYyxkKXtpZihiKXtpZighYSl7aWYobnVsbD09PWQuYWx0ZXJuYXRlKXJldHVybjtkPWQuYWx0ZXJuYXRlfXZhciBtPWMubGFzdEVmZmVjdDtudWxsIT09bT8obS5uZXh0RWZmZWN0PWQsYy5sYXN0RWZmZWN0PWQpOmMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PWQ7ZC5uZXh0RWZmZWN0PW51bGw7ZC5lZmZlY3RUYWc9SWV9fWZ1bmN0aW9uIGQoYSxkKXtpZighYilyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyljKGEsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZShhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjKXtpZihhKXJldHVybiBiPXJlKGIsYyksYi5pbmRleD0wLGIuc2libGluZz1udWxsLGI7Yi5wZW5kaW5nV29ya1ByaW9yaXR5PWM7Yi5lZmZlY3RUYWc9R2U7XG5iLmluZGV4PTA7Yi5zaWJsaW5nPW51bGw7cmV0dXJuIGJ9ZnVuY3Rpb24gZyhhLGMsZCl7YS5pbmRleD1kO2lmKCFiKXJldHVybiBjO2Q9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGEuZWZmZWN0VGFnPUhlLGMpOmQ7YS5lZmZlY3RUYWc9SGU7cmV0dXJuIGN9ZnVuY3Rpb24gaChhKXtiJiZudWxsPT09YS5hbHRlcm5hdGUmJihhLmVmZmVjdFRhZz1IZSk7cmV0dXJuIGF9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsPT09Ynx8Yi50YWchPT1CZSlyZXR1cm4gYz11ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGNbXCJyZXR1cm5cIl09YSxjO2I9ZihiLGQpO2IucGVuZGluZ1Byb3BzPWM7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMsZCl7aWYobnVsbD09PWJ8fGIudHlwZSE9PWMudHlwZSlyZXR1cm4gZD1zZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGQucmVmPU1lKGIsYyksZFtcInJldHVyblwiXT1hLGQ7ZD1mKGIsXG5kKTtkLnJlZj1NZShiLGMpO2QucGVuZGluZ1Byb3BzPWMucHJvcHM7ZFtcInJldHVyblwiXT1hO3JldHVybiBkfWZ1bmN0aW9uIHgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fGIudGFnIT09RGUpcmV0dXJuIGM9dmUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxjW1wicmV0dXJuXCJdPWEsYztiPWYoYixkKTtiLnBlbmRpbmdQcm9wcz1jO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiBTKGEsYixjLGQpe2lmKG51bGw9PT1ifHxiLnRhZyE9PUVlKXJldHVybiBiPXdlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYi50eXBlPWMudmFsdWUsYltcInJldHVyblwiXT1hLGI7Yj1mKGIsZCk7Yi50eXBlPWMudmFsdWU7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIEQoYSxiLGMsZCl7aWYobnVsbD09PWJ8fGIudGFnIT09Q2V8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYz1cbnhlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksY1tcInJldHVyblwiXT1hLGM7Yj1mKGIsZCk7Yi5wZW5kaW5nUHJvcHM9Yy5jaGlsZHJlbnx8W107YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHkoYSxiLGMsZCl7aWYobnVsbD09PWJ8fGIudGFnIT09RmUpcmV0dXJuIGM9dGUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxjW1wicmV0dXJuXCJdPWEsYztiPWYoYixkKTtiLnBlbmRpbmdQcm9wcz1jO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiBCKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj11ZShcIlwiK2IsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgS2U6cmV0dXJuIGM9c2UoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxjLnJlZj1NZShudWxsLGIpLGNbXCJyZXR1cm5cIl09XG5hLGM7Y2FzZSBvZTpyZXR1cm4gYj12ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO2Nhc2UgcGU6cmV0dXJuIGM9d2UoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxjLnR5cGU9Yi52YWx1ZSxjW1wicmV0dXJuXCJdPWEsYztjYXNlIHFlOnJldHVybiBiPXhlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGJ9aWYoeWUoYil8fExlKGIpKXJldHVybiBiPXRlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7TmUoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBIKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6ayhhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIEtlOnJldHVybiBjLmtleT09PWU/cChhLFxuYixjLGQpOm51bGw7Y2FzZSBvZTpyZXR1cm4gYy5rZXk9PT1lP3goYSxiLGMsZCk6bnVsbDtjYXNlIHBlOnJldHVybiBudWxsPT09ZT9TKGEsYixjLGQpOm51bGw7Y2FzZSBxZTpyZXR1cm4gYy5rZXk9PT1lP0QoYSxiLGMsZCk6bnVsbH1pZih5ZShjKXx8TGUoYykpcmV0dXJuIG51bGwhPT1lP251bGw6eShhLGIsYyxkKTtOZShhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxrKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgS2U6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLHAoYixhLGQsZSk7Y2FzZSBvZTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwseChiLGEsZCxlKTtjYXNlIHBlOnJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsUyhiLGEsZCxlKTtjYXNlIHFlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxEKGIsYSxkLGUpfWlmKHllKGQpfHxMZShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCx5KGIsYSxkLGUpO05lKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2EoYSxmLGgsayl7Zm9yKHZhciBtPW51bGwsdD1udWxsLHE9ZixyPWY9MCxwPW51bGw7bnVsbCE9PXEmJnI8aC5sZW5ndGg7cisrKXtxLmluZGV4PnI/KHA9cSxxPW51bGwpOnA9cS5zaWJsaW5nO3ZhciB2PUgoYSxxLGhbcl0sayk7aWYobnVsbD09PXYpe251bGw9PT1xJiYocT1wKTticmVha31iJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmMoYSxxKTtmPWcodixmLHIpO251bGw9PT10P209djp0LnNpYmxpbmc9djt0PXY7cT1wfWlmKHI9PT1oLmxlbmd0aClyZXR1cm4gZChhLHEpLG07aWYobnVsbD09PXEpe2Zvcig7cjxoLmxlbmd0aDtyKyspaWYocT1CKGEsaFtyXSxrKSlmPWcocSxmLHIpLG51bGw9PT1cbnQ/bT1xOnQuc2libGluZz1xLHQ9cTtyZXR1cm4gbX1mb3IocT1lKGEscSk7cjxoLmxlbmd0aDtyKyspaWYocD1DKHEsYSxyLGhbcl0saykpe2lmKGImJm51bGwhPT1wLmFsdGVybmF0ZSlxW1wiZGVsZXRlXCJdKG51bGw9PT1wLmtleT9yOnAua2V5KTtmPWcocCxmLHIpO251bGw9PT10P209cDp0LnNpYmxpbmc9cDt0PXB9YiYmcS5mb3JFYWNoKGZ1bmN0aW9uKGIpe3JldHVybiBjKGEsYil9KTtyZXR1cm4gbX1mdW5jdGlvbiByKGEsZixoLHIpe3ZhciBtPUxlKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBtP3coXCIxNTBcIik6dm9pZCAwO2g9bS5jYWxsKGgpO251bGw9PWg/dyhcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciB0PW09bnVsbCxxPWYsaz1mPTAscD1udWxsLHY9aC5uZXh0KCk7bnVsbCE9PXEmJiF2LmRvbmU7aysrLHY9aC5uZXh0KCkpe3EuaW5kZXg+az8ocD1xLHE9bnVsbCk6cD1xLnNpYmxpbmc7dmFyIFY9SChhLHEsdi52YWx1ZSxyKTtpZihudWxsPT09Vil7cXx8KHE9cCk7YnJlYWt9YiYmXG5xJiZudWxsPT09Vi5hbHRlcm5hdGUmJmMoYSxxKTtmPWcoVixmLGspO251bGw9PT10P209Vjp0LnNpYmxpbmc9Vjt0PVY7cT1wfWlmKHYuZG9uZSlyZXR1cm4gZChhLHEpLG07aWYobnVsbD09PXEpe2Zvcig7IXYuZG9uZTtrKyssdj1oLm5leHQoKSl2PUIoYSx2LnZhbHVlLHIpLG51bGwhPT12JiYoZj1nKHYsZixrKSxudWxsPT09dD9tPXY6dC5zaWJsaW5nPXYsdD12KTtyZXR1cm4gbX1mb3IocT1lKGEscSk7IXYuZG9uZTtrKyssdj1oLm5leHQoKSlpZih2PUMocSxhLGssdi52YWx1ZSxyKSxudWxsIT09dil7aWYoYiYmbnVsbCE9PXYuYWx0ZXJuYXRlKXFbXCJkZWxldGVcIl0obnVsbD09PXYua2V5P2s6di5rZXkpO2Y9Zyh2LGYsayk7bnVsbD09PXQ/bT12OnQuc2libGluZz12O3Q9dn1iJiZxLmZvckVhY2goZnVuY3Rpb24oYil7cmV0dXJuIGMoYSxiKX0pO3JldHVybiBtfXJldHVybiBmdW5jdGlvbihhLGIsZSxnKXt2YXIgbT1cIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lO2lmKG0pc3dpdGNoKGUuJCR0eXBlb2Ype2Nhc2UgS2U6YTp7dmFyIEM9XG5lLmtleTtmb3IobT1iO251bGwhPT1tOyl7aWYobS5rZXk9PT1DKWlmKG0udHlwZT09PWUudHlwZSl7ZChhLG0uc2libGluZyk7Yj1mKG0sZyk7Yi5yZWY9TWUobSxlKTtiLnBlbmRpbmdQcm9wcz1lLnByb3BzO2JbXCJyZXR1cm5cIl09YTthPWI7YnJlYWsgYX1lbHNle2QoYSxtKTticmVha31lbHNlIGMoYSxtKTttPW0uc2libGluZ31nPXNlKGUsYS5pbnRlcm5hbENvbnRleHRUYWcsZyk7Zy5yZWY9TWUoYixlKTtnW1wicmV0dXJuXCJdPWE7YT1nfXJldHVybiBoKGEpO2Nhc2Ugb2U6YTp7Zm9yKG09ZS5rZXk7bnVsbCE9PWI7KXtpZihiLmtleT09PW0paWYoYi50YWc9PT1EZSl7ZChhLGIuc2libGluZyk7Yj1mKGIsZyk7Yi5wZW5kaW5nUHJvcHM9ZTtiW1wicmV0dXJuXCJdPWE7YT1iO2JyZWFrIGF9ZWxzZXtkKGEsYik7YnJlYWt9ZWxzZSBjKGEsYik7Yj1iLnNpYmxpbmd9ZT12ZShlLGEuaW50ZXJuYWxDb250ZXh0VGFnLGcpO2VbXCJyZXR1cm5cIl09YTthPWV9cmV0dXJuIGgoYSk7Y2FzZSBwZTphOntpZihudWxsIT09XG5iKWlmKGIudGFnPT09RWUpe2QoYSxiLnNpYmxpbmcpO2I9ZihiLGcpO2IudHlwZT1lLnZhbHVlO2JbXCJyZXR1cm5cIl09YTthPWI7YnJlYWsgYX1lbHNlIGQoYSxiKTtiPXdlKGUsYS5pbnRlcm5hbENvbnRleHRUYWcsZyk7Yi50eXBlPWUudmFsdWU7YltcInJldHVyblwiXT1hO2E9Yn1yZXR1cm4gaChhKTtjYXNlIHFlOmE6e2ZvcihtPWUua2V5O251bGwhPT1iOyl7aWYoYi5rZXk9PT1tKWlmKGIudGFnPT09Q2UmJmIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1lLmNvbnRhaW5lckluZm8mJmIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09ZS5pbXBsZW1lbnRhdGlvbil7ZChhLGIuc2libGluZyk7Yj1mKGIsZyk7Yi5wZW5kaW5nUHJvcHM9ZS5jaGlsZHJlbnx8W107YltcInJldHVyblwiXT1hO2E9YjticmVhayBhfWVsc2V7ZChhLGIpO2JyZWFrfWVsc2UgYyhhLGIpO2I9Yi5zaWJsaW5nfWU9eGUoZSxhLmludGVybmFsQ29udGV4dFRhZyxnKTtlW1wicmV0dXJuXCJdPWE7YT1lfXJldHVybiBoKGEpfWlmKFwic3RyaW5nXCI9PT1cbnR5cGVvZiBlfHxcIm51bWJlclwiPT09dHlwZW9mIGUpcmV0dXJuIGU9XCJcIitlLG51bGwhPT1iJiZiLnRhZz09PUJlPyhkKGEsYi5zaWJsaW5nKSxiPWYoYixnKSxiLnBlbmRpbmdQcm9wcz1lLGJbXCJyZXR1cm5cIl09YSxhPWIpOihkKGEsYiksZT11ZShlLGEuaW50ZXJuYWxDb250ZXh0VGFnLGcpLGVbXCJyZXR1cm5cIl09YSxhPWUpLGgoYSk7aWYoeWUoZSkpcmV0dXJuIENhKGEsYixlLGcpO2lmKExlKGUpKXJldHVybiByKGEsYixlLGcpO20mJk5lKGEsZSk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBlKXN3aXRjaChhLnRhZyl7Y2FzZSBBZTpjYXNlIHplOmU9YS50eXBlLHcoXCIxNTJcIixlLmRpc3BsYXlOYW1lfHxlLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBkKGEsYil9fVxudmFyIFBlPU9lKCEwLCEwKSxRZT1PZSghMSwhMCksUmU9T2UoITEsITEpLFNlPXtyZWNvbmNpbGVDaGlsZEZpYmVyczpQZSxyZWNvbmNpbGVDaGlsZEZpYmVyc0luUGxhY2U6UWUsbW91bnRDaGlsZEZpYmVyc0luUGxhY2U6UmUsY2xvbmVDaGlsZEZpYmVyczpmdW5jdGlvbihhLGIpe251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD93KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO3ZhciBjPXJlKGEsYS5wZW5kaW5nV29ya1ByaW9yaXR5KTtjLnBlbmRpbmdQcm9wcz1hLnBlbmRpbmdQcm9wcztiLmNoaWxkPWM7Zm9yKGNbXCJyZXR1cm5cIl09YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1yZShhLGEucGVuZGluZ1dvcmtQcmlvcml0eSksYy5wZW5kaW5nUHJvcHM9YS5wZW5kaW5nUHJvcHMsY1tcInJldHVyblwiXT1iO2Muc2libGluZz1udWxsfX19LFRlPUouVXBkYXRlLFVlPVBkLkFzeW5jVXBkYXRlcyxWZT1SLmNhY2hlQ29udGV4dCxcbldlPVIuZ2V0TWFza2VkQ29udGV4dCxYZT1SLmdldFVubWFza2VkQ29udGV4dCxZZT1SLmlzQ29udGV4dENvbnN1bWVyLFplPXVkLmFkZFVwZGF0ZSwkZT11ZC5hZGRSZXBsYWNlVXBkYXRlLGFmPXVkLmFkZEZvcmNlVXBkYXRlLGJmPXVkLmJlZ2luVXBkYXRlUXVldWUsY2Y9Ui5oYXNDb250ZXh0Q2hhbmdlZCxkZj1iYi5pc01vdW50ZWQ7XG5mdW5jdGlvbiBlZihhLGIsYyxkKXtmdW5jdGlvbiBlKGEsYil7Yi51cGRhdGVyPWY7YS5zdGF0ZU5vZGU9YjtQYS5zZXQoYixhKX12YXIgZj17aXNNb3VudGVkOmRmLGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihjLGQsZSl7Yz1QYS5nZXQoYyk7dmFyIGY9YihjLCExKTtaZShjLGQsdm9pZCAwPT09ZT9udWxsOmUsZik7YShjLGYpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGMsZCxlKXtjPVBhLmdldChjKTt2YXIgZj1iKGMsITEpOyRlKGMsZCx2b2lkIDA9PT1lP251bGw6ZSxmKTthKGMsZil9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihjLGQpe2M9UGEuZ2V0KGMpO3ZhciBlPWIoYywhMSk7YWYoYyx2b2lkIDA9PT1kP251bGw6ZCxlKTthKGMsZSl9fTtyZXR1cm57YWRvcHRDbGFzc0luc3RhbmNlOmUsY29uc3RydWN0Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3ZhciBjPWEudHlwZSxkPVhlKGEpLGY9WWUoYSksZz1mP1dlKGEsZCk6ZGE7Yj1uZXcgYyhiLGcpO1xuZShhLGIpO2YmJlZlKGEsZCxnKTtyZXR1cm4gYn0sbW91bnRDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLnN0YXRlTm9kZSxlPWQuc3RhdGV8fG51bGwsZz1hLnBlbmRpbmdQcm9wcztnP3ZvaWQgMDp3KFwiMTU4XCIpO3ZhciBoPVhlKGEpO2QucHJvcHM9ZztkLnN0YXRlPWU7ZC5yZWZzPWRhO2QuY29udGV4dD1XZShhLGgpO2VkLmVuYWJsZUFzeW5jU3VidHJlZUFQSSYmbnVsbCE9YS50eXBlJiZudWxsIT1hLnR5cGUucHJvdG90eXBlJiYhMD09PWEudHlwZS5wcm90b3R5cGUudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50JiYoYS5pbnRlcm5hbENvbnRleHRUYWd8PVVlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJihoPWQuc3RhdGUsZC5jb21wb25lbnRXaWxsTW91bnQoKSxoIT09ZC5zdGF0ZSYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxoPWEudXBkYXRlUXVldWUsbnVsbCE9PVxuaCYmKGQuc3RhdGU9YmYoYyxhLGgsZCxlLGcsYikpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD1UZSl9LHVwZGF0ZUNsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGUpe3ZhciBnPWIuc3RhdGVOb2RlO2cucHJvcHM9Yi5tZW1vaXplZFByb3BzO2cuc3RhdGU9Yi5tZW1vaXplZFN0YXRlO3ZhciBoPWIubWVtb2l6ZWRQcm9wcyxrPWIucGVuZGluZ1Byb3BzO2t8fChrPWgsbnVsbD09az93KFwiMTU5XCIpOnZvaWQgMCk7dmFyIEQ9Zy5jb250ZXh0LHk9WGUoYik7eT1XZShiLHkpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fGg9PT1rJiZEPT09eXx8KEQ9Zy5zdGF0ZSxnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoayx5KSxnLnN0YXRlIT09RCYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGcsZy5zdGF0ZSxudWxsKSk7RD1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09Yi51cGRhdGVRdWV1ZT9iZihhLFxuYixiLnVwZGF0ZVF1ZXVlLGcsRCxrLGUpOkQ7aWYoIShoIT09a3x8RCE9PWV8fGNmKCl8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKSlyZXR1cm5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJkQ9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9VGUpLCExO3ZhciBCPWs7aWYobnVsbD09PWh8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKUI9ITA7ZWxzZXt2YXIgSD1iLnN0YXRlTm9kZSxDPWIudHlwZTtCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBILnNob3VsZENvbXBvbmVudFVwZGF0ZT9ILnNob3VsZENvbXBvbmVudFVwZGF0ZShCLGUseSk6Qy5wcm90b3R5cGUmJkMucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFlYShoLEIpfHwhZWEoRCxlKTohMH1CPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuY29tcG9uZW50V2lsbFVwZGF0ZShrLGUseSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PVRlKSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmRD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD1UZSksYyhiLGspLGQoYixlKSk7Zy5wcm9wcz1rO2cuc3RhdGU9ZTtnLmNvbnRleHQ9eTtyZXR1cm4gQn19fVxudmFyIGZmPVNlLm1vdW50Q2hpbGRGaWJlcnNJblBsYWNlLGdmPVNlLnJlY29uY2lsZUNoaWxkRmliZXJzLGhmPVNlLnJlY29uY2lsZUNoaWxkRmliZXJzSW5QbGFjZSxqZj1TZS5jbG9uZUNoaWxkRmliZXJzLGtmPXVkLmJlZ2luVXBkYXRlUXVldWUsbGY9Ui5nZXRNYXNrZWRDb250ZXh0LG1mPVIuZ2V0VW5tYXNrZWRDb250ZXh0LG5mPVIuaGFzQ29udGV4dENoYW5nZWQsb2Y9Ui5wdXNoQ29udGV4dFByb3ZpZGVyLHBmPVIucHVzaFRvcExldmVsQ29udGV4dE9iamVjdCxxZj1SLmludmFsaWRhdGVDb250ZXh0UHJvdmlkZXIscmY9RS5JbmRldGVybWluYXRlQ29tcG9uZW50LHNmPUUuRnVuY3Rpb25hbENvbXBvbmVudCx0Zj1FLkNsYXNzQ29tcG9uZW50LHVmPUUuSG9zdFJvb3Qsd2Y9RS5Ib3N0Q29tcG9uZW50LHhmPUUuSG9zdFRleHQseWY9RS5Ib3N0UG9ydGFsLHpmPUUuQ29yb3V0aW5lQ29tcG9uZW50LEFmPUUuQ29yb3V0aW5lSGFuZGxlclBoYXNlLEJmPUUuWWllbGRDb21wb25lbnQsXG5DZj1FLkZyYWdtZW50LERmPVEuTm9Xb3JrLEVmPVEuT2Zmc2NyZWVuUHJpb3JpdHksRmY9Si5QZXJmb3JtZWRXb3JrLEdmPUouUGxhY2VtZW50LEhmPUouQ29udGVudFJlc2V0LElmPUouRXJyLEpmPUouUmVmLEtmPVFhLlJlYWN0Q3VycmVudE93bmVyO1xuZnVuY3Rpb24gTGYoYSxiLGMsZCxlKXtmdW5jdGlvbiBmKGEsYixjKXtnKGEsYixjLGIucGVuZGluZ1dvcmtQcmlvcml0eSl9ZnVuY3Rpb24gZyhhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP2ZmKGIsYi5jaGlsZCxjLGQpOmEuY2hpbGQ9PT1iLmNoaWxkP2dmKGIsYi5jaGlsZCxjLGQpOmhmKGIsYi5jaGlsZCxjLGQpfWZ1bmN0aW9uIGgoYSxiKXt2YXIgYz1iLnJlZjtudWxsPT09Y3x8YSYmYS5yZWY9PT1jfHwoYi5lZmZlY3RUYWd8PUpmKX1mdW5jdGlvbiBrKGEsYixjLGQpe2goYSxiKTtpZighYylyZXR1cm4gZCYmcWYoYiwhMSkseChhLGIpO2M9Yi5zdGF0ZU5vZGU7S2YuY3VycmVudD1iO3ZhciBlPWMucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PUZmO2YoYSxiLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnFmKGIsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHAoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9cbnBmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJnBmKGEsYi5jb250ZXh0LCExKTtDKGEsYi5jb250YWluZXJJbmZvKX1mdW5jdGlvbiB4KGEsYil7amYoYSxiKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBTKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIHVmOnAoYik7YnJlYWs7Y2FzZSB0ZjpvZihiKTticmVhaztjYXNlIHlmOkMoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKX1yZXR1cm4gbnVsbH12YXIgRD1hLnNob3VsZFNldFRleHRDb250ZW50LHk9YS51c2VTeW5jU2NoZWR1bGluZyxCPWEuc2hvdWxkRGVwcmlvcml0aXplU3VidHJlZSxIPWIucHVzaEhvc3RDb250ZXh0LEM9Yi5wdXNoSG9zdENvbnRhaW5lcixDYT1jLmVudGVySHlkcmF0aW9uU3RhdGUscj1jLnJlc2V0SHlkcmF0aW9uU3RhdGUsbT1jLnRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlO2E9ZWYoZCxlLGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFByb3BzPVxuYn0sZnVuY3Rpb24oYSxiKXthLm1lbW9pemVkU3RhdGU9Yn0pO3ZhciB0PWEuYWRvcHRDbGFzc0luc3RhbmNlLHY9YS5jb25zdHJ1Y3RDbGFzc0luc3RhbmNlLFY9YS5tb3VudENsYXNzSW5zdGFuY2UsbGQ9YS51cGRhdGVDbGFzc0luc3RhbmNlO3JldHVybntiZWdpbldvcms6ZnVuY3Rpb24oYSxiLGMpe2lmKGIucGVuZGluZ1dvcmtQcmlvcml0eT09PURmfHxiLnBlbmRpbmdXb3JrUHJpb3JpdHk+YylyZXR1cm4gUyhhLGIpO3N3aXRjaChiLnRhZyl7Y2FzZSByZjpudWxsIT09YT93KFwiMTU1XCIpOnZvaWQgMDt2YXIgZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxnPW1mKGIpO2c9bGYoYixnKTtkPWQoZSxnKTtiLmVmZmVjdFRhZ3w9RmY7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyPyhiLnRhZz10ZixlPW9mKGIpLHQoYixkKSxWKGIsYyksYj1rKGEsYiwhMCxlKSk6KGIudGFnPXNmLGYoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1cbmUsYj1iLmNoaWxkKTtyZXR1cm4gYjtjYXNlIHNmOmE6e2U9Yi50eXBlO2M9Yi5wZW5kaW5nUHJvcHM7ZD1iLm1lbW9pemVkUHJvcHM7aWYobmYoKSludWxsPT09YyYmKGM9ZCk7ZWxzZSBpZihudWxsPT09Y3x8ZD09PWMpe2I9eChhLGIpO2JyZWFrIGF9ZD1tZihiKTtkPWxmKGIsZCk7ZT1lKGMsZCk7Yi5lZmZlY3RUYWd8PUZmO2YoYSxiLGUpO2IubWVtb2l6ZWRQcm9wcz1jO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIHRmOnJldHVybiBlPW9mKGIpLGQ9dm9pZCAwLG51bGw9PT1hP2Iuc3RhdGVOb2RlP3coXCIxNTNcIik6KHYoYixiLnBlbmRpbmdQcm9wcyksVihiLGMpLGQ9ITApOmQ9bGQoYSxiLGMpLGsoYSxiLGQsZSk7Y2FzZSB1ZjpyZXR1cm4gcChiKSxkPWIudXBkYXRlUXVldWUsbnVsbCE9PWQ/KGU9Yi5tZW1vaXplZFN0YXRlLGQ9a2YoYSxiLGQsbnVsbCxlLG51bGwsYyksZT09PWQ/KHIoKSxiPXgoYSxiKSk6KGU9ZC5lbGVtZW50LG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8XG4hQ2EoYik/KHIoKSxmKGEsYixlKSk6KGIuZWZmZWN0VGFnfD1HZixiLmNoaWxkPWZmKGIsYi5jaGlsZCxlLGMpKSxiLm1lbW9pemVkU3RhdGU9ZCxiPWIuY2hpbGQpKToocigpLGI9eChhLGIpKSxiO2Nhc2Ugd2Y6SChiKTtudWxsPT09YSYmbShiKTtlPWIudHlwZTt2YXIgcT1iLm1lbW9pemVkUHJvcHM7ZD1iLnBlbmRpbmdQcm9wcztudWxsPT09ZCYmKGQ9cSxudWxsPT09ZD93KFwiMTU0XCIpOnZvaWQgMCk7Zz1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbDtuZigpfHxudWxsIT09ZCYmcSE9PWQ/KHE9ZC5jaGlsZHJlbixEKGUsZCk/cT1udWxsOmcmJkQoZSxnKSYmKGIuZWZmZWN0VGFnfD1IZiksaChhLGIpLGMhPT1FZiYmIXkmJkIoZSxkKT8oYi5wZW5kaW5nV29ya1ByaW9yaXR5PUVmLGI9bnVsbCk6KGYoYSxiLHEpLGIubWVtb2l6ZWRQcm9wcz1kLGI9Yi5jaGlsZCkpOmI9eChhLGIpO3JldHVybiBiO2Nhc2UgeGY6cmV0dXJuIG51bGw9PT1hJiZtKGIpLGE9Yi5wZW5kaW5nUHJvcHMsXG5udWxsPT09YSYmKGE9Yi5tZW1vaXplZFByb3BzKSxiLm1lbW9pemVkUHJvcHM9YSxudWxsO2Nhc2UgQWY6Yi50YWc9emY7Y2FzZSB6ZjpjPWIucGVuZGluZ1Byb3BzO2lmKG5mKCkpbnVsbD09PWMmJihjPWEmJmEubWVtb2l6ZWRQcm9wcyxudWxsPT09Yz93KFwiMTU0XCIpOnZvaWQgMCk7ZWxzZSBpZihudWxsPT09Y3x8Yi5tZW1vaXplZFByb3BzPT09YyljPWIubWVtb2l6ZWRQcm9wcztlPWMuY2hpbGRyZW47ZD1iLnBlbmRpbmdXb3JrUHJpb3JpdHk7Yi5zdGF0ZU5vZGU9bnVsbD09PWE/ZmYoYixiLnN0YXRlTm9kZSxlLGQpOmEuY2hpbGQ9PT1iLmNoaWxkP2dmKGIsYi5zdGF0ZU5vZGUsZSxkKTpoZihiLGIuc3RhdGVOb2RlLGUsZCk7Yi5tZW1vaXplZFByb3BzPWM7cmV0dXJuIGIuc3RhdGVOb2RlO2Nhc2UgQmY6cmV0dXJuIG51bGw7Y2FzZSB5ZjphOntDKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7Yz1iLnBlbmRpbmdXb3JrUHJpb3JpdHk7ZT1iLnBlbmRpbmdQcm9wcztpZihuZigpKW51bGw9PT1cbmUmJihlPWEmJmEubWVtb2l6ZWRQcm9wcyxudWxsPT1lP3coXCIxNTRcIik6dm9pZCAwKTtlbHNlIGlmKG51bGw9PT1lfHxiLm1lbW9pemVkUHJvcHM9PT1lKXtiPXgoYSxiKTticmVhayBhfW51bGw9PT1hP2IuY2hpbGQ9aGYoYixiLmNoaWxkLGUsYyk6ZihhLGIsZSk7Yi5tZW1vaXplZFByb3BzPWU7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgQ2Y6YTp7Yz1iLnBlbmRpbmdQcm9wcztpZihuZigpKW51bGw9PT1jJiYoYz1iLm1lbW9pemVkUHJvcHMpO2Vsc2UgaWYobnVsbD09PWN8fGIubWVtb2l6ZWRQcm9wcz09PWMpe2I9eChhLGIpO2JyZWFrIGF9ZihhLGIsYyk7Yi5tZW1vaXplZFByb3BzPWM7Yj1iLmNoaWxkfXJldHVybiBiO2RlZmF1bHQ6dyhcIjE1NlwiKX19LGJlZ2luRmFpbGVkV29yazpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIudGFnKXtjYXNlIHRmOm9mKGIpO2JyZWFrO2Nhc2UgdWY6cChiKTticmVhaztkZWZhdWx0OncoXCIxNTdcIil9Yi5lZmZlY3RUYWd8PUlmO251bGw9PT1hP1xuYi5jaGlsZD1udWxsOmIuY2hpbGQhPT1hLmNoaWxkJiYoYi5jaGlsZD1hLmNoaWxkKTtpZihiLnBlbmRpbmdXb3JrUHJpb3JpdHk9PT1EZnx8Yi5wZW5kaW5nV29ya1ByaW9yaXR5PmMpcmV0dXJuIFMoYSxiKTtiLmZpcnN0RWZmZWN0PW51bGw7Yi5sYXN0RWZmZWN0PW51bGw7ZyhhLGIsbnVsbCxjKTtiLnRhZz09PXRmJiYoYT1iLnN0YXRlTm9kZSxiLm1lbW9pemVkUHJvcHM9YS5wcm9wcyxiLm1lbW9pemVkU3RhdGU9YS5zdGF0ZSk7cmV0dXJuIGIuY2hpbGR9fX1cbnZhciBNZj1TZS5yZWNvbmNpbGVDaGlsZEZpYmVycyxOZj1SLnBvcENvbnRleHRQcm92aWRlcixPZj1SLnBvcFRvcExldmVsQ29udGV4dE9iamVjdCxQZj1FLkluZGV0ZXJtaW5hdGVDb21wb25lbnQsUWY9RS5GdW5jdGlvbmFsQ29tcG9uZW50LFJmPUUuQ2xhc3NDb21wb25lbnQsU2Y9RS5Ib3N0Um9vdCxUZj1FLkhvc3RDb21wb25lbnQsVWY9RS5Ib3N0VGV4dCxWZj1FLkhvc3RQb3J0YWwsV2Y9RS5Db3JvdXRpbmVDb21wb25lbnQsWGY9RS5Db3JvdXRpbmVIYW5kbGVyUGhhc2UsWWY9RS5ZaWVsZENvbXBvbmVudCxaZj1FLkZyYWdtZW50LGFnPUouUGxhY2VtZW50LGJnPUouUmVmLGNnPUouVXBkYXRlLGRnPVEuT2Zmc2NyZWVuUHJpb3JpdHk7XG5mdW5jdGlvbiBlZyhhLGIsYyl7dmFyIGQ9YS5jcmVhdGVJbnN0YW5jZSxlPWEuY3JlYXRlVGV4dEluc3RhbmNlLGY9YS5hcHBlbmRJbml0aWFsQ2hpbGQsZz1hLmZpbmFsaXplSW5pdGlhbENoaWxkcmVuLGg9YS5wcmVwYXJlVXBkYXRlLGs9Yi5nZXRSb290SG9zdENvbnRhaW5lcixwPWIucG9wSG9zdENvbnRleHQseD1iLmdldEhvc3RDb250ZXh0LFM9Yi5wb3BIb3N0Q29udGFpbmVyLEQ9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlLHk9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSxCPWMucG9wSHlkcmF0aW9uU3RhdGU7cmV0dXJue2NvbXBsZXRlV29yazpmdW5jdGlvbihhLGIsYyl7dmFyIHI9Yi5wZW5kaW5nUHJvcHM7aWYobnVsbD09PXIpcj1iLm1lbW9pemVkUHJvcHM7ZWxzZSBpZihiLnBlbmRpbmdXb3JrUHJpb3JpdHkhPT1kZ3x8Yz09PWRnKWIucGVuZGluZ1Byb3BzPW51bGw7c3dpdGNoKGIudGFnKXtjYXNlIFFmOnJldHVybiBudWxsO2Nhc2UgUmY6cmV0dXJuIE5mKGIpLFxubnVsbDtjYXNlIFNmOlMoYik7T2YoYik7cj1iLnN0YXRlTm9kZTtyLnBlbmRpbmdDb250ZXh0JiYoci5jb250ZXh0PXIucGVuZGluZ0NvbnRleHQsci5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpQihiKSxiLmVmZmVjdFRhZyY9fmFnO3JldHVybiBudWxsO2Nhc2UgVGY6cChiKTtjPWsoKTt2YXIgbT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXt2YXIgdD1hLm1lbW9pemVkUHJvcHMsQz1iLnN0YXRlTm9kZSxWPXgoKTtyPWgoQyxtLHQscixjLFYpO2lmKGIudXBkYXRlUXVldWU9ciliLmVmZmVjdFRhZ3w9Y2c7YS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1iZyl9ZWxzZXtpZighcilyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP3coXCIxNjZcIik6dm9pZCAwLG51bGw7YT14KCk7aWYoQihiKSlEKGIsYyxhKSYmKGIuZWZmZWN0VGFnfD1jZyk7ZWxzZXthPWQobSxyLGMsYSxiKTthOmZvcih0PWIuY2hpbGQ7bnVsbCE9PVxudDspe2lmKHQudGFnPT09VGZ8fHQudGFnPT09VWYpZihhLHQuc3RhdGVOb2RlKTtlbHNlIGlmKHQudGFnIT09VmYmJm51bGwhPT10LmNoaWxkKXt0PXQuY2hpbGQ7Y29udGludWV9aWYodD09PWIpYnJlYWsgYTtmb3IoO251bGw9PT10LnNpYmxpbmc7KXtpZihudWxsPT09dFtcInJldHVyblwiXXx8dFtcInJldHVyblwiXT09PWIpYnJlYWsgYTt0PXRbXCJyZXR1cm5cIl19dD10LnNpYmxpbmd9ZyhhLG0scixjKSYmKGIuZWZmZWN0VGFnfD1jZyk7Yi5zdGF0ZU5vZGU9YX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9YmcpfXJldHVybiBudWxsO2Nhc2UgVWY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpYS5tZW1vaXplZFByb3BzIT09ciYmKGIuZWZmZWN0VGFnfD1jZyk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIHIpcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT93KFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9aygpO2M9eCgpO0IoYik/eShiKSYmKGIuZWZmZWN0VGFnfD1jZyk6Yi5zdGF0ZU5vZGU9XG5lKHIsYSxjLGIpfXJldHVybiBudWxsO2Nhc2UgV2Y6KHI9Yi5tZW1vaXplZFByb3BzKT92b2lkIDA6dyhcIjE2NVwiKTtiLnRhZz1YZjtjPVtdO2E6Zm9yKChtPWIuc3RhdGVOb2RlKSYmKG1bXCJyZXR1cm5cIl09Yik7bnVsbCE9PW07KXtpZihtLnRhZz09PVRmfHxtLnRhZz09PVVmfHxtLnRhZz09PVZmKXcoXCIxNjRcIik7ZWxzZSBpZihtLnRhZz09PVlmKWMucHVzaChtLnR5cGUpO2Vsc2UgaWYobnVsbCE9PW0uY2hpbGQpe20uY2hpbGRbXCJyZXR1cm5cIl09bTttPW0uY2hpbGQ7Y29udGludWV9Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW1bXCJyZXR1cm5cIl18fG1bXCJyZXR1cm5cIl09PT1iKWJyZWFrIGE7bT1tW1wicmV0dXJuXCJdfW0uc2libGluZ1tcInJldHVyblwiXT1tW1wicmV0dXJuXCJdO209bS5zaWJsaW5nfW09ci5oYW5kbGVyO3I9bShyLnByb3BzLGMpO2IuY2hpbGQ9TWYoYixudWxsIT09YT9hLmNoaWxkOm51bGwscixiLnBlbmRpbmdXb3JrUHJpb3JpdHkpO3JldHVybiBiLmNoaWxkO1xuY2FzZSBYZjpyZXR1cm4gYi50YWc9V2YsbnVsbDtjYXNlIFlmOnJldHVybiBudWxsO2Nhc2UgWmY6cmV0dXJuIG51bGw7Y2FzZSBWZjpyZXR1cm4gYi5lZmZlY3RUYWd8PWNnLFMoYiksbnVsbDtjYXNlIFBmOncoXCIxNjdcIik7ZGVmYXVsdDp3KFwiMTU2XCIpfX19fXZhciBmZz1udWxsLGdnPW51bGw7ZnVuY3Rpb24gaGcoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbnZhciBpZz17aW5qZWN0SW50ZXJuYWxzOmZ1bmN0aW9uKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtmZz1oZyhmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7Z2c9aGcoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH0sb25Db21taXRSb290OmZ1bmN0aW9uKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmZyYmZmcoYSl9LG9uQ29tbWl0VW5tb3VudDpmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZ2cmJmdnKGEpfX0samc9RS5DbGFzc0NvbXBvbmVudCxrZz1FLkhvc3RSb290LGxnPUUuSG9zdENvbXBvbmVudCxtZz1FLkhvc3RUZXh0LG5nPVxuRS5Ib3N0UG9ydGFsLG9nPUUuQ29yb3V0aW5lQ29tcG9uZW50LHBnPXVkLmNvbW1pdENhbGxiYWNrcyxxZz1pZy5vbkNvbW1pdFVubW91bnQscmc9Si5QbGFjZW1lbnQsc2c9Si5VcGRhdGUsdGc9Si5DYWxsYmFjayx1Zz1KLkNvbnRlbnRSZXNldDtcbmZ1bmN0aW9uIHZnKGEsYil7ZnVuY3Rpb24gYyhhKXt2YXIgYz1hLnJlZjtpZihudWxsIT09Yyl0cnl7YyhudWxsKX1jYXRjaCh0KXtiKGEsdCl9fWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGEudGFnPT09bGd8fGEudGFnPT09a2d8fGEudGFnPT09bmd9ZnVuY3Rpb24gZShhKXtmb3IodmFyIGI9YTs7KWlmKGcoYiksbnVsbCE9PWIuY2hpbGQmJmIudGFnIT09bmcpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX1mdW5jdGlvbiBmKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZj12b2lkIDA7Oyl7aWYoIWMpe2M9YltcInJldHVyblwiXTthOmZvcig7Oyl7bnVsbD09PWM/dyhcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIGxnOmQ9XG5jLnN0YXRlTm9kZTtmPSExO2JyZWFrIGE7Y2FzZSBrZzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2Ugbmc6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yz0hMH1pZihiLnRhZz09PWxnfHxiLnRhZz09PW1nKWUoYiksZj9DKGQsYi5zdGF0ZU5vZGUpOkgoZCxiLnN0YXRlTm9kZSk7ZWxzZSBpZihiLnRhZz09PW5nP2Q9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpnKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkW1wicmV0dXJuXCJdPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdO2IudGFnPT09bmcmJihjPSExKX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319ZnVuY3Rpb24gZyhhKXtcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBxZyYmcWcoYSk7c3dpdGNoKGEudGFnKXtjYXNlIGpnOmMoYSk7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2QucHJvcHM9YS5tZW1vaXplZFByb3BzLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaCh0KXtiKGEsdCl9YnJlYWs7Y2FzZSBsZzpjKGEpO2JyZWFrO2Nhc2Ugb2c6ZShhLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSBuZzpmKGEpfX12YXIgaD1hLmNvbW1pdE1vdW50LGs9YS5jb21taXRVcGRhdGUscD1hLnJlc2V0VGV4dENvbnRlbnQseD1hLmNvbW1pdFRleHRVcGRhdGUsUz1hLmFwcGVuZENoaWxkLEQ9YS5hcHBlbmRDaGlsZFRvQ29udGFpbmVyLHk9YS5pbnNlcnRCZWZvcmUsQj1hLmluc2VydEluQ29udGFpbmVyQmVmb3JlLEg9YS5yZW1vdmVDaGlsZCxDPWEucmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyLENhPWEuZ2V0UHVibGljSW5zdGFuY2U7XG5yZXR1cm57Y29tbWl0UGxhY2VtZW50OmZ1bmN0aW9uKGEpe2E6e2Zvcih2YXIgYj1hW1wicmV0dXJuXCJdO251bGwhPT1iOyl7aWYoZChiKSl7dmFyIGM9YjticmVhayBhfWI9YltcInJldHVyblwiXX13KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBlPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSBsZzpiPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWs7Y2FzZSBrZzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhaztjYXNlIG5nOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrO2RlZmF1bHQ6dyhcIjE2MVwiKX1jLmVmZmVjdFRhZyZ1ZyYmKHAoYiksYy5lZmZlY3RUYWcmPX51Zyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWNbXCJyZXR1cm5cIl18fGQoY1tcInJldHVyblwiXSkpe2M9bnVsbDticmVhayBhfWM9Y1tcInJldHVyblwiXX1jLnNpYmxpbmdbXCJyZXR1cm5cIl09Y1tcInJldHVyblwiXTtmb3IoYz1jLnNpYmxpbmc7Yy50YWchPT1cbmxnJiZjLnRhZyE9PW1nOyl7aWYoYy5lZmZlY3RUYWcmcmcpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8Yy50YWc9PT1uZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZFtcInJldHVyblwiXT1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJnJnKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGY9YTs7KXtpZihmLnRhZz09PWxnfHxmLnRhZz09PW1nKWM/ZT9CKGIsZi5zdGF0ZU5vZGUsYyk6eShiLGYuc3RhdGVOb2RlLGMpOmU/RChiLGYuc3RhdGVOb2RlKTpTKGIsZi5zdGF0ZU5vZGUpO2Vsc2UgaWYoZi50YWchPT1uZyYmbnVsbCE9PWYuY2hpbGQpe2YuY2hpbGRbXCJyZXR1cm5cIl09ZjtmPWYuY2hpbGQ7Y29udGludWV9aWYoZj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Zi5zaWJsaW5nOyl7aWYobnVsbD09PWZbXCJyZXR1cm5cIl18fGZbXCJyZXR1cm5cIl09PT1hKXJldHVybjtmPWZbXCJyZXR1cm5cIl19Zi5zaWJsaW5nW1wicmV0dXJuXCJdPWZbXCJyZXR1cm5cIl07Zj1mLnNpYmxpbmd9fSxcbmNvbW1pdERlbGV0aW9uOmZ1bmN0aW9uKGEpe2YoYSk7YVtcInJldHVyblwiXT1udWxsO2EuY2hpbGQ9bnVsbDthLmFsdGVybmF0ZSYmKGEuYWx0ZXJuYXRlLmNoaWxkPW51bGwsYS5hbHRlcm5hdGVbXCJyZXR1cm5cIl09bnVsbCl9LGNvbW1pdFdvcms6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2Ugamc6YnJlYWs7Y2FzZSBsZzp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmayhjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSBtZzpudWxsPT09Yi5zdGF0ZU5vZGU/dyhcIjE2MlwiKTp2b2lkIDA7Yz1iLm1lbW9pemVkUHJvcHM7eChiLnN0YXRlTm9kZSxudWxsIT09YT9hLm1lbW9pemVkUHJvcHM6YyxjKTticmVhaztjYXNlIGtnOmJyZWFrO2Nhc2Ugbmc6YnJlYWs7ZGVmYXVsdDp3KFwiMTYzXCIpfX0sXG5jb21taXRMaWZlQ3ljbGVzOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIGpnOnZhciBjPWIuc3RhdGVOb2RlO2lmKGIuZWZmZWN0VGFnJnNnKWlmKG51bGw9PT1hKWMucHJvcHM9Yi5tZW1vaXplZFByb3BzLGMuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWEubWVtb2l6ZWRQcm9wczthPWEubWVtb2l6ZWRTdGF0ZTtjLnByb3BzPWIubWVtb2l6ZWRQcm9wcztjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTtjLmNvbXBvbmVudERpZFVwZGF0ZShkLGEpfWIuZWZmZWN0VGFnJnRnJiZudWxsIT09Yi51cGRhdGVRdWV1ZSYmcGcoYixiLnVwZGF0ZVF1ZXVlLGMpO2JyZWFrO2Nhc2Uga2c6YT1iLnVwZGF0ZVF1ZXVlO251bGwhPT1hJiZwZyhiLGEsYi5jaGlsZCYmYi5jaGlsZC5zdGF0ZU5vZGUpO2JyZWFrO2Nhc2UgbGc6Yz1iLnN0YXRlTm9kZTtudWxsPT09YSYmYi5lZmZlY3RUYWcmc2cmJmgoYyxiLnR5cGUsYi5tZW1vaXplZFByb3BzLFxuYik7YnJlYWs7Y2FzZSBtZzpicmVhaztjYXNlIG5nOmJyZWFrO2RlZmF1bHQ6dyhcIjE2M1wiKX19LGNvbW1pdEF0dGFjaFJlZjpmdW5jdGlvbihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIGxnOmIoQ2EoYykpO2JyZWFrO2RlZmF1bHQ6YihjKX19fSxjb21taXREZXRhY2hSZWY6ZnVuY3Rpb24oYSl7YT1hLnJlZjtudWxsIT09YSYmYShudWxsKX19fXZhciB3Zz14ZC5jcmVhdGVDdXJzb3IseGc9eGQucG9wLHlnPXhkLnB1c2gsemc9e307XG5mdW5jdGlvbiBBZyhhKXtmdW5jdGlvbiBiKGEpe2E9PT16Zz93KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX12YXIgYz1hLmdldENoaWxkSG9zdENvbnRleHQsZD1hLmdldFJvb3RIb3N0Q29udGV4dCxlPXdnKHpnKSxmPXdnKHpnKSxnPXdnKHpnKTtyZXR1cm57Z2V0SG9zdENvbnRleHQ6ZnVuY3Rpb24oKXtyZXR1cm4gYihlLmN1cnJlbnQpfSxnZXRSb290SG9zdENvbnRhaW5lcjpmdW5jdGlvbigpe3JldHVybiBiKGcuY3VycmVudCl9LHBvcEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSl7eGcoZSxhKTt4ZyhmLGEpO3hnKGcsYSl9LHBvcEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe2YuY3VycmVudD09PWEmJih4ZyhlLGEpLHhnKGYsYSkpfSxwdXNoSG9zdENvbnRhaW5lcjpmdW5jdGlvbihhLGIpe3lnKGcsYixhKTtiPWQoYik7eWcoZixhLGEpO3lnKGUsYixhKX0scHVzaEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBkPWIoZy5jdXJyZW50KSxoPWIoZS5jdXJyZW50KTtkPWMoaCxhLnR5cGUsXG5kKTtoIT09ZCYmKHlnKGYsYSxhKSx5ZyhlLGQsYSkpfSxyZXNldEhvc3RDb250YWluZXI6ZnVuY3Rpb24oKXtlLmN1cnJlbnQ9emc7Zy5jdXJyZW50PXpnfX19dmFyIEJnPUUuSG9zdENvbXBvbmVudCxDZz1FLkhvc3RUZXh0LERnPUUuSG9zdFJvb3QsRWc9Si5EZWxldGlvbixGZz1KLlBsYWNlbWVudCxHZz1kZS5jcmVhdGVGaWJlckZyb21Ib3N0SW5zdGFuY2VGb3JEZWxldGlvbjtcbmZ1bmN0aW9uIEhnKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz1HZygpO2Muc3RhdGVOb2RlPWI7Y1tcInJldHVyblwiXT1hO2MuZWZmZWN0VGFnPUVnO251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gYyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSBCZzpyZXR1cm4gZihiLGEudHlwZSxhLnBlbmRpbmdQcm9wcyk7Y2FzZSBDZzpyZXR1cm4gZyhiLGEucGVuZGluZ1Byb3BzKTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBkKGEpe2ZvcihhPWFbXCJyZXR1cm5cIl07bnVsbCE9PWEmJmEudGFnIT09QmcmJmEudGFnIT09RGc7KWE9YVtcInJldHVyblwiXTt5PWF9dmFyIGU9YS5zaG91bGRTZXRUZXh0Q29udGVudCxmPWEuY2FuSHlkcmF0ZUluc3RhbmNlLGc9YS5jYW5IeWRyYXRlVGV4dEluc3RhbmNlLGg9YS5nZXROZXh0SHlkcmF0YWJsZVNpYmxpbmcsaz1hLmdldEZpcnN0SHlkcmF0YWJsZUNoaWxkLFxucD1hLmh5ZHJhdGVJbnN0YW5jZSx4PWEuaHlkcmF0ZVRleHRJbnN0YW5jZSxTPWEuZGlkTm90SHlkcmF0ZUluc3RhbmNlLEQ9YS5kaWROb3RGaW5kSHlkcmF0YWJsZUluc3RhbmNlO2E9YS5kaWROb3RGaW5kSHlkcmF0YWJsZVRleHRJbnN0YW5jZTtpZighKGYmJmcmJmgmJmsmJnAmJngmJlMmJkQmJmEpKXJldHVybntlbnRlckh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt9LHRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKCl7dyhcIjE3NVwiKX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt3KFwiMTc2XCIpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfX07dmFyIHk9bnVsbCxCPW51bGwsSD0hMTtyZXR1cm57ZW50ZXJIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXtCPVxuayhhLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTt5PWE7cmV0dXJuIEg9ITB9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXtCPXk9bnVsbDtIPSExfSx0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbihhKXtpZihIKXt2YXIgZD1CO2lmKGQpe2lmKCFjKGEsZCkpe2Q9aChkKTtpZighZHx8IWMoYSxkKSl7YS5lZmZlY3RUYWd8PUZnO0g9ITE7eT1hO3JldHVybn1iKHksQil9YS5zdGF0ZU5vZGU9ZDt5PWE7Qj1rKGQpfWVsc2UgYS5lZmZlY3RUYWd8PUZnLEg9ITEseT1hfX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7Yj1wKGEuc3RhdGVOb2RlLGEudHlwZSxhLm1lbW9pemVkUHJvcHMsYixjLGEpO2EudXBkYXRlUXVldWU9YjtyZXR1cm4gbnVsbCE9PWI/ITA6ITF9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiB4KGEuc3RhdGVOb2RlLGEubWVtb2l6ZWRQcm9wcyxhKX0sXG5wb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXtpZihhIT09eSlyZXR1cm4hMTtpZighSClyZXR1cm4gZChhKSxIPSEwLCExO3ZhciBjPWEudHlwZTtpZihhLnRhZyE9PUJnfHxcImhlYWRcIiE9PWMmJlwiYm9keVwiIT09YyYmIWUoYyxhLm1lbW9pemVkUHJvcHMpKWZvcihjPUI7YzspYihhLGMpLGM9aChjKTtkKGEpO0I9eT9oKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfX19XG52YXIgSWc9Ui5wb3BDb250ZXh0UHJvdmlkZXIsSmc9eGQucmVzZXQsS2c9UWEuUmVhY3RDdXJyZW50T3duZXIsTGc9ZGUuY3JlYXRlV29ya0luUHJvZ3Jlc3MsTWc9ZGUubGFyZ2VyUHJpb3JpdHksTmc9aWcub25Db21taXRSb290LFQ9US5Ob1dvcmssT2c9US5TeW5jaHJvbm91c1ByaW9yaXR5LFU9US5UYXNrUHJpb3JpdHksUGc9US5IaWdoUHJpb3JpdHksUWc9US5Mb3dQcmlvcml0eSxSZz1RLk9mZnNjcmVlblByaW9yaXR5LFNnPVBkLkFzeW5jVXBkYXRlcyxUZz1KLlBlcmZvcm1lZFdvcmssVWc9Si5QbGFjZW1lbnQsVmc9Si5VcGRhdGUsV2c9Si5QbGFjZW1lbnRBbmRVcGRhdGUsWGc9Si5EZWxldGlvbixZZz1KLkNvbnRlbnRSZXNldCxaZz1KLkNhbGxiYWNrLCRnPUouRXJyLGFoPUouUmVmLGJoPUUuSG9zdFJvb3QsY2g9RS5Ib3N0Q29tcG9uZW50LGRoPUUuSG9zdFBvcnRhbCxlaD1FLkNsYXNzQ29tcG9uZW50LGZoPXVkLmdldFVwZGF0ZVByaW9yaXR5LGdoPVIucmVzZXRDb250ZXh0O1xuZnVuY3Rpb24gaGgoYSl7ZnVuY3Rpb24gYigpe2Zvcig7bnVsbCE9PW1hJiZtYS5jdXJyZW50LnBlbmRpbmdXb3JrUHJpb3JpdHk9PT1UOyl7bWEuaXNTY2hlZHVsZWQ9ITE7dmFyIGE9bWEubmV4dFNjaGVkdWxlZFJvb3Q7bWEubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtpZihtYT09PXpiKXJldHVybiB6Yj1tYT1udWxsLHo9VCxudWxsO21hPWF9YT1tYTtmb3IodmFyIGI9bnVsbCxjPVQ7bnVsbCE9PWE7KWEuY3VycmVudC5wZW5kaW5nV29ya1ByaW9yaXR5IT09VCYmKGM9PT1UfHxjPmEuY3VycmVudC5wZW5kaW5nV29ya1ByaW9yaXR5KSYmKGM9YS5jdXJyZW50LnBlbmRpbmdXb3JrUHJpb3JpdHksYj1hKSxhPWEubmV4dFNjaGVkdWxlZFJvb3Q7bnVsbCE9PWI/KHo9YyxKZygpLGdoKCksdCgpLEk9TGcoYi5jdXJyZW50LGMpLGIhPT1uYyYmKG9jPTAsbmM9YikpOih6PVQsbmM9ST1udWxsKX1mdW5jdGlvbiBjKGMpe0hkPSEwO25hPW51bGw7dmFyIGQ9Yy5zdGF0ZU5vZGU7ZC5jdXJyZW50PT09XG5jP3coXCIxNzdcIik6dm9pZCAwO3ohPT1PZyYmeiE9PVV8fG9jKys7S2cuY3VycmVudD1udWxsO2lmKGMuZWZmZWN0VGFnPlRnKWlmKG51bGwhPT1jLmxhc3RFZmZlY3Qpe2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWM7dmFyIGU9Yy5maXJzdEVmZmVjdH1lbHNlIGU9YztlbHNlIGU9Yy5maXJzdEVmZmVjdDtVaSgpO2Zvcih1PWU7bnVsbCE9PXU7KXt2YXIgZj0hMSxnPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dTspe3ZhciBoPXUuZWZmZWN0VGFnO2gmWWcmJmEucmVzZXRUZXh0Q29udGVudCh1LnN0YXRlTm9kZSk7aWYoaCZhaCl7dmFyIGs9dS5hbHRlcm5hdGU7bnVsbCE9PWsmJlBoKGspfXN3aXRjaChoJn4oWmd8JGd8WWd8YWh8VGcpKXtjYXNlIFVnOnEodSk7dS5lZmZlY3RUYWcmPX5VZzticmVhaztjYXNlIFdnOnEodSk7dS5lZmZlY3RUYWcmPX5VZzt2Zih1LmFsdGVybmF0ZSx1KTticmVhaztjYXNlIFZnOnZmKHUuYWx0ZXJuYXRlLHUpO2JyZWFrO2Nhc2UgWGc6SWQ9ITAsTWgodSksXG5JZD0hMX11PXUubmV4dEVmZmVjdH19Y2F0Y2goSmQpe2Y9ITAsZz1KZH1mJiYobnVsbD09PXU/dyhcIjE3OFwiKTp2b2lkIDAseCh1LGcpLG51bGwhPT11JiYodT11Lm5leHRFZmZlY3QpKX1WaSgpO2QuY3VycmVudD1jO2Zvcih1PWU7bnVsbCE9PXU7KXtkPSExO2U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT11Oyl7dmFyIEdkPXUuZWZmZWN0VGFnO0dkJihWZ3xaZykmJk5oKHUuYWx0ZXJuYXRlLHUpO0dkJmFoJiZPaCh1KTtpZihHZCYkZylzd2l0Y2goZj11LGc9dm9pZCAwLG51bGwhPT1QJiYoZz1QLmdldChmKSxQW1wiZGVsZXRlXCJdKGYpLG51bGw9PWcmJm51bGwhPT1mLmFsdGVybmF0ZSYmKGY9Zi5hbHRlcm5hdGUsZz1QLmdldChmKSxQW1wiZGVsZXRlXCJdKGYpKSksbnVsbD09Zz93KFwiMTg0XCIpOnZvaWQgMCxmLnRhZyl7Y2FzZSBlaDpmLnN0YXRlTm9kZS5jb21wb25lbnREaWRDYXRjaChnLmVycm9yLHtjb21wb25lbnRTdGFjazpnLmNvbXBvbmVudFN0YWNrfSk7YnJlYWs7Y2FzZSBiaDpudWxsPT09XG5KYSYmKEphPWcuZXJyb3IpO2JyZWFrO2RlZmF1bHQ6dyhcIjE1N1wiKX12YXIgbT11Lm5leHRFZmZlY3Q7dS5uZXh0RWZmZWN0PW51bGw7dT1tfX1jYXRjaChKZCl7ZD0hMCxlPUpkfWQmJihudWxsPT09dT93KFwiMTc4XCIpOnZvaWQgMCx4KHUsZSksbnVsbCE9PXUmJih1PXUubmV4dEVmZmVjdCkpfUhkPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBOZyYmTmcoYy5zdGF0ZU5vZGUpO3ZhJiYodmEuZm9yRWFjaChIKSx2YT1udWxsKTtiKCl9ZnVuY3Rpb24gZChhKXtmb3IoOzspe3ZhciBiPUxoKGEuYWx0ZXJuYXRlLGEseiksYz1hW1wicmV0dXJuXCJdLGQ9YS5zaWJsaW5nO3ZhciBlPWE7aWYoIShlLnBlbmRpbmdXb3JrUHJpb3JpdHkhPT1UJiZlLnBlbmRpbmdXb3JrUHJpb3JpdHk+eikpe2Zvcih2YXIgZj1maChlKSxnPWUuY2hpbGQ7bnVsbCE9PWc7KWY9TWcoZixnLnBlbmRpbmdXb3JrUHJpb3JpdHkpLGc9Zy5zaWJsaW5nO2UucGVuZGluZ1dvcmtQcmlvcml0eT1mfWlmKG51bGwhPT1iKXJldHVybiBiO1xubnVsbCE9PWMmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSxhLmVmZmVjdFRhZz5UZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZXtuYT1hO2JyZWFrfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBlKGEpe3ZhciBiPVYoYS5hbHRlcm5hdGUsYSx6KTtudWxsPT09YiYmKGI9ZChhKSk7S2cuY3VycmVudD1udWxsO3JldHVybiBifWZ1bmN0aW9uIGYoYSl7dmFyIGI9bGQoYS5hbHRlcm5hdGUsYSx6KTtudWxsPT09YiYmKGI9ZChhKSk7S2cuY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gZyhhKXtwKFJnLGEpfWZ1bmN0aW9uIGgoKXtpZihudWxsIT09UCYmMDxQLnNpemUmJno9PT1VKWZvcig7bnVsbCE9PUk7KXt2YXIgYT1JO0k9bnVsbCE9PVAmJihQLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZQLmhhcyhhLmFsdGVybmF0ZSkpP2YoSSk6ZShJKTtpZihudWxsPT09SSYmKG51bGw9PT1uYT93KFwiMTc5XCIpOnZvaWQgMCxPPVUsYyhuYSksTz16LG51bGw9PT1QfHwwPT09UC5zaXplfHx6IT09VSkpYnJlYWt9fWZ1bmN0aW9uIGsoYSxkKXtudWxsIT09bmE/KE89VSxjKG5hKSxoKCkpOm51bGw9PT1JJiZiKCk7aWYoISh6PT09VHx8ej5hKSl7Tz16O2E6ZG97aWYoejw9VSlmb3IoO251bGwhPT1JJiYhKEk9ZShJKSxudWxsPT09SSYmKG51bGw9PT1uYT93KFwiMTc5XCIpOnZvaWQgMCxPPVUsYyhuYSksTz16LGgoKSx6PT09VHx8ej5hfHx6PlUpKTspO2Vsc2UgaWYobnVsbCE9PWQpZm9yKDtudWxsIT09SSYmIUFiOylpZigxPGQudGltZVJlbWFpbmluZygpKXtpZihJPVxuZShJKSxudWxsPT09SSlpZihudWxsPT09bmE/dyhcIjE3OVwiKTp2b2lkIDAsMTxkLnRpbWVSZW1haW5pbmcoKSl7aWYoTz1VLGMobmEpLE89eixoKCksej09PVR8fHo+YXx8ejxQZylicmVha31lbHNlIEFiPSEwfWVsc2UgQWI9ITA7c3dpdGNoKHope2Nhc2UgT2c6Y2FzZSBVOmlmKHo8PWEpY29udGludWUgYTticmVhayBhO2Nhc2UgUGc6Y2FzZSBRZzpjYXNlIFJnOmlmKG51bGw9PT1kKWJyZWFrIGE7aWYoIUFiJiZ6PD1hKWNvbnRpbnVlIGE7YnJlYWsgYTtjYXNlIFQ6YnJlYWsgYTtkZWZhdWx0OncoXCIxODFcIil9fXdoaWxlKDEpfX1mdW5jdGlvbiBwKGEsYil7RGE/dyhcIjE4MlwiKTp2b2lkIDA7RGE9ITA7dmFyIGM9TyxkPSExLGU9bnVsbDt0cnl7ayhhLGIpfWNhdGNoKEtkKXtkPSEwLGU9S2R9Zm9yKDtkOyl7aWYoWWEpe0phPWU7YnJlYWt9dmFyIGg9STtpZihudWxsPT09aClZYT0hMDtlbHNle3ZhciBwPXgoaCxlKTtudWxsPT09cD93KFwiMTgzXCIpOnZvaWQgMDtpZighWWEpe3RyeXtkPVxucDtlPWE7cD1iO2Zvcih2YXIgcT1kO251bGwhPT1oOyl7c3dpdGNoKGgudGFnKXtjYXNlIGVoOklnKGgpO2JyZWFrO2Nhc2UgY2g6bShoKTticmVhaztjYXNlIGJoOnIoaCk7YnJlYWs7Y2FzZSBkaDpyKGgpfWlmKGg9PT1xfHxoLmFsdGVybmF0ZT09PXEpYnJlYWs7aD1oW1wicmV0dXJuXCJdfUk9ZihkKTtrKGUscCl9Y2F0Y2goS2Qpe2Q9ITA7ZT1LZDtjb250aW51ZX1icmVha319fU89YztudWxsIT09YiYmKEJiPSExKTt6PlUmJiFCYiYmKCRmKGcpLEJiPSEwKTthPUphO1lhPUFiPURhPSExO25jPUthPVA9SmE9bnVsbDtvYz0wO2lmKG51bGwhPT1hKXRocm93IGE7fWZ1bmN0aW9uIHgoYSxiKXt2YXIgYz1LZy5jdXJyZW50PW51bGwsZD0hMSxlPSExLGY9bnVsbDtpZihhLnRhZz09PWJoKWM9YSxTKGEpJiYoWWE9ITApO2Vsc2UgZm9yKHZhciBnPWFbXCJyZXR1cm5cIl07bnVsbCE9PWcmJm51bGw9PT1jOyl7Zy50YWc9PT1laD9cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2gmJlxuKGQ9ITAsZj1SYShnKSxjPWcsZT0hMCk6Zy50YWc9PT1iaCYmKGM9Zyk7aWYoUyhnKSl7aWYoSWR8fG51bGwhPT12YSYmKHZhLmhhcyhnKXx8bnVsbCE9PWcuYWx0ZXJuYXRlJiZ2YS5oYXMoZy5hbHRlcm5hdGUpKSlyZXR1cm4gbnVsbDtjPW51bGw7ZT0hMX1nPWdbXCJyZXR1cm5cIl19aWYobnVsbCE9PWMpe251bGw9PT1LYSYmKEthPW5ldyBTZXQpO0thLmFkZChjKTt2YXIgaD1cIlwiO2c9YTtkb3thOnN3aXRjaChnLnRhZyl7Y2FzZSBmZTpjYXNlIGdlOmNhc2UgaGU6Y2FzZSBpZTp2YXIgaz1nLl9kZWJ1Z093bmVyLG09Zy5fZGVidWdTb3VyY2U7dmFyIHA9UmEoZyk7dmFyIHE9bnVsbDtrJiYocT1SYShrKSk7az1tO3A9XCJcXG4gICAgaW4gXCIrKHB8fFwiVW5rbm93blwiKSsoaz9cIiAoYXQgXCIray5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLFwiXCIpK1wiOlwiK2subGluZU51bWJlcitcIilcIjpxP1wiIChjcmVhdGVkIGJ5IFwiK3ErXCIpXCI6XCJcIik7YnJlYWsgYTtkZWZhdWx0OnA9XCJcIn1oKz1wO2c9Z1tcInJldHVyblwiXX13aGlsZShnKTtcbmc9aDthPVJhKGEpO251bGw9PT1QJiYoUD1uZXcgTWFwKTtiPXtjb21wb25lbnROYW1lOmEsY29tcG9uZW50U3RhY2s6ZyxlcnJvcjpiLGVycm9yQm91bmRhcnk6ZD9jLnN0YXRlTm9kZTpudWxsLGVycm9yQm91bmRhcnlGb3VuZDpkLGVycm9yQm91bmRhcnlOYW1lOmYsd2lsbFJldHJ5OmV9O1Auc2V0KGMsYik7dHJ5e2NvbnNvbGUuZXJyb3IoYi5lcnJvcil9Y2F0Y2goV2kpe2NvbnNvbGUuZXJyb3IoV2kpfUhkPyhudWxsPT09dmEmJih2YT1uZXcgU2V0KSx2YS5hZGQoYykpOkgoYyk7cmV0dXJuIGN9bnVsbD09PUphJiYoSmE9Yik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gUyhhKXtyZXR1cm4gbnVsbCE9PUthJiYoS2EuaGFzKGEpfHxudWxsIT09YS5hbHRlcm5hdGUmJkthLmhhcyhhLmFsdGVybmF0ZSkpfWZ1bmN0aW9uIEQoYSxiKXtyZXR1cm4geShhLGIsITEpfWZ1bmN0aW9uIHkoYSxiKXtvYz5YaSYmKFlhPSEwLHcoXCIxODVcIikpOyFEYSYmYjw9eiYmKEk9bnVsbCk7Zm9yKHZhciBjPVxuITA7bnVsbCE9PWEmJmM7KXtjPSExO2lmKGEucGVuZGluZ1dvcmtQcmlvcml0eT09PVR8fGEucGVuZGluZ1dvcmtQcmlvcml0eT5iKWM9ITAsYS5wZW5kaW5nV29ya1ByaW9yaXR5PWI7bnVsbCE9PWEuYWx0ZXJuYXRlJiYoYS5hbHRlcm5hdGUucGVuZGluZ1dvcmtQcmlvcml0eT09PVR8fGEuYWx0ZXJuYXRlLnBlbmRpbmdXb3JrUHJpb3JpdHk+YikmJihjPSEwLGEuYWx0ZXJuYXRlLnBlbmRpbmdXb3JrUHJpb3JpdHk9Yik7aWYobnVsbD09PWFbXCJyZXR1cm5cIl0paWYoYS50YWc9PT1iaCl7dmFyIGQ9YS5zdGF0ZU5vZGU7Yj09PVR8fGQuaXNTY2hlZHVsZWR8fChkLmlzU2NoZWR1bGVkPSEwLHpiP3piLm5leHRTY2hlZHVsZWRSb290PWQ6bWE9ZCx6Yj1kKTtpZighRGEpc3dpdGNoKGIpe2Nhc2UgT2c6cGM/cChPZyxudWxsKTpwKFUsbnVsbCk7YnJlYWs7Y2FzZSBVOlc/dm9pZCAwOncoXCIxODZcIik7YnJlYWs7ZGVmYXVsdDpCYnx8KCRmKGcpLEJiPSEwKX19ZWxzZSBicmVhazthPWFbXCJyZXR1cm5cIl19fVxuZnVuY3Rpb24gQihhLGIpe3ZhciBjPU87Yz09PVQmJihjPSFZaXx8YS5pbnRlcm5hbENvbnRleHRUYWcmU2d8fGI/UWc6T2cpO3JldHVybiBjPT09T2cmJihEYXx8Vyk/VTpjfWZ1bmN0aW9uIEgoYSl7eShhLFUsITApfXZhciBDPUFnKGEpLENhPUhnKGEpLHI9Qy5wb3BIb3N0Q29udGFpbmVyLG09Qy5wb3BIb3N0Q29udGV4dCx0PUMucmVzZXRIb3N0Q29udGFpbmVyLHY9TGYoYSxDLENhLEQsQiksVj12LmJlZ2luV29yayxsZD12LmJlZ2luRmFpbGVkV29yayxMaD1lZyhhLEMsQ2EpLmNvbXBsZXRlV29yaztDPXZnKGEseCk7dmFyIHE9Qy5jb21taXRQbGFjZW1lbnQsTWg9Qy5jb21taXREZWxldGlvbix2Zj1DLmNvbW1pdFdvcmssTmg9Qy5jb21taXRMaWZlQ3ljbGVzLE9oPUMuY29tbWl0QXR0YWNoUmVmLFBoPUMuY29tbWl0RGV0YWNoUmVmLCRmPWEuc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrLFlpPWEudXNlU3luY1NjaGVkdWxpbmcsVWk9YS5wcmVwYXJlRm9yQ29tbWl0LFZpPWEucmVzZXRBZnRlckNvbW1pdCxcbk89VCxEYT0hMSxBYj0hMSxXPSExLHBjPSExLEk9bnVsbCx6PVQsdT1udWxsLG5hPW51bGwsbWE9bnVsbCx6Yj1udWxsLEJiPSExLFA9bnVsbCxLYT1udWxsLHZhPW51bGwsSmE9bnVsbCxZYT0hMSxIZD0hMSxJZD0hMSxYaT0xRTMsb2M9MCxuYz1udWxsO3JldHVybntzY2hlZHVsZVVwZGF0ZTpELGdldFByaW9yaXR5Q29udGV4dDpCLGJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEsYil7dmFyIGM9VztXPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxEYXx8V3x8cChVLG51bGwpfX0sdW5iYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhKXt2YXIgYj1wYyxjPVc7cGM9VztXPSExO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Vz1jLHBjPWJ9fSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSl7dmFyIGI9VyxjPU87Vz0hMDtPPU9nO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Vz1iLE89YyxEYT93KFwiMTg3XCIpOnZvaWQgMCxwKFUsbnVsbCl9fSxkZWZlcnJlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7dmFyIGI9XG5PO089UWc7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtPPWJ9fX19ZnVuY3Rpb24gaWgoKXt3KFwiMTk2XCIpfWZ1bmN0aW9uIGpoKGEpe2lmKCFhKXJldHVybiBkYTthPVBhLmdldChhKTtyZXR1cm5cIm51bWJlclwiPT09dHlwZW9mIGEudGFnP2loKGEpOmEuX3Byb2Nlc3NDaGlsZENvbnRleHQoYS5fY29udGV4dCl9amguX2luamVjdEZpYmVyPWZ1bmN0aW9uKGEpe2loPWF9O3ZhciBraD11ZC5hZGRUb3BMZXZlbFVwZGF0ZSxsaD1SLmZpbmRDdXJyZW50VW5tYXNrZWRDb250ZXh0LG1oPVIuaXNDb250ZXh0UHJvdmlkZXIsbmg9Ui5wcm9jZXNzQ2hpbGRDb250ZXh0LG9oPUUuSG9zdENvbXBvbmVudCxwaD1iYi5maW5kQ3VycmVudEhvc3RGaWJlcixxaD1iYi5maW5kQ3VycmVudEhvc3RGaWJlcldpdGhOb1BvcnRhbHM7amguX2luamVjdEZpYmVyKGZ1bmN0aW9uKGEpe3ZhciBiPWxoKGEpO3JldHVybiBtaChhKT9uaChhLGIsITEpOmJ9KTt2YXIgcmg9Ri5URVhUX05PREU7XG5mdW5jdGlvbiBzaChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdGgoYSxiKXt2YXIgYz1zaChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZihjLm5vZGVUeXBlPT09cmgpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9c2goYyl9fXZhciB1aD1udWxsO2Z1bmN0aW9uIHZoKCl7IXVoJiZsLmNhblVzZURPTSYmKHVoPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIHVofVxudmFyIHdoPXtnZXRPZmZzZXRzOmZ1bmN0aW9uKGEpe3ZhciBiPXdpbmRvdy5nZXRTZWxlY3Rpb24mJndpbmRvdy5nZXRTZWxlY3Rpb24oKTtpZighYnx8MD09PWIucmFuZ2VDb3VudClyZXR1cm4gbnVsbDt2YXIgYz1iLmFuY2hvck5vZGUsZD1iLmFuY2hvck9mZnNldCxlPWIuZm9jdXNOb2RlLGY9Yi5mb2N1c09mZnNldCxnPWIuZ2V0UmFuZ2VBdCgwKTt0cnl7Zy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSxnLmVuZENvbnRhaW5lci5ub2RlVHlwZX1jYXRjaChrKXtyZXR1cm4gbnVsbH1iPWIuYW5jaG9yTm9kZT09PWIuZm9jdXNOb2RlJiZiLmFuY2hvck9mZnNldD09PWIuZm9jdXNPZmZzZXQ/MDpnLnRvU3RyaW5nKCkubGVuZ3RoO3ZhciBoPWcuY2xvbmVSYW5nZSgpO2guc2VsZWN0Tm9kZUNvbnRlbnRzKGEpO2guc2V0RW5kKGcuc3RhcnRDb250YWluZXIsZy5zdGFydE9mZnNldCk7YT1oLnN0YXJ0Q29udGFpbmVyPT09aC5lbmRDb250YWluZXImJmguc3RhcnRPZmZzZXQ9PT1oLmVuZE9mZnNldD9cbjA6aC50b1N0cmluZygpLmxlbmd0aDtnPWErYjtiPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7Yi5zZXRTdGFydChjLGQpO2Iuc2V0RW5kKGUsZik7Yz1iLmNvbGxhcHNlZDtyZXR1cm57c3RhcnQ6Yz9nOmEsZW5kOmM/YTpnfX0sc2V0T2Zmc2V0czpmdW5jdGlvbihhLGIpe2lmKHdpbmRvdy5nZXRTZWxlY3Rpb24pe3ZhciBjPXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxkPWFbdmgoKV0ubGVuZ3RoLGU9TWF0aC5taW4oYi5zdGFydCxkKTtiPXZvaWQgMD09PWIuZW5kP2U6TWF0aC5taW4oYi5lbmQsZCk7IWMuZXh0ZW5kJiZlPmImJihkPWIsYj1lLGU9ZCk7ZD10aChhLGUpO2E9dGgoYSxiKTtpZihkJiZhKXt2YXIgZj1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO2Yuc2V0U3RhcnQoZC5ub2RlLGQub2Zmc2V0KTtjLnJlbW92ZUFsbFJhbmdlcygpO2U+Yj8oYy5hZGRSYW5nZShmKSxjLmV4dGVuZChhLm5vZGUsYS5vZmZzZXQpKTooZi5zZXRFbmQoYS5ub2RlLGEub2Zmc2V0KSxjLmFkZFJhbmdlKGYpKX19fX0sXG54aD1GLkVMRU1FTlRfTk9ERSx5aD17aGFzU2VsZWN0aW9uQ2FwYWJpbGl0aWVzOmZ1bmN0aW9uKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJlwidGV4dFwiPT09YS50eXBlfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX0sZ2V0U2VsZWN0aW9uSW5mb3JtYXRpb246ZnVuY3Rpb24oKXt2YXIgYT1pYSgpO3JldHVybntmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOnloLmhhc1NlbGVjdGlvbkNhcGFiaWxpdGllcyhhKT95aC5nZXRTZWxlY3Rpb24oYSk6bnVsbH19LHJlc3RvcmVTZWxlY3Rpb246ZnVuY3Rpb24oYSl7dmFyIGI9aWEoKSxjPWEuZm9jdXNlZEVsZW07YT1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe3loLmhhc1NlbGVjdGlvbkNhcGFiaWxpdGllcyhjKSYmeWguc2V0U2VsZWN0aW9uKGMsYSk7Yj1cbltdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KWEubm9kZVR5cGU9PT14aCYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7aGEoYyk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fSxnZXRTZWxlY3Rpb246ZnVuY3Rpb24oYSl7cmV0dXJuKFwic2VsZWN0aW9uU3RhcnRcImluIGE/e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTp3aC5nZXRPZmZzZXRzKGEpKXx8e3N0YXJ0OjAsZW5kOjB9fSxzZXRTZWxlY3Rpb246ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLnN0YXJ0LGQ9Yi5lbmQ7dm9pZCAwPT09ZCYmKGQ9Yyk7XCJzZWxlY3Rpb25TdGFydFwiaW4gYT8oYS5zZWxlY3Rpb25TdGFydD1jLGEuc2VsZWN0aW9uRW5kPU1hdGgubWluKGQsYS52YWx1ZS5sZW5ndGgpKTp3aC5zZXRPZmZzZXRzKGEsYil9fSx6aD15aCxcbkFoPUYuRUxFTUVOVF9OT0RFO2Z1bmN0aW9uIEJoKCl7dyhcIjIxMVwiKX1mdW5jdGlvbiBDaCgpe3coXCIyMTJcIil9ZnVuY3Rpb24gRGgoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihhLm5vZGVUeXBlPT09QWgpcmV0dXJuIGE7dmFyIGI9UGEuZ2V0KGEpO2lmKGIpcmV0dXJuXCJudW1iZXJcIj09PXR5cGVvZiBiLnRhZz9CaChiKTpDaChiKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dyhcIjE4OFwiKTp3KFwiMjEzXCIsT2JqZWN0LmtleXMoYSkpfURoLl9pbmplY3RGaWJlcj1mdW5jdGlvbihhKXtCaD1hfTtEaC5faW5qZWN0U3RhY2s9ZnVuY3Rpb24oYSl7Q2g9YX07dmFyIEVoPUUuSG9zdENvbXBvbmVudDtmdW5jdGlvbiBGaChhKXtpZih2b2lkIDAhPT1hLl9ob3N0UGFyZW50KXJldHVybiBhLl9ob3N0UGFyZW50O2lmKFwibnVtYmVyXCI9PT10eXBlb2YgYS50YWcpe2RvIGE9YVtcInJldHVyblwiXTt3aGlsZShhJiZhLnRhZyE9PUVoKTtpZihhKXJldHVybiBhfXJldHVybiBudWxsfVxuZnVuY3Rpb24gR2goYSxiKXtmb3IodmFyIGM9MCxkPWE7ZDtkPUZoKGQpKWMrKztkPTA7Zm9yKHZhciBlPWI7ZTtlPUZoKGUpKWQrKztmb3IoOzA8Yy1kOylhPUZoKGEpLGMtLTtmb3IoOzA8ZC1jOyliPUZoKGIpLGQtLTtmb3IoO2MtLTspe2lmKGE9PT1ifHxhPT09Yi5hbHRlcm5hdGUpcmV0dXJuIGE7YT1GaChhKTtiPUZoKGIpfXJldHVybiBudWxsfVxudmFyIEhoPXtpc0FuY2VzdG9yOmZ1bmN0aW9uKGEsYil7Zm9yKDtiOyl7aWYoYT09PWJ8fGE9PT1iLmFsdGVybmF0ZSlyZXR1cm4hMDtiPUZoKGIpfXJldHVybiExfSxnZXRMb3dlc3RDb21tb25BbmNlc3RvcjpHaCxnZXRQYXJlbnRJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gRmgoYSl9LHRyYXZlcnNlVHdvUGhhc2U6ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1bXTthOylkLnB1c2goYSksYT1GaChhKTtmb3IoYT1kLmxlbmd0aDswPGEtLTspYihkW2FdLFwiY2FwdHVyZWRcIixjKTtmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWIoZFthXSxcImJ1YmJsZWRcIixjKX0sdHJhdmVyc2VFbnRlckxlYXZlOmZ1bmN0aW9uKGEsYixjLGQsZSl7Zm9yKHZhciBmPWEmJmI/R2goYSxiKTpudWxsLGc9W107YSYmYSE9PWY7KWcucHVzaChhKSxhPUZoKGEpO2ZvcihhPVtdO2ImJmIhPT1mOylhLnB1c2goYiksYj1GaChiKTtmb3IoYj0wO2I8Zy5sZW5ndGg7YisrKWMoZ1tiXSxcImJ1YmJsZWRcIixkKTtmb3IoYj1cbmEubGVuZ3RoOzA8Yi0tOyljKGFbYl0sXCJjYXB0dXJlZFwiLGUpfX0sSWg9SmIuZ2V0TGlzdGVuZXI7ZnVuY3Rpb24gSmgoYSxiLGMpe2lmKGI9SWgoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1DYihjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1DYihjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBLaChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZIaC50cmF2ZXJzZVR3b1BoYXNlKGEuX3RhcmdldEluc3QsSmgsYSl9ZnVuY3Rpb24gUWgoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/SGguZ2V0UGFyZW50SW5zdGFuY2UoYik6bnVsbDtIaC50cmF2ZXJzZVR3b1BoYXNlKGIsSmgsYSl9fVxuZnVuY3Rpb24gUmgoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9SWgoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPUNiKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUNiKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBTaChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlJoKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbnZhciBUaD17YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpmdW5jdGlvbihhKXtEYihhLEtoKX0sYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NraXBUYXJnZXQ6ZnVuY3Rpb24oYSl7RGIoYSxRaCl9LGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe0RiKGEsU2gpfSxhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXM6ZnVuY3Rpb24oYSxiLGMsZCl7SGgudHJhdmVyc2VFbnRlckxlYXZlKGMsZCxSaCxhLGIpfX0sWD17X3Jvb3Q6bnVsbCxfc3RhcnRUZXh0Om51bGwsX2ZhbGxiYWNrVGV4dDpudWxsfSxVaD17aW5pdGlhbGl6ZTpmdW5jdGlvbihhKXtYLl9yb290PWE7WC5fc3RhcnRUZXh0PVVoLmdldFRleHQoKTtyZXR1cm4hMH0scmVzZXQ6ZnVuY3Rpb24oKXtYLl9yb290PW51bGw7WC5fc3RhcnRUZXh0PW51bGw7WC5fZmFsbGJhY2tUZXh0PW51bGx9LGdldERhdGE6ZnVuY3Rpb24oKXtpZihYLl9mYWxsYmFja1RleHQpcmV0dXJuIFguX2ZhbGxiYWNrVGV4dDtcbnZhciBhLGI9WC5fc3RhcnRUZXh0LGM9Yi5sZW5ndGgsZCxlPVVoLmdldFRleHQoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO1guX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBYLl9mYWxsYmFja1RleHR9LGdldFRleHQ6ZnVuY3Rpb24oKXtyZXR1cm5cInZhbHVlXCJpbiBYLl9yb290P1guX3Jvb3QudmFsdWU6WC5fcm9vdFt2aCgpXX19LFZoPVVoLFdoPVwiZGlzcGF0Y2hDb25maWcgX3RhcmdldEluc3QgbmF0aXZlRXZlbnQgaXNEZWZhdWx0UHJldmVudGVkIGlzUHJvcGFnYXRpb25TdG9wcGVkIF9kaXNwYXRjaExpc3RlbmVycyBfZGlzcGF0Y2hJbnN0YW5jZXNcIi5zcGxpdChcIiBcIiksWGg9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmNhLnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLFxuY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5mdW5jdGlvbiBZKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9jYS50aGF0UmV0dXJuc1RydWU6Y2EudGhhdFJldHVybnNGYWxzZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNhLnRoYXRSZXR1cm5zRmFsc2U7cmV0dXJuIHRoaXN9XG5uKFkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2EudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNhLnRoYXRSZXR1cm5zVHJ1ZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1jYS50aGF0UmV0dXJuc1RydWV9LGlzUGVyc2lzdGVudDpjYS50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPFdoLmxlbmd0aDthKyspdGhpc1tXaFthXV09bnVsbH19KTtZLkludGVyZmFjZT1YaDtZLmF1Z21lbnRDbGFzcz1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXt9Yy5wcm90b3R5cGU9dGhpcy5wcm90b3R5cGU7dmFyIGQ9bmV3IGM7bihkLGEucHJvdG90eXBlKTthLnByb3RvdHlwZT1kO2EucHJvdG90eXBlLmNvbnN0cnVjdG9yPWE7YS5JbnRlcmZhY2U9bih7fSx0aGlzLkludGVyZmFjZSxiKTthLmF1Z21lbnRDbGFzcz10aGlzLmF1Z21lbnRDbGFzcztZaChhKX07WWgoWSk7ZnVuY3Rpb24gWmgoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiAkaChhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dyhcIjIyM1wiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gWWgoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9Wmg7YS5yZWxlYXNlPSRofWZ1bmN0aW9uIGFpKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1ZLmF1Z21lbnRDbGFzcyhhaSx7ZGF0YTpudWxsfSk7ZnVuY3Rpb24gYmkoYSxiLGMsZCl7cmV0dXJuIFkuY2FsbCh0aGlzLGEsYixjLGQpfVkuYXVnbWVudENsYXNzKGJpLHtkYXRhOm51bGx9KTt2YXIgY2k9WzksMTMsMjcsMzJdLGRpPWwuY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxlaT1udWxsO2wuY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihlaT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBmaTtcbmlmKGZpPWwuY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhZWkpe3ZhciBnaT13aW5kb3cub3BlcmE7Zmk9IShcIm9iamVjdFwiPT09dHlwZW9mIGdpJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZ2kudmVyc2lvbiYmMTI+PXBhcnNlSW50KGdpLnZlcnNpb24oKSwxMCkpfVxudmFyIGhpPWZpLGlpPWwuY2FuVXNlRE9NJiYoIWRpfHxlaSYmODxlaSYmMTE+PWVpKSxqaT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxraT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcInRvcENvbXBvc2l0aW9uRW5kXCIsXCJ0b3BLZXlQcmVzc1wiLFwidG9wVGV4dElucHV0XCIsXCJ0b3BQYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvbkVuZCB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uU3RhcnQgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25VcGRhdGUgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9fSxsaT0hMTtcbmZ1bmN0aW9uIG1pKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BLZXlVcFwiOnJldHVybi0xIT09Y2kuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJ0b3BLZXlEb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwidG9wS2V5UHJlc3NcIjpjYXNlIFwidG9wTW91c2VEb3duXCI6Y2FzZSBcInRvcEJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBuaShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBvaT0hMTtmdW5jdGlvbiBwaShhLGIpe3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpyZXR1cm4gbmkoYik7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2xpPSEwO3JldHVybiBqaTtjYXNlIFwidG9wVGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1qaSYmbGk/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gcWkoYSxiKXtpZihvaSlyZXR1cm5cInRvcENvbXBvc2l0aW9uRW5kXCI9PT1hfHwhZGkmJm1pKGEsYik/KGE9VmguZ2V0RGF0YSgpLFZoLnJlc2V0KCksb2k9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcFBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6cmV0dXJuIGlpP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHJpPXtldmVudFR5cGVzOmtpLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoZGkpYjp7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BDb21wb3NpdGlvblN0YXJ0XCI6dmFyIGY9a2kuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOmY9a2kuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25VcGRhdGVcIjpmPWtpLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBvaT9taShhLGMpJiYoZj1raS5jb21wb3NpdGlvbkVuZCk6XCJ0b3BLZXlEb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPWtpLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KGlpJiYob2l8fGYhPT1raS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1raS5jb21wb3NpdGlvbkVuZCYmb2kmJihlPVZoLmdldERhdGEoKSk6b2k9VmguaW5pdGlhbGl6ZShkKSksZj1haS5nZXRQb29sZWQoZixiLGMsZCksZT9mLmRhdGE9ZTooZT1uaShjKSxcbm51bGwhPT1lJiYoZi5kYXRhPWUpKSxUaC5hY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzKGYpLGU9Zik6ZT1udWxsOyhhPWhpP3BpKGEsYyk6cWkoYSxjKSk/KGI9YmkuZ2V0UG9vbGVkKGtpLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxUaC5hY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzKGIpKTpiPW51bGw7cmV0dXJuW2UsYl19fSxzaT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB0aShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXNpW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB1aT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDaGFuZ2UgdG9wQ2xpY2sgdG9wRm9jdXMgdG9wSW5wdXQgdG9wS2V5RG93biB0b3BLZXlVcCB0b3BTZWxlY3Rpb25DaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB2aShhLGIsYyl7YT1ZLmdldFBvb2xlZCh1aS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO25iLmVucXVldWVTdGF0ZVJlc3RvcmUoYyk7VGguYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhhKTtyZXR1cm4gYX12YXIgd2k9bnVsbCx4aT1udWxsO2Z1bmN0aW9uIHlpKGEpe0piLmVucXVldWVFdmVudHMoYSk7SmIucHJvY2Vzc0V2ZW50UXVldWUoITEpfVxuZnVuY3Rpb24gemkoYSl7dmFyIGI9Ry5nZXROb2RlRnJvbUluc3RhbmNlKGEpO2lmKEJjLnVwZGF0ZVZhbHVlSWZDaGFuZ2VkKGIpKXJldHVybiBhfWZ1bmN0aW9uIEFpKGEsYil7aWYoXCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEJpPSExO2wuY2FuVXNlRE9NJiYoQmk9TGIoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gQ2koKXt3aSYmKHdpLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLERpKSx4aT13aT1udWxsKX1mdW5jdGlvbiBEaShhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmemkoeGkpJiYoYT12aSh4aSxhLHViKGEpKSxzYi5iYXRjaGVkVXBkYXRlcyh5aSxhKSl9ZnVuY3Rpb24gRWkoYSxiLGMpe1widG9wRm9jdXNcIj09PWE/KENpKCksd2k9Yix4aT1jLHdpLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLERpKSk6XCJ0b3BCbHVyXCI9PT1hJiZDaSgpfVxuZnVuY3Rpb24gRmkoYSl7aWYoXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIj09PWF8fFwidG9wS2V5VXBcIj09PWF8fFwidG9wS2V5RG93blwiPT09YSlyZXR1cm4gemkoeGkpfWZ1bmN0aW9uIEdpKGEsYil7aWYoXCJ0b3BDbGlja1wiPT09YSlyZXR1cm4gemkoYil9ZnVuY3Rpb24gSGkoYSxiKXtpZihcInRvcElucHV0XCI9PT1hfHxcInRvcENoYW5nZVwiPT09YSlyZXR1cm4gemkoYil9XG52YXIgSWk9e2V2ZW50VHlwZXM6dWksX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpCaSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/Ry5nZXROb2RlRnJvbUluc3RhbmNlKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9QWk7ZWxzZSBpZih0aShlKSlpZihCaSlnPUhpO2Vsc2V7Zz1GaTt2YXIgaD1FaX1lbHNlIGY9ZS5ub2RlTmFtZSwhZnx8XCJpbnB1dFwiIT09Zi50b0xvd2VyQ2FzZSgpfHxcImNoZWNrYm94XCIhPT1lLnR5cGUmJlwicmFkaW9cIiE9PWUudHlwZXx8KGc9R2kpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHZpKGcsYyxkKTtoJiZoKGEsZSxiKTtcInRvcEJsdXJcIj09PWEmJm51bGwhPWImJihhPWIuX3dyYXBwZXJTdGF0ZXx8ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiYoYT1cIlwiK2UudmFsdWUsXG5lLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpIT09YSYmZS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGEpKX19O2Z1bmN0aW9uIEppKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1ZLmF1Z21lbnRDbGFzcyhKaSx7dmlldzpmdW5jdGlvbihhKXtpZihhLnZpZXcpcmV0dXJuIGEudmlldzthPXViKGEpO3JldHVybiBhLndpbmRvdz09PWE/YTooYT1hLm93bmVyRG9jdW1lbnQpP2EuZGVmYXVsdFZpZXd8fGEucGFyZW50V2luZG93OndpbmRvd30sZGV0YWlsOmZ1bmN0aW9uKGEpe3JldHVybiBhLmRldGFpbHx8MH19KTt2YXIgS2k9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIExpKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9S2lbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBNaSgpe3JldHVybiBMaX1cbmZ1bmN0aW9uIE5pKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1KaS5hdWdtZW50Q2xhc3MoTmkse3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6TWksYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9fSk7XG52YXIgT2k9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJ0b3BNb3VzZU91dFwiLFwidG9wTW91c2VPdmVyXCJdfX0sUGk9e2V2ZW50VHlwZXM6T2ksZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXtpZihcInRvcE1vdXNlT3ZlclwiPT09YSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fFwidG9wTW91c2VPdXRcIiE9PWEmJlwidG9wTW91c2VPdmVyXCIhPT1hKXJldHVybiBudWxsO3ZhciBlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O1widG9wTW91c2VPdXRcIj09PWE/KGE9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0cuZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUoYik6XG5udWxsKTphPW51bGw7aWYoYT09PWIpcmV0dXJuIG51bGw7dmFyIGY9bnVsbD09YT9lOkcuZ2V0Tm9kZUZyb21JbnN0YW5jZShhKTtlPW51bGw9PWI/ZTpHLmdldE5vZGVGcm9tSW5zdGFuY2UoYik7dmFyIGc9TmkuZ2V0UG9vbGVkKE9pLm1vdXNlTGVhdmUsYSxjLGQpO2cudHlwZT1cIm1vdXNlbGVhdmVcIjtnLnRhcmdldD1mO2cucmVsYXRlZFRhcmdldD1lO2M9TmkuZ2V0UG9vbGVkKE9pLm1vdXNlRW50ZXIsYixjLGQpO2MudHlwZT1cIm1vdXNlZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1mO1RoLmFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyhnLGMsYSxiKTtyZXR1cm5bZyxjXX19LFFpPUYuRE9DVU1FTlRfTk9ERSxSaT1sLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNpPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxcbmRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29udGV4dE1lbnUgdG9wRm9jdXMgdG9wS2V5RG93biB0b3BLZXlVcCB0b3BNb3VzZURvd24gdG9wTW91c2VVcCB0b3BTZWxlY3Rpb25DaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUaT1udWxsLFppPW51bGwsJGk9bnVsbCxhaj0hMSxiaj1NLmlzTGlzdGVuaW5nVG9BbGxEZXBlbmRlbmNpZXM7XG5mdW5jdGlvbiBjaihhLGIpe2lmKGFqfHxudWxsPT1UaXx8VGkhPT1pYSgpKXJldHVybiBudWxsO3ZhciBjPVRpO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnpoLmhhc1NlbGVjdGlvbkNhcGFiaWxpdGllcyhjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuICRpJiZlYSgkaSxjKT9udWxsOigkaT1jLGE9WS5nZXRQb29sZWQoU2kuc2VsZWN0LFppLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9VGksVGguYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhhKSxhKX1cbnZhciBkaj17ZXZlbnRUeXBlczpTaSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50OmQubm9kZVR5cGU9PT1RaT9kOmQub3duZXJEb2N1bWVudDtpZighZXx8IWJqKFwib25TZWxlY3RcIixlKSlyZXR1cm4gbnVsbDtlPWI/Ry5nZXROb2RlRnJvbUluc3RhbmNlKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcInRvcEZvY3VzXCI6aWYodGkoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpVGk9ZSxaaT1iLCRpPW51bGw7YnJlYWs7Y2FzZSBcInRvcEJsdXJcIjokaT1aaT1UaT1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BNb3VzZURvd25cIjphaj0hMDticmVhaztjYXNlIFwidG9wQ29udGV4dE1lbnVcIjpjYXNlIFwidG9wTW91c2VVcFwiOnJldHVybiBhaj0hMSxjaihjLGQpO2Nhc2UgXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIjppZihSaSlicmVhaztjYXNlIFwidG9wS2V5RG93blwiOmNhc2UgXCJ0b3BLZXlVcFwiOnJldHVybiBjaihjLGQpfXJldHVybiBudWxsfX07XG5mdW5jdGlvbiBlaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9WS5hdWdtZW50Q2xhc3MoZWose2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pO2Z1bmN0aW9uIGZqKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1ZLmF1Z21lbnRDbGFzcyhmaix7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pO2Z1bmN0aW9uIGdqKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1KaS5hdWdtZW50Q2xhc3MoZ2ose3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIGhqKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIGlqPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxqaj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn07ZnVuY3Rpb24ga2ooYSxiLGMsZCl7cmV0dXJuIFkuY2FsbCh0aGlzLGEsYixjLGQpfVxuSmkuYXVnbWVudENsYXNzKGtqLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPWlqW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWhqKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9qalthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6TWksY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2hqKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/aGooYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KTtmdW5jdGlvbiBsaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9TmkuYXVnbWVudENsYXNzKGxqLHtkYXRhVHJhbnNmZXI6bnVsbH0pO2Z1bmN0aW9uIG1qKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1KaS5hdWdtZW50Q2xhc3MobWose3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpNaX0pO2Z1bmN0aW9uIG5qKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1ZLmF1Z21lbnRDbGFzcyhuaix7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtcbmZ1bmN0aW9uIG9qKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1OaS5hdWdtZW50Q2xhc3Mob2ose2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSk7dmFyIHBqPXt9LHFqPXt9O1xuXCJhYm9ydCBhbmltYXRpb25FbmQgYW5pbWF0aW9uSXRlcmF0aW9uIGFuaW1hdGlvblN0YXJ0IGJsdXIgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZG91YmxlQ2xpY2sgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZm9jdXMgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCBzY3JvbGwgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvZ2dsZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaE1vdmUgdG91Y2hTdGFydCB0cmFuc2l0aW9uRW5kIHZvbHVtZUNoYW5nZSB3YWl0aW5nIHdoZWVsXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXS50b1VwcGVyQ2FzZSgpK1xuYS5zbGljZSgxKSxjPVwib25cIitiO2I9XCJ0b3BcIitiO2M9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmMsY2FwdHVyZWQ6YytcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltiXX07cGpbYV09YztxaltiXT1jfSk7XG52YXIgcmo9e2V2ZW50VHlwZXM6cGosZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1xalthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcEFib3J0XCI6Y2FzZSBcInRvcENhbmNlbFwiOmNhc2UgXCJ0b3BDYW5QbGF5XCI6Y2FzZSBcInRvcENhblBsYXlUaHJvdWdoXCI6Y2FzZSBcInRvcENsb3NlXCI6Y2FzZSBcInRvcER1cmF0aW9uQ2hhbmdlXCI6Y2FzZSBcInRvcEVtcHRpZWRcIjpjYXNlIFwidG9wRW5jcnlwdGVkXCI6Y2FzZSBcInRvcEVuZGVkXCI6Y2FzZSBcInRvcEVycm9yXCI6Y2FzZSBcInRvcElucHV0XCI6Y2FzZSBcInRvcEludmFsaWRcIjpjYXNlIFwidG9wTG9hZFwiOmNhc2UgXCJ0b3BMb2FkZWREYXRhXCI6Y2FzZSBcInRvcExvYWRlZE1ldGFkYXRhXCI6Y2FzZSBcInRvcExvYWRTdGFydFwiOmNhc2UgXCJ0b3BQYXVzZVwiOmNhc2UgXCJ0b3BQbGF5XCI6Y2FzZSBcInRvcFBsYXlpbmdcIjpjYXNlIFwidG9wUHJvZ3Jlc3NcIjpjYXNlIFwidG9wUmF0ZUNoYW5nZVwiOmNhc2UgXCJ0b3BSZXNldFwiOmNhc2UgXCJ0b3BTZWVrZWRcIjpjYXNlIFwidG9wU2Vla2luZ1wiOmNhc2UgXCJ0b3BTdGFsbGVkXCI6Y2FzZSBcInRvcFN1Ym1pdFwiOmNhc2UgXCJ0b3BTdXNwZW5kXCI6Y2FzZSBcInRvcFRpbWVVcGRhdGVcIjpjYXNlIFwidG9wVG9nZ2xlXCI6Y2FzZSBcInRvcFZvbHVtZUNoYW5nZVwiOmNhc2UgXCJ0b3BXYWl0aW5nXCI6dmFyIGY9WTtcbmJyZWFrO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKDA9PT1oaihjKSlyZXR1cm4gbnVsbDtjYXNlIFwidG9wS2V5RG93blwiOmNhc2UgXCJ0b3BLZXlVcFwiOmY9a2o7YnJlYWs7Y2FzZSBcInRvcEJsdXJcIjpjYXNlIFwidG9wRm9jdXNcIjpmPWdqO2JyZWFrO2Nhc2UgXCJ0b3BDbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwidG9wRG91YmxlQ2xpY2tcIjpjYXNlIFwidG9wTW91c2VEb3duXCI6Y2FzZSBcInRvcE1vdXNlTW92ZVwiOmNhc2UgXCJ0b3BNb3VzZVVwXCI6Y2FzZSBcInRvcE1vdXNlT3V0XCI6Y2FzZSBcInRvcE1vdXNlT3ZlclwiOmNhc2UgXCJ0b3BDb250ZXh0TWVudVwiOmY9Tmk7YnJlYWs7Y2FzZSBcInRvcERyYWdcIjpjYXNlIFwidG9wRHJhZ0VuZFwiOmNhc2UgXCJ0b3BEcmFnRW50ZXJcIjpjYXNlIFwidG9wRHJhZ0V4aXRcIjpjYXNlIFwidG9wRHJhZ0xlYXZlXCI6Y2FzZSBcInRvcERyYWdPdmVyXCI6Y2FzZSBcInRvcERyYWdTdGFydFwiOmNhc2UgXCJ0b3BEcm9wXCI6Zj1sajticmVhaztjYXNlIFwidG9wVG91Y2hDYW5jZWxcIjpjYXNlIFwidG9wVG91Y2hFbmRcIjpjYXNlIFwidG9wVG91Y2hNb3ZlXCI6Y2FzZSBcInRvcFRvdWNoU3RhcnRcIjpmPVxubWo7YnJlYWs7Y2FzZSBcInRvcEFuaW1hdGlvbkVuZFwiOmNhc2UgXCJ0b3BBbmltYXRpb25JdGVyYXRpb25cIjpjYXNlIFwidG9wQW5pbWF0aW9uU3RhcnRcIjpmPWVqO2JyZWFrO2Nhc2UgXCJ0b3BUcmFuc2l0aW9uRW5kXCI6Zj1uajticmVhaztjYXNlIFwidG9wU2Nyb2xsXCI6Zj1KaTticmVhaztjYXNlIFwidG9wV2hlZWxcIjpmPW9qO2JyZWFrO2Nhc2UgXCJ0b3BDb3B5XCI6Y2FzZSBcInRvcEN1dFwiOmNhc2UgXCJ0b3BQYXN0ZVwiOmY9Zmp9Zj92b2lkIDA6dyhcIjg2XCIsYSk7YT1mLmdldFBvb2xlZChlLGIsYyxkKTtUaC5hY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzKGEpO3JldHVybiBhfX07TC5zZXRIYW5kbGVUb3BMZXZlbChNLmhhbmRsZVRvcExldmVsKTtKYi5pbmplY3Rpb24uaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIFRhcEV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtcbmliLmluamVjdGlvbi5pbmplY3RDb21wb25lbnRUcmVlKEcpO0piLmluamVjdGlvbi5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnJqLEVudGVyTGVhdmVFdmVudFBsdWdpbjpQaSxDaGFuZ2VFdmVudFBsdWdpbjpJaSxTZWxlY3RFdmVudFBsdWdpbjpkaixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnJpfSk7XG52YXIgc2o9QS5pbmplY3Rpb24uTVVTVF9VU0VfUFJPUEVSVFksWj1BLmluamVjdGlvbi5IQVNfQk9PTEVBTl9WQUxVRSx0aj1BLmluamVjdGlvbi5IQVNfTlVNRVJJQ19WQUxVRSx1aj1BLmluamVjdGlvbi5IQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSx2aj1BLmluamVjdGlvbi5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUsd2o9e1Byb3BlcnRpZXM6e2FsbG93RnVsbFNjcmVlbjpaLGFsbG93VHJhbnNwYXJlbmN5OnZqLGFzeW5jOlosYXV0b1BsYXk6WixjYXB0dXJlOlosY2hlY2tlZDpzanxaLGNvbHM6dWosY29udGVudEVkaXRhYmxlOnZqLGNvbnRyb2xzOlosXCJkZWZhdWx0XCI6WixkZWZlcjpaLGRpc2FibGVkOlosZG93bmxvYWQ6QS5pbmplY3Rpb24uSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSxkcmFnZ2FibGU6dmosZm9ybU5vVmFsaWRhdGU6WixoaWRkZW46Wixsb29wOlosbXVsdGlwbGU6c2p8WixtdXRlZDpzanxaLG5vVmFsaWRhdGU6WixvcGVuOloscGxheXNJbmxpbmU6WixcbnJlYWRPbmx5OloscmVxdWlyZWQ6WixyZXZlcnNlZDpaLHJvd3M6dWoscm93U3Bhbjp0aixzY29wZWQ6WixzZWFtbGVzczpaLHNlbGVjdGVkOnNqfFosc2l6ZTp1aixzdGFydDp0aixzcGFuOnVqLHNwZWxsQ2hlY2s6dmosc3R5bGU6MCxpdGVtU2NvcGU6WixhY2NlcHRDaGFyc2V0OjAsY2xhc3NOYW1lOjAsaHRtbEZvcjowLGh0dHBFcXVpdjowLHZhbHVlOnZqfSxET01BdHRyaWJ1dGVOYW1lczp7YWNjZXB0Q2hhcnNldDpcImFjY2VwdC1jaGFyc2V0XCIsY2xhc3NOYW1lOlwiY2xhc3NcIixodG1sRm9yOlwiZm9yXCIsaHR0cEVxdWl2OlwiaHR0cC1lcXVpdlwifSxET01NdXRhdGlvbk1ldGhvZHM6e3ZhbHVlOmZ1bmN0aW9uKGEsYil7aWYobnVsbD09YilyZXR1cm4gYS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtcIm51bWJlclwiIT09YS50eXBlfHwhMT09PWEuaGFzQXR0cmlidXRlKFwidmFsdWVcIik/YS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYik6YS52YWxpZGl0eSYmIWEudmFsaWRpdHkuYmFkSW5wdXQmJlxuYS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitiKX19fSx4aj1BLmluamVjdGlvbi5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUseWo9e3hsaW5rOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLHhtbDpcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwifSx6aj17UHJvcGVydGllczp7YXV0b1JldmVyc2U6eGosZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDp4aixwcmVzZXJ2ZUFscGhhOnhqfSxET01BdHRyaWJ1dGVOYW1lczp7YXV0b1JldmVyc2U6XCJhdXRvUmV2ZXJzZVwiLGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQ6XCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIscHJlc2VydmVBbHBoYTpcInByZXNlcnZlQWxwaGFcIn0sRE9NQXR0cmlidXRlTmFtZXNwYWNlczp7eGxpbmtBY3R1YXRlOnlqLnhsaW5rLHhsaW5rQXJjcm9sZTp5ai54bGluayx4bGlua0hyZWY6eWoueGxpbmsseGxpbmtSb2xlOnlqLnhsaW5rLFxueGxpbmtTaG93OnlqLnhsaW5rLHhsaW5rVGl0bGU6eWoueGxpbmsseGxpbmtUeXBlOnlqLnhsaW5rLHhtbEJhc2U6eWoueG1sLHhtbExhbmc6eWoueG1sLHhtbFNwYWNlOnlqLnhtbH19LEFqPS9bXFwtXFw6XShbYS16XSkvZztmdW5jdGlvbiBCaihhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4LWhlaWdodCB4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZSB4bWw6YmFzZSB4bWxuczp4bGluayB4bWw6bGFuZyB4bWw6c3BhY2VcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoQWosXG5Caik7emouUHJvcGVydGllc1tiXT0wO3pqLkRPTUF0dHJpYnV0ZU5hbWVzW2JdPWF9KTtBLmluamVjdGlvbi5pbmplY3RET01Qcm9wZXJ0eUNvbmZpZyh3aik7QS5pbmplY3Rpb24uaW5qZWN0RE9NUHJvcGVydHlDb25maWcoemopO1xudmFyIENqPWlnLmluamVjdEludGVybmFscyxEaj1GLkVMRU1FTlRfTk9ERSxFaj1GLlRFWFRfTk9ERSxGaj1GLkNPTU1FTlRfTk9ERSxHaj1GLkRPQ1VNRU5UX05PREUsSGo9Ri5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFLElqPUEuUk9PVF9BVFRSSUJVVEVfTkFNRSxKaj1rYS5nZXRDaGlsZE5hbWVzcGFjZSxLaj1OLmNyZWF0ZUVsZW1lbnQsTGo9Ti5jcmVhdGVUZXh0Tm9kZSxNaj1OLnNldEluaXRpYWxQcm9wZXJ0aWVzLE5qPU4uZGlmZlByb3BlcnRpZXMsT2o9Ti51cGRhdGVQcm9wZXJ0aWVzLFBqPU4uZGlmZkh5ZHJhdGVkUHJvcGVydGllcyxRaj1OLmRpZmZIeWRyYXRlZFRleHQsUmo9Ti53YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50LFNqPU4ud2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dCxUaj1OLndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudCxVaj1OLndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dCxWaj1HLnByZWNhY2hlRmliZXJOb2RlLFdqPUcudXBkYXRlRmliZXJQcm9wcztcbm5iLmluamVjdGlvbi5pbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50KE4pO0RoLl9pbmplY3RGaWJlcihmdW5jdGlvbihhKXtyZXR1cm4gWGouZmluZEhvc3RJbnN0YW5jZShhKX0pO3ZhciBZaj1udWxsLFpqPW51bGw7ZnVuY3Rpb24gYWsoYSl7cmV0dXJuISghYXx8YS5ub2RlVHlwZSE9PURqJiZhLm5vZGVUeXBlIT09R2omJmEubm9kZVR5cGUhPT1IaiYmKGEubm9kZVR5cGUhPT1Ganx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGJrKGEpe2E9YT9hLm5vZGVUeXBlPT09R2o/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGw7cmV0dXJuISghYXx8YS5ub2RlVHlwZSE9PURqfHwhYS5oYXNBdHRyaWJ1dGUoSWopKX1cbnZhciBYaj1mdW5jdGlvbihhKXt2YXIgYj1hLmdldFB1YmxpY0luc3RhbmNlO2E9aGgoYSk7dmFyIGM9YS5zY2hlZHVsZVVwZGF0ZSxkPWEuZ2V0UHJpb3JpdHlDb250ZXh0O3JldHVybntjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSl7dmFyIGI9ZWUoKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLGlzU2NoZWR1bGVkOiExLG5leHRTY2hlZHVsZWRSb290Om51bGwsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGx9O3JldHVybiBiLnN0YXRlTm9kZT1hfSx1cGRhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGcsaCl7dmFyIGU9Yi5jdXJyZW50O2c9amgoZyk7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9ZzpiLnBlbmRpbmdDb250ZXh0PWc7Yj1oO2g9ZChlLGVkLmVuYWJsZUFzeW5jU3VidHJlZUFQSSYmbnVsbCE9YSYmbnVsbCE9YS50eXBlJiZudWxsIT1hLnR5cGUucHJvdG90eXBlJiYhMD09PWEudHlwZS5wcm90b3R5cGUudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50KTtcbmE9e2VsZW1lbnQ6YX07a2goZSxhLHZvaWQgMD09PWI/bnVsbDpiLGgpO2MoZSxoKX0sYmF0Y2hlZFVwZGF0ZXM6YS5iYXRjaGVkVXBkYXRlcyx1bmJhdGNoZWRVcGRhdGVzOmEudW5iYXRjaGVkVXBkYXRlcyxkZWZlcnJlZFVwZGF0ZXM6YS5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOmEuZmx1c2hTeW5jLGdldFB1YmxpY1Jvb3RJbnN0YW5jZTpmdW5jdGlvbihhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2Ugb2g6cmV0dXJuIGIoYS5jaGlsZC5zdGF0ZU5vZGUpO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX0sZmluZEhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXthPXBoKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFsczpmdW5jdGlvbihhKXthPXFoKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfX19KHtnZXRSb290SG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7aWYoYS5ub2RlVHlwZT09PVxuR2opYT0oYT1hLmRvY3VtZW50RWxlbWVudCk/YS5uYW1lc3BhY2VVUkk6SmoobnVsbCxcIlwiKTtlbHNle3ZhciBiPWEubm9kZVR5cGU9PT1Gaj9hLnBhcmVudE5vZGU6YTthPWIubmFtZXNwYWNlVVJJfHxudWxsO2I9Yi50YWdOYW1lO2E9SmooYSxiKX1yZXR1cm4gYX0sZ2V0Q2hpbGRIb3N0Q29udGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBKaihhLGIpfSxnZXRQdWJsaWNJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYX0scHJlcGFyZUZvckNvbW1pdDpmdW5jdGlvbigpe1lqPU0uaXNFbmFibGVkKCk7Wmo9emguZ2V0U2VsZWN0aW9uSW5mb3JtYXRpb24oKTtNLnNldEVuYWJsZWQoITEpfSxyZXNldEFmdGVyQ29tbWl0OmZ1bmN0aW9uKCl7emgucmVzdG9yZVNlbGVjdGlvbihaaik7Wmo9bnVsbDtNLnNldEVuYWJsZWQoWWopO1lqPW51bGx9LGNyZWF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQsZSl7YT1LaihhLGIsYyxkKTtWaihlLGEpO1dqKGEsYik7cmV0dXJuIGF9LGFwcGVuZEluaXRpYWxDaGlsZDpmdW5jdGlvbihhLFxuYil7YS5hcHBlbmRDaGlsZChiKX0sZmluYWxpemVJbml0aWFsQ2hpbGRyZW46ZnVuY3Rpb24oYSxiLGMsZCl7TWooYSxiLGMsZCk7YTp7c3dpdGNoKGIpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6YT0hIWMuYXV0b0ZvY3VzO2JyZWFrIGF9YT0hMX1yZXR1cm4gYX0scHJlcGFyZVVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBOaihhLGIsYyxkLGUpfSxjb21taXRNb3VudDpmdW5jdGlvbihhKXthLmZvY3VzKCl9LGNvbW1pdFVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe1dqKGEsZSk7T2ooYSxiLGMsZCxlKX0sc2hvdWxkU2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXG5cInN0cmluZ1wiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfSxyZXNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEpe2EudGV4dENvbnRlbnQ9XCJcIn0sc2hvdWxkRGVwcmlvcml0aXplU3VidHJlZTpmdW5jdGlvbihhLGIpe3JldHVybiEhYi5oaWRkZW59LGNyZWF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkKXthPUxqKGEsYik7VmooZCxhKTtyZXR1cm4gYX0sY29tbWl0VGV4dFVwZGF0ZTpmdW5jdGlvbihhLGIsYyl7YS5ub2RlVmFsdWU9Y30sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLmFwcGVuZENoaWxkKGIpfSxhcHBlbmRDaGlsZFRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7YS5ub2RlVHlwZT09PUZqP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixhKTphLmFwcGVuZENoaWxkKGIpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oYSxiLGMpe2EuaW5zZXJ0QmVmb3JlKGIsYyl9LGluc2VydEluQ29udGFpbmVyQmVmb3JlOmZ1bmN0aW9uKGEsXG5iLGMpe2Eubm9kZVR5cGU9PT1Gaj9hLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYyk6YS5pbnNlcnRCZWZvcmUoYixjKX0scmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLnJlbW92ZUNoaWxkKGIpfSxyZW1vdmVDaGlsZEZyb21Db250YWluZXI6ZnVuY3Rpb24oYSxiKXthLm5vZGVUeXBlPT09Rmo/YS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpOmEucmVtb3ZlQ2hpbGQoYil9LGNhbkh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3JldHVybiBhLm5vZGVUeXBlPT09RGomJmI9PT1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCl9LGNhbkh5ZHJhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm5cIlwiPT09Yj8hMTphLm5vZGVUeXBlPT09RWp9LGdldE5leHRIeWRyYXRhYmxlU2libGluZzpmdW5jdGlvbihhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJmEubm9kZVR5cGUhPT1EaiYmYS5ub2RlVHlwZSE9PUVqOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGdldEZpcnN0SHlkcmF0YWJsZUNoaWxkOmZ1bmN0aW9uKGEpe2ZvcihhPVxuYS5maXJzdENoaWxkO2EmJmEubm9kZVR5cGUhPT1EaiYmYS5ub2RlVHlwZSE9PUVqOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUsZil7VmooZixhKTtXaihhLGMpO3JldHVybiBQaihhLGIsYyxlLGQpfSxoeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXtWaihjLGEpO3JldHVybiBRaihhLGIpfSxkaWROb3RIeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXsxPT09Yi5ub2RlVHlwZT9SaihhLGIpOlNqKGEsYil9LGRpZE5vdEZpbmRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMpe1RqKGEsYixjKX0sZGlkTm90RmluZEh5ZHJhdGFibGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXtVaihhLGIpfSxzY2hlZHVsZURlZmVycmVkQ2FsbGJhY2s6ZGQucklDLHVzZVN5bmNTY2hlZHVsaW5nOiEwfSk7c2IuaW5qZWN0aW9uLmluamVjdEZpYmVyQmF0Y2hlZFVwZGF0ZXMoWGouYmF0Y2hlZFVwZGF0ZXMpO1xuZnVuY3Rpb24gY2soYSxiLGMsZCxlKXthayhjKT92b2lkIDA6dyhcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZilYai51cGRhdGVDb250YWluZXIoYixmLGEsZSk7ZWxzZXtpZighZCYmIWJrKGMpKWZvcihkPXZvaWQgMDtkPWMubGFzdENoaWxkOyljLnJlbW92ZUNoaWxkKGQpO3ZhciBnPVhqLmNyZWF0ZUNvbnRhaW5lcihjKTtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1nO1hqLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtYai51cGRhdGVDb250YWluZXIoYixnLGEsZSl9KX1yZXR1cm4gWGouZ2V0UHVibGljUm9vdEluc3RhbmNlKGYpfWZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7YWsoYik/dm9pZCAwOncoXCIyMDBcIik7cmV0dXJuIG5lLmNyZWF0ZVBvcnRhbChhLGIsbnVsbCxjKX1cbnZhciBlaz17Y3JlYXRlUG9ydGFsOmRrLGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjayhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gY2sobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGwhPWEmJlBhLmhhcyhhKT92b2lkIDA6dyhcIjM4XCIpO3JldHVybiBjayhhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXthayhhKT92b2lkIDA6dyhcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtjayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LGZpbmRET01Ob2RlOkRoLHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpkayx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpzYi5iYXRjaGVkVXBkYXRlcyxcbnVuc3RhYmxlX2RlZmVycmVkVXBkYXRlczpYai5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOlhqLmZsdXNoU3luYyxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRQbHVnaW5IdWI6SmIsRXZlbnRQbHVnaW5SZWdpc3RyeTpzYSxFdmVudFByb3BhZ2F0b3JzOlRoLFJlYWN0Q29udHJvbGxlZENvbXBvbmVudDpuYixSZWFjdERPTUNvbXBvbmVudFRyZWU6RyxSZWFjdERPTUV2ZW50TGlzdGVuZXI6TH19O0NqKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpHLmdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOlhqLmZpbmRIb3N0SW5zdGFuY2UsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4wLjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTttb2R1bGUuZXhwb3J0cz1laztcblxuXG4vKioqLyB9KSxcbi8qIDEwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuXG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge307XG5cbmlmIChmYWxzZSkge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuXG4vKioqLyB9KSxcbi8qIDExICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuXG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cbi8qKiovIH0pLFxuLyogMTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcblxuLyoqXG4gKiBVcHN0cmVhbSB2ZXJzaW9uIG9mIGV2ZW50IGxpc3RlbmVyLiBEb2VzIG5vdCB0YWtlIGludG8gYWNjb3VudCBzcGVjaWZpY1xuICogbmF0dXJlIG9mIHBsYXRmb3JtLlxuICovXG52YXIgRXZlbnRMaXN0ZW5lciA9IHtcbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgYnViYmxlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LmRldGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBjYXB0dXJlOiBmdW5jdGlvbiBjYXB0dXJlKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGZhbHNlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0F0dGVtcHRlZCB0byBsaXN0ZW4gdG8gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZSBvbiBhICcgKyAnYnJvd3NlciB0aGF0IGRvZXMgbm90IHN1cHBvcnQgdGhlIGNhcHR1cmUgcGhhc2UuIFlvdXIgYXBwbGljYXRpb24gJyArICd3aWxsIG5vdCByZWNlaXZlIHNvbWUgZXZlbnRzLicpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBlbXB0eUZ1bmN0aW9uXG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICByZWdpc3RlckRlZmF1bHQ6IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdCgpIHt9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50TGlzdGVuZXI7XG5cbi8qKiovIH0pLFxuLyogMTMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5cblxudmFyIGVtcHR5T2JqZWN0ID0ge307XG5cbmlmIChmYWxzZSkge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDtcblxuLyoqKi8gfSksXG4vKiAxNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqIFxuICovXG5cbi8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cblxuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgaWYgKHggPT09IHkpIHtcbiAgICAvLyBTdGVwcyAxLTUsIDctMTBcbiAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgIC8vIEFkZGVkIHRoZSBub256ZXJvIHkgY2hlY2sgdG8gbWFrZSBGbG93IGhhcHB5LCBidXQgaXQgaXMgcmVkdW5kYW50XG4gICAgcmV0dXJuIHggIT09IDAgfHwgeSAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgLy8gU3RlcCA2LmE6IE5hTiA9PSBOYU5cbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbi8qKlxuICogUGVyZm9ybXMgZXF1YWxpdHkgYnkgaXRlcmF0aW5nIHRocm91Z2gga2V5cyBvbiBhbiBvYmplY3QgYW5kIHJldHVybmluZyBmYWxzZVxuICogd2hlbiBhbnkga2V5IGhhcyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBzdHJpY3RseSBlcXVhbCBiZXR3ZWVuIHRoZSBhcmd1bWVudHMuXG4gKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgdmFsdWVzIG9mIGFsbCBrZXlzIGFyZSBzdHJpY3RseSBlcXVhbC5cbiAqL1xuZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaGFsbG93RXF1YWw7XG5cbi8qKiovIH0pLFxuLyogMTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7XG5cbi8qKiovIH0pLFxuLyogMTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBpc05vZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3KTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlO1xuXG4vKioqLyB9KSxcbi8qIDE3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTtcblxuLyoqKi8gfSksXG4vKiAxOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cblxuXG4vKipcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gbm9kZSBpbnB1dC90ZXh0YXJlYSB0byBmb2N1c1xuICovXG5cbmZ1bmN0aW9uIGZvY3VzTm9kZShub2RlKSB7XG4gIC8vIElFOCBjYW4gdGhyb3cgXCJDYW4ndCBtb3ZlIGZvY3VzIHRvIHRoZSBjb250cm9sIGJlY2F1c2UgaXQgaXMgaW52aXNpYmxlLFxuICAvLyBub3QgZW5hYmxlZCwgb3Igb2YgYSB0eXBlIHRoYXQgZG9lcyBub3QgYWNjZXB0IHRoZSBmb2N1cy5cIiBmb3IgYWxsIGtpbmRzIG9mXG4gIC8vIHJlYXNvbnMgdGhhdCBhcmUgdG9vIGV4cGVuc2l2ZSBhbmQgZnJhZ2lsZSB0byB0ZXN0LlxuICB0cnkge1xuICAgIG5vZGUuZm9jdXMoKTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmb2N1c05vZGU7XG5cbi8qKiovIH0pLFxuLyogMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGZiLXd3dy90eXBlb2YtdW5kZWZpbmVkICovXG5cbi8qKlxuICogU2FtZSBhcyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGJ1dCB3cmFwcyBpbiBhIHRyeS1jYXRjaCBibG9jay4gSW4gSUUgaXQgaXNcbiAqIG5vdCBzYWZlIHRvIGNhbGwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBpZiB0aGVyZSBpcyBub3RoaW5nIGZvY3VzZWQuXG4gKlxuICogVGhlIGFjdGl2ZUVsZW1lbnQgd2lsbCBiZSBudWxsIG9ubHkgaWYgdGhlIGRvY3VtZW50IG9yIGRvY3VtZW50IGJvZHkgaXMgbm90XG4gKiB5ZXQgZGVmaW5lZC5cbiAqXG4gKiBAcGFyYW0gez9ET01Eb2N1bWVudH0gZG9jIERlZmF1bHRzIHRvIGN1cnJlbnQgZG9jdW1lbnQuXG4gKiBAcmV0dXJuIHs/RE9NRWxlbWVudH1cbiAqL1xuZnVuY3Rpb24gZ2V0QWN0aXZlRWxlbWVudChkb2MpIC8qP0RPTUVsZW1lbnQqL3tcbiAgZG9jID0gZG9jIHx8ICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB1bmRlZmluZWQpO1xuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBkb2MuYWN0aXZlRWxlbWVudCB8fCBkb2MuYm9keTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkb2MuYm9keTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFjdGl2ZUVsZW1lbnQ7XG5cbi8qKiovIH0pLFxuLyogMjAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcmVhY3REb20gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX3NsaWRlID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMSk7XG5cbnZhciBfc2xpZGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2xpZGUpO1xuXG52YXIgX3V0aWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG4vLyBjb25zdCB0YXAgPSAobXNnKSA9PiAodGhpbmcpID0+IHsgY29uc29sZS5sb2cobXNnLCB0aGluZyk7IHJldHVybiB0aGluZyB9XG52YXIgd3JhcEFyb3VuZFZhbHVlID0gZnVuY3Rpb24gd3JhcEFyb3VuZFZhbHVlKHZhbCwgbWF4KSB7XG4gIHJldHVybiAodmFsICUgbWF4ICsgbWF4KSAlIG1heDtcbn07XG52YXIgaGFyZEJvdW5kZWRWYWx1ZSA9IGZ1bmN0aW9uIGhhcmRCb3VuZGVkVmFsdWUodmFsLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsKSk7XG59O1xudmFyIG5vcm1hbGl6ZUluZGV4ID0gZnVuY3Rpb24gbm9ybWFsaXplSW5kZXgoaWR4LCBsZW4pIHtcbiAgdmFyIHdyYXAgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlO1xuICByZXR1cm4gd3JhcCA/IHdyYXBBcm91bmRWYWx1ZShpZHgsIGxlbikgOiBoYXJkQm91bmRlZFZhbHVlKGlkeCwgbGVuIC0gMSk7XG59O1xuXG52YXIgV2hpcmxpZ2lnID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFdoaXJsaWdpZywgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gV2hpcmxpZ2lnKHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFdoaXJsaWdpZyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoV2hpcmxpZ2lnLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoV2hpcmxpZ2lnKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZXZlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgICBfdGhpcy5pc1Njcm9sbGluZyA9IGZhbHNlO1xuXG4gICAgX3RoaXMuY2FuU2VsZkNvcnJlY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gIV90aGlzLnByb3BzLnByZXZlbnRBdXRvQ29ycmVjdCAmJiAhX3RoaXMuc3RhdGUuaXNBbmltYXRpbmcgJiYgIV90aGlzLmlzU2Nyb2xsaW5nICYmICFfdGhpcy5pc0ludGVyYWN0aW5nKCk7XG4gICAgfTtcblxuICAgIF90aGlzLnNob3VsZFNlbGZDb3JyZWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF90aGlzLnByb3BzLnNuYXBUb1NsaWRlICYmIF90aGlzLmNhblNlbGZDb3JyZWN0KCk7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUtleVVwID0gZnVuY3Rpb24gKG5leHRLZXlzLCBwcmV2S2V5cykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICAgIHZhciBrZXkgPSBfcmVmLmtleTtcblxuICAgICAgICB2YXIgaXNOZXh0ID0gKDAsIF91dGlscy5pbmNsdWRlcykoa2V5LCBuZXh0S2V5cyk7XG4gICAgICAgIHZhciBpc1ByZXYgPSAoMCwgX3V0aWxzLmluY2x1ZGVzKShrZXksIHByZXZLZXlzKTtcbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0FuaW1hdGluZzogdHJ1ZSB9KTtcbiAgICAgICAgaWYgKGlzTmV4dCkgX3RoaXMubmV4dCgpLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICAgICAgaWYgKGlzUHJldikgX3RoaXMucHJldigpLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfTtcbiAgICB9KF90aGlzLnByb3BzLm5leHRLZXlzLCBfdGhpcy5wcm9wcy5wcmV2S2V5cyk7XG5cbiAgICBfdGhpcy5nZXRQYXJ0aWFsbHlPYnNjdXJlZFNsaWRlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB3aGlybGlnaWcgPSBfdGhpcy53aGlybGlnaWc7XG5cbiAgICAgIHZhciBmaW5kRmlyc3RPYnNjdXJlZENoaWxkSW5kZXggPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHdoaXJsaWdpZy5jaGlsZHJlbikpLmZpbmRJbmRleChmdW5jdGlvbiAoY2hpbGQsIGksIGNoaWxkcmVuKSB7XG4gICAgICAgIHJldHVybiAhKDAsIF91dGlscy5pc1dob2xseUluVmlldykod2hpcmxpZ2lnKShjaGlsZCkgJiYgKDAsIF91dGlscy5pc1dob2xseUluVmlldykod2hpcmxpZ2lnKShjaGlsZHJlbltpICsgMV0pO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciBmaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCA9IE1hdGgubWF4KGZpbmRGaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCwgMCk7XG5cbiAgICAgIHZhciBmaW5kTGFzdE9ic2N1cmVkQ2hpbGRJbmRleCA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkod2hpcmxpZ2lnLmNoaWxkcmVuKSkuZmluZEluZGV4KGZ1bmN0aW9uIChjaGlsZCwgaSwgY2hpbGRyZW4pIHtcbiAgICAgICAgcmV0dXJuICEoMCwgX3V0aWxzLmlzV2hvbGx5SW5WaWV3KSh3aGlybGlnaWcpKGNoaWxkKSAmJiAoMCwgX3V0aWxzLmlzV2hvbGx5SW5WaWV3KSh3aGlybGlnaWcpKGNoaWxkcmVuW2kgLSAxXSk7XG4gICAgICB9KTtcblxuICAgICAgdmFyIGxhc3RPYnNjdXJlZENoaWxkSW5kZXggPSBNYXRoLm1heChmaW5kTGFzdE9ic2N1cmVkQ2hpbGRJbmRleCwgMCkgfHwgd2hpcmxpZ2lnLmNoaWxkcmVuLmxlbmd0aCAtIDE7XG5cbiAgICAgIHJldHVybiBbZmlyc3RPYnNjdXJlZENoaWxkSW5kZXgsIGxhc3RPYnNjdXJlZENoaWxkSW5kZXhdO1xuICAgIH07XG5cbiAgICBfdGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfdGhpcyR3aGlybGlnaWcgPSBfdGhpcy53aGlybGlnaWcsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyR3aGlybGlnaWcuY2hpbGRyZW4sXG4gICAgICAgICAgc2Nyb2xsTGVmdCA9IF90aGlzJHdoaXJsaWdpZy5zY3JvbGxMZWZ0O1xuXG4gICAgICB2YXIgb2Zmc2V0cyA9IFtdLnNsaWNlLmNhbGwoY2hpbGRyZW4pLm1hcChmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgICAgdmFyIG9mZnNldExlZnQgPSBfcmVmMi5vZmZzZXRMZWZ0O1xuICAgICAgICByZXR1cm4gTWF0aC5hYnMob2Zmc2V0TGVmdCAtIHNjcm9sbExlZnQpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gb2Zmc2V0cy5pbmRleE9mKE1hdGgubWluLmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheShvZmZzZXRzKSkpO1xuICAgIH07XG5cbiAgICBfdGhpcy5zZXRSZWYgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgICAgX3RoaXNbbmFtZV0gPSByZWY7XG4gICAgICB9O1xuICAgIH07XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGFjdGl2ZUluZGV4OiBwcm9wcy5zdGFydEF0LFxuICAgICAgaXNBbmltYXRpbmc6IGZhbHNlLFxuICAgICAgdmlzaWJsZVNsaWRlczogX3RoaXMucHJvcHMudmlzaWJsZVNsaWRlcyB8fCAwLFxuICAgICAgc2xpZGVCeTogX3RoaXMucHJvcHMuc2xpZGVCeSB8fCBfdGhpcy5wcm9wcy52aXNpYmxlU2xpZGVzIHx8IDBcblxuICAgICAgLy8gV2UgY2FuJ3QgZG8gYXJyb3cgZnVuY3Rpb24gcHJvcGVydGllcyBmb3IgdGhlc2Ugc2luY2VcbiAgICAgIC8vIHdlIGFyZSBwYXNzaW5nIHRoZW0gdG8gdGhlIGNvbnN1bWluZyBjb21wb25lbnQgYW5kIHdlXG4gICAgICAvLyByZXF1aXJlIHRoZSBwcm9wZXIgY29udGV4dFxuICAgIH07X3RoaXMubmV4dCA9IF90aGlzLm5leHQuYmluZChfdGhpcyk7XG4gICAgX3RoaXMucHJldiA9IF90aGlzLnByZXYuYmluZChfdGhpcyk7XG4gICAgX3RoaXMuc2xpZGVUbyA9IF90aGlzLnNsaWRlVG8uYmluZChfdGhpcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFdoaXJsaWdpZywgW3tcbiAgICBrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuRE9NTm9kZSA9ICgwLCBfcmVhY3REb20uZmluZERPTU5vZGUpKHRoaXMud2hpcmxpZ2lnKTtcbiAgICAgIHRoaXMuaXNJbnRlcmFjdGluZyA9ICgwLCBfdXRpbHMuaGFzT25nb2luZ0ludGVyYWN0aW9uKSh0aGlzLkRPTU5vZGUpO1xuXG4gICAgICAvLyBUaGVzZSBhcmUgbm90IGEgcGFydCBvZiBjb21wb25lbnQgc3RhdGUgc2luY2Ugd2UgZG9uJ3Qgd2FudFxuICAgICAgLy8gaW5jdXJlIHRoZSBvdmVyaGVhZCBvZiBjYWxsaW5nIHNldFN0YXRlLiBUaGV5IGFyZSBlaXRoZXIgY2FjaGVkXG4gICAgICAvLyB2YWx1ZXMgb3Igc3RhdGUgb25seSB0aGUgb25TY3JvbGxFbmQgY2FsbGJhY2sgY2FyZXMgYWJvdXQgYW5kXG4gICAgICAvLyBhcmUgbm90IGltcG9ydGFudCB0byB0aGUgcmVuZGVyaW5nIG9mIHRoZSBjb21wb25lbnQuXG4gICAgICB0aGlzLmNoaWxkQ291bnQgPSB0aGlzLndoaXJsaWdpZyAmJiB0aGlzLndoaXJsaWdpZy5jaGlsZHJlbiA/IHRoaXMud2hpcmxpZ2lnLmNoaWxkcmVuLmxlbmd0aCA6IDA7XG5cbiAgICAgIHZhciBzbGlkZUJ5ID0ge1xuICAgICAgICBsZWZ0OiBmdW5jdGlvbiBsZWZ0KCkge1xuICAgICAgICAgIHJldHVybiAtX3RoaXMyLnN0YXRlLnNsaWRlQnk7XG4gICAgICAgIH0sXG4gICAgICAgIHJpZ2h0OiBmdW5jdGlvbiByaWdodCgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnN0YXRlLnNsaWRlQnk7XG4gICAgICAgIH0sXG4gICAgICAgIHVwOiBmdW5jdGlvbiB1cCgpIHtcbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfSxcbiAgICAgICAgZG93bjogZnVuY3Rpb24gZG93bigpIHtcbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgdGhpcy5ldmVudExpc3RlbmVycyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5ldmVudExpc3RlbmVycyksIFsoMCwgX3V0aWxzLm9uU2Nyb2xsU3RhcnQpKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmlzU2Nyb2xsaW5nID0gdHJ1ZTtcbiAgICAgIH0pLCAoMCwgX3V0aWxzLm9uKSgndG91Y2hzdGFydCcpKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmlzU2Nyb2xsaW5nID0gdHJ1ZTtcbiAgICAgIH0pKHRoaXMud2hpcmxpZ2lnKSwgKDAsIF91dGlscy5vblNjcm9sbEVuZCkoZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuaXNTY3JvbGxpbmcgPSBmYWxzZTtcbiAgICAgICAgaWYgKF90aGlzMi5jYW5TZWxmQ29ycmVjdCgpKSB7XG4gICAgICAgICAgaWYgKF90aGlzMi5wcm9wcy5zbmFwVG9TbGlkZSkge1xuICAgICAgICAgICAgX3RoaXMyLnNsaWRlVG8oX3RoaXMyLmdldE5lYXJlc3RTbGlkZUluZGV4KCkpLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX3RoaXMyLnByb3BzLmFmdGVyU2xpZGUoX3RoaXMyLmdldE5lYXJlc3RTbGlkZUluZGV4KCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgeyB0YXJnZXQ6IHRoaXMuRE9NTm9kZSB9KSwgKDAsIF91dGlscy5vbikoJ3RvdWNoZW5kJykoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMyLmNhblNlbGZDb3JyZWN0KCkpIHtcbiAgICAgICAgICBfdGhpczIucHJvcHMuc25hcFRvU2xpZGUgPyBfdGhpczIuc2xpZGVUbyhfdGhpczIuZ2V0TmVhcmVzdFNsaWRlSW5kZXgoKSkuY2F0Y2goX3V0aWxzLm5vb3ApIDogX3RoaXMyLnByb3BzLmFmdGVyU2xpZGUoX3RoaXMyLmdldE5lYXJlc3RTbGlkZUluZGV4KCkpO1xuICAgICAgICB9XG4gICAgICB9KSh0aGlzLndoaXJsaWdpZyksICgwLCBfdXRpbHMub25Td2lwZSkoZnVuY3Rpb24gKGRpcmVjdGlvbikge1xuICAgICAgICBpZiAoIV90aGlzMi5wcm9wcy5wcmV2ZW50U3dpcGUgJiYgX3RoaXMyLnByb3BzLnNuYXBUb1NsaWRlKSB7XG4gICAgICAgICAgX3RoaXMyLnNsaWRlVG8oX3RoaXMyLnN0YXRlLmFjdGl2ZUluZGV4ICsgc2xpZGVCeVtkaXJlY3Rpb25dKCkpLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICAgICAgfVxuICAgICAgfSkodGhpcy53aGlybGlnaWcpXSk7XG5cbiAgICAgIHRoaXMuc2xpZGVUbyh0aGlzLnByb3BzLnN0YXJ0QXQsIHsgaW1tZWRpYXRlOiB0cnVlIH0pLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgdGhpcy5ldmVudExpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKF9yZWYzKSB7XG4gICAgICB2YXIgc2xpZGVCeSA9IF9yZWYzLnNsaWRlQnksXG4gICAgICAgICAgdmlzaWJsZVNsaWRlcyA9IF9yZWYzLnZpc2libGVTbGlkZXM7XG5cbiAgICAgIGlmIChzbGlkZUJ5ICE9PSB0aGlzLnByb3BzLnNsaWRlQnkgfHwgdmlzaWJsZVNsaWRlcyAhPT0gdGhpcy5wcm9wcy52aXNpYmxlU2xpZGVzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzbGlkZUJ5OiBzbGlkZUJ5IHx8IHZpc2libGVTbGlkZXMgfHwgMSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb21wb25lbnREaWRVcGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgICB0aGlzLmNoaWxkQ291bnQgPSB0aGlzLndoaXJsaWdpZyAmJiB0aGlzLndoaXJsaWdpZy5jaGlsZHJlbiA/IHRoaXMud2hpcmxpZ2lnLmNoaWxkcmVuLmxlbmd0aCA6IDA7XG5cbiAgICAgIGlmICh0aGlzLnNob3VsZFNlbGZDb3JyZWN0KCkpIHtcbiAgICAgICAgdmFyIG5lYXJlc3RTbGlkZUluZGV4ID0gdGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpO1xuICAgICAgICBuZWFyZXN0U2xpZGVJbmRleCAhPT0gdGhpcy5zdGF0ZS5hY3RpdmVJbmRleCAmJiB0aGlzLnNsaWRlVG8odGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKS5jYXRjaChfdXRpbHMubm9vcCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcmV2UHJvcHMuc2xpZGVUbyAhPT0gdGhpcy5wcm9wcy5zbGlkZVRvKSB7XG4gICAgICAgIHRoaXMuc2xpZGVUbyh0aGlzLnByb3BzLnNsaWRlVG8pLmNhdGNoKF91dGlscy5ub29wKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzaG91bGRDb21wb25lbnRVcGRhdGUnLFxuXG5cbiAgICAvLyBpc0FuaW1hdGluZyBzdGF0ZSBpcyB0aGUgb25seSBpbXBvcnRhbnQgc3RhdGUgdmFsdWUgdG8gdGhlIHJlbmRlcmluZyBvZiB0aGlzIGNvbXBvbmVudFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzLCBfcmVmNCkge1xuICAgICAgdmFyIGlzQW5pbWF0aW5nID0gX3JlZjQuaXNBbmltYXRpbmc7XG5cbiAgICAgIHZhciBwcm9wVmFsdWVzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSgoMCwgX3V0aWxzLnZhbHVlcykodGhpcy5wcm9wcykpLCBbdGhpcy5zdGF0ZS5pc0FuaW1hdGluZ10pO1xuICAgICAgdmFyIG5leHRQcm9wVmFsdWVzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSgoMCwgX3V0aWxzLnZhbHVlcykobmV4dFByb3BzKSksIFtpc0FuaW1hdGluZ10pO1xuICAgICAgcmV0dXJuICFuZXh0UHJvcFZhbHVlcy5ldmVyeShmdW5jdGlvbiAodmFsLCBpKSB7XG4gICAgICAgIHJldHVybiB2YWwgPT09IHByb3BWYWx1ZXNbaV07XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICduZXh0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHZhciBjaGlsZENvdW50ID0gdGhpcy5jaGlsZENvdW50LFxuICAgICAgICAgIHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBzdGF0ZSA9IHRoaXMuc3RhdGU7XG4gICAgICB2YXIgYWN0aXZlSW5kZXggPSBzdGF0ZS5hY3RpdmVJbmRleCxcbiAgICAgICAgICBzbGlkZUJ5ID0gc3RhdGUuc2xpZGVCeTtcbiAgICAgIHZhciBpbmZpbml0ZSA9IHByb3BzLmluZmluaXRlO1xuXG4gICAgICB2YXIgZmlyc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbGFzdEluZGV4ID0gY2hpbGRDb3VudCAtIHNsaWRlQnk7XG5cbiAgICAgIGlmICghc2xpZGVCeSkge1xuICAgICAgICB2YXIgX2dldFBhcnRpYWxseU9ic2N1cmVkID0gdGhpcy5nZXRQYXJ0aWFsbHlPYnNjdXJlZFNsaWRlcygpLFxuICAgICAgICAgICAgX2dldFBhcnRpYWxseU9ic2N1cmVkMiA9IF9zbGljZWRUb0FycmF5KF9nZXRQYXJ0aWFsbHlPYnNjdXJlZCwgMiksXG4gICAgICAgICAgICBfID0gX2dldFBhcnRpYWxseU9ic2N1cmVkMlswXSxcbiAgICAgICAgICAgIG5leHRTbGlkZSA9IF9nZXRQYXJ0aWFsbHlPYnNjdXJlZDJbMV07XG5cbiAgICAgICAgdmFyIG5leHRJbmZpbnRlU2xpZGUgPSBuZXh0U2xpZGUgPT09IGNoaWxkQ291bnQgLSAxID8gMCA6IG5leHRTbGlkZTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2xpZGVUbyhpbmZpbml0ZSA/IG5leHRJbmZpbnRlU2xpZGUgOiBuZXh0U2xpZGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgbmV4dEFjdGl2ZUNhbmRpZGF0ZSA9IGFjdGl2ZUluZGV4ICsgc2xpZGVCeTtcbiAgICAgIHZhciBuZXh0QWN0aXZlID0gTWF0aC5taW4obmV4dEFjdGl2ZUNhbmRpZGF0ZSwgbGFzdEluZGV4KTtcbiAgICAgIHZhciBuZXh0QWN0aXZlSW5maW5pdGUgPSBhY3RpdmVJbmRleCA9PT0gbGFzdEluZGV4ID8gZmlyc3RJbmRleCA6IG5leHRBY3RpdmU7XG4gICAgICByZXR1cm4gdGhpcy5zbGlkZVRvKGluZmluaXRlID8gbmV4dEFjdGl2ZUluZmluaXRlIDogbmV4dEFjdGl2ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncHJldicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByZXYoKSB7XG4gICAgICB2YXIgY2hpbGRDb3VudCA9IHRoaXMuY2hpbGRDb3VudCxcbiAgICAgICAgICBzdGF0ZSA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgcHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gc3RhdGUuYWN0aXZlSW5kZXgsXG4gICAgICAgICAgc2xpZGVCeSA9IHN0YXRlLnNsaWRlQnk7XG4gICAgICB2YXIgaW5maW5pdGUgPSBwcm9wcy5pbmZpbml0ZTtcblxuICAgICAgdmFyIGZpcnN0SW5kZXggPSAwO1xuICAgICAgdmFyIGxhc3RJbmRleCA9IGNoaWxkQ291bnQgLSBzbGlkZUJ5O1xuXG4gICAgICBpZiAoIXNsaWRlQnkpIHtcbiAgICAgICAgdmFyIHByZXZTbGlkZSA9IE1hdGgubWF4KGFjdGl2ZUluZGV4IC0gMSwgZmlyc3RJbmRleCk7XG4gICAgICAgIHZhciBwcmV2SW5maW50ZVNsaWRlID0gcHJldlNsaWRlID09PSBhY3RpdmVJbmRleCA/IGNoaWxkQ291bnQgLSAxIDogcHJldlNsaWRlO1xuICAgICAgICByZXR1cm4gdGhpcy5zbGlkZVRvKGluZmluaXRlID8gcHJldkluZmludGVTbGlkZSA6IHByZXZTbGlkZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXh0QWN0aXZlID0gTWF0aC5tYXgoYWN0aXZlSW5kZXggLSBzbGlkZUJ5LCBmaXJzdEluZGV4KTtcbiAgICAgIHZhciBuZXh0QWN0aXZlSW5maW5pdGUgPSBhY3RpdmVJbmRleCA9PT0gZmlyc3RJbmRleCA/IGxhc3RJbmRleCA6IG5leHRBY3RpdmU7XG4gICAgICByZXR1cm4gdGhpcy5zbGlkZVRvKGluZmluaXRlID8gbmV4dEFjdGl2ZUluZmluaXRlIDogbmV4dEFjdGl2ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2xpZGVUbycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNsaWRlVG8oaW5kZXgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3JlZjUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LFxuICAgICAgICAgIF9yZWY1JGltbWVkaWF0ZSA9IF9yZWY1LmltbWVkaWF0ZSxcbiAgICAgICAgICBpbW1lZGlhdGUgPSBfcmVmNSRpbW1lZGlhdGUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3JlZjUkaW1tZWRpYXRlO1xuXG4gICAgICBpZiAodGhpcy5jaGlsZENvdW50ID09PSAwKSByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ05vIGNoaWxkcmVuIHRvIHNsaWRlIHRvJyk7XG4gICAgICBpZiAoIXRoaXMud2hpcmxpZ2lnKSByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ1RoZSBXaGlybGlnaWcgaXMgbm90IG1vdW50ZWQnKTtcbiAgICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGFmdGVyU2xpZGUgPSBfcHJvcHMuYWZ0ZXJTbGlkZSxcbiAgICAgICAgICBiZWZvcmVTbGlkZSA9IF9wcm9wcy5iZWZvcmVTbGlkZSxcbiAgICAgICAgICBlYXNpbmcgPSBfcHJvcHMuZWFzaW5nLFxuICAgICAgICAgIGR1cmF0aW9uID0gX3Byb3BzLmFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICAgIGluZmluaXRlID0gX3Byb3BzLmluZmluaXRlLFxuICAgICAgICAgIHByZXZlbnRTY3JvbGwgPSBfcHJvcHMucHJldmVudFNjcm9sbDtcbiAgICAgIHZhciBfd2hpcmxpZ2lnID0gdGhpcy53aGlybGlnaWcsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfd2hpcmxpZ2lnLmNoaWxkcmVuLFxuICAgICAgICAgIHNjcm9sbExlZnQgPSBfd2hpcmxpZ2lnLnNjcm9sbExlZnQ7XG5cbiAgICAgIHZhciBzbGlkZUluZGV4ID0gbm9ybWFsaXplSW5kZXgoaW5kZXgsIHRoaXMuY2hpbGRDb3VudCwgaW5maW5pdGUpO1xuICAgICAgdmFyIHN0YXJ0aW5nSW5kZXggPSB0aGlzLnN0YXRlLmFjdGl2ZUluZGV4O1xuICAgICAgdmFyIGRlbHRhID0gY2hpbGRyZW5bc2xpZGVJbmRleF0ub2Zmc2V0TGVmdCAtIHNjcm9sbExlZnQ7XG4gICAgICBpZiAoc3RhcnRpbmdJbmRleCAhPT0gc2xpZGVJbmRleCkge1xuICAgICAgICBiZWZvcmVTbGlkZShpbmRleCk7XG4gICAgICB9XG4gICAgICB0aGlzLnNldFN0YXRlKHsgaXNBbmltYXRpbmc6IHRydWUsIGFjdGl2ZUluZGV4OiBzbGlkZUluZGV4IH0pO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXMsIF8pIHtcbiAgICAgICAgaWYgKGltbWVkaWF0ZSkge1xuICAgICAgICAgIF90aGlzMy53aGlybGlnaWcuc2Nyb2xsTGVmdCA9IGNoaWxkcmVuW3NsaWRlSW5kZXhdLm9mZnNldExlZnQ7XG4gICAgICAgICAgcmV0dXJuIHJlcygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBvcmlnaW5hbE92ZXJmbG93WCA9IHByZXZlbnRTY3JvbGwgPyAnaGlkZGVuJyA6ICdhdXRvJztcbiAgICAgICAgICByZXR1cm4gcmVzKCgwLCBfdXRpbHMuYW5pbWF0ZSkoX3RoaXMzLndoaXJsaWdpZywgeyBwcm9wOiAnc2Nyb2xsTGVmdCcsIGRlbHRhOiBkZWx0YSwgZWFzaW5nOiBlYXNpbmcsIGR1cmF0aW9uOiBkdXJhdGlvbiwgb3JpZ2luYWxPdmVyZmxvd1g6IG9yaWdpbmFsT3ZlcmZsb3dYIH0pKTtcbiAgICAgICAgfVxuICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMy5zZXRTdGF0ZSh7IGlzQW5pbWF0aW5nOiBmYWxzZSB9KTtcbiAgICAgICAgaWYgKHN0YXJ0aW5nSW5kZXggIT09IHNsaWRlSW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gYWZ0ZXJTbGlkZShzbGlkZUluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKF8pIHtcbiAgICAgICAgX3RoaXMzLnNldFN0YXRlKHsgaXNBbmltYXRpbmc6IGZhbHNlIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF9wcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGFmdGVyU2xpZGUgPSBfcHJvcHMyLmFmdGVyU2xpZGUsXG4gICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb24gPSBfcHJvcHMyLmFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICAgIGJlZm9yZVNsaWRlID0gX3Byb3BzMi5iZWZvcmVTbGlkZSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9wcm9wczIuY2hpbGRyZW4sXG4gICAgICAgICAgY2xhc3NOYW1lID0gX3Byb3BzMi5jbGFzc05hbWUsXG4gICAgICAgICAgZWFzaW5nID0gX3Byb3BzMi5lYXNpbmcsXG4gICAgICAgICAgaW5maW5pdGUgPSBfcHJvcHMyLmluZmluaXRlLFxuICAgICAgICAgIGlubmVyUmVmID0gX3Byb3BzMi5pbm5lclJlZixcbiAgICAgICAgICBndXR0ZXIgPSBfcHJvcHMyLmd1dHRlcixcbiAgICAgICAgICBuZXh0S2V5cyA9IF9wcm9wczIubmV4dEtleXMsXG4gICAgICAgICAgcHJldktleXMgPSBfcHJvcHMyLnByZXZLZXlzLFxuICAgICAgICAgIHByZXZlbnRTY3JvbGwgPSBfcHJvcHMyLnByZXZlbnRTY3JvbGwsXG4gICAgICAgICAgcHJldmVudEF1dG9Db3JyZWN0ID0gX3Byb3BzMi5wcmV2ZW50QXV0b0NvcnJlY3QsXG4gICAgICAgICAgcHJldmVudFN3aXBlID0gX3Byb3BzMi5wcmV2ZW50U3dpcGUsXG4gICAgICAgICAgc25hcFRvU2xpZGUgPSBfcHJvcHMyLnNuYXBUb1NsaWRlLFxuICAgICAgICAgIG9uU2xpZGVDbGljayA9IF9wcm9wczIub25TbGlkZUNsaWNrLFxuICAgICAgICAgIHNsaWRlQ2xhc3MgPSBfcHJvcHMyLnNsaWRlQ2xhc3MsXG4gICAgICAgICAgc2xpZGVUbyA9IF9wcm9wczIuc2xpZGVUbyxcbiAgICAgICAgICBzbGlkZUJ5ID0gX3Byb3BzMi5zbGlkZUJ5LFxuICAgICAgICAgIHN0YXJ0QXQgPSBfcHJvcHMyLnN0YXJ0QXQsXG4gICAgICAgICAgc3R5bGUgPSBfcHJvcHMyLnN0eWxlLFxuICAgICAgICAgIHZpc2libGVTbGlkZXMgPSBfcHJvcHMyLnZpc2libGVTbGlkZXMsXG4gICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzMiwgWydhZnRlclNsaWRlJywgJ2FuaW1hdGlvbkR1cmF0aW9uJywgJ2JlZm9yZVNsaWRlJywgJ2NoaWxkcmVuJywgJ2NsYXNzTmFtZScsICdlYXNpbmcnLCAnaW5maW5pdGUnLCAnaW5uZXJSZWYnLCAnZ3V0dGVyJywgJ25leHRLZXlzJywgJ3ByZXZLZXlzJywgJ3ByZXZlbnRTY3JvbGwnLCAncHJldmVudEF1dG9Db3JyZWN0JywgJ3ByZXZlbnRTd2lwZScsICdzbmFwVG9TbGlkZScsICdvblNsaWRlQ2xpY2snLCAnc2xpZGVDbGFzcycsICdzbGlkZVRvJywgJ3NsaWRlQnknLCAnc3RhcnRBdCcsICdzdHlsZScsICd2aXNpYmxlU2xpZGVzJ10pO1xuXG4gICAgICB2YXIgcHJldmVudFNjcm9sbGluZyA9IHByZXZlbnRTY3JvbGwgPyAnaGlkZGVuJyA6ICdhdXRvJztcbiAgICAgIHZhciBzdHlsZXMgPSB7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleEZsb3c6ICdyb3cgbm93cmFwJyxcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICAgICAgb3ZlcmZsb3dYOiBwcmV2ZW50U2Nyb2xsaW5nLFxuICAgICAgICBtc092ZXJmbG93U3R5bGU6ICctbXMtYXV0b2hpZGluZy1zY3JvbGxiYXInLCAvKiBjaHJvbWUgbGlrZSBzY3JvbGxiYXIgZXhwZXJpZW5jZSBmb3IgSUUvRWRnZSAqL1xuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJywgLyogbWFrZXMgLndoaXJsaWdpZyBhbiBvZmZzZXQgcGFyZW50ICovXG4gICAgICAgIHRyYW5zaXRpb246ICdhbGwgLjI1cyBlYXNlLWluLXF1aW50JyxcbiAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgICBXZWJraXRPdmVyZmxvd1Njcm9sbGluZzogJ3RvdWNoJ1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAgX2V4dGVuZHMoe1xuICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7fSwgc3R5bGUsIHN0eWxlcyksXG4gICAgICAgICAgcmVmOiB0aGlzLnNldFJlZignd2hpcmxpZ2lnJyksXG4gICAgICAgICAgdGFiSW5kZXg6ICcwJyxcbiAgICAgICAgICBvbktleVVwOiB0aGlzLmhhbmRsZUtleVVwXG4gICAgICAgIH0sIHByb3BzKSxcbiAgICAgICAgX3JlYWN0LkNoaWxkcmVuLm1hcCh0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbih0aGlzLm5leHQsIHRoaXMucHJldikgOiBjaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkLCBpKSB7XG4gICAgICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgX3NsaWRlMi5kZWZhdWx0LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBjbGFzc05hbWU6IHNsaWRlQ2xhc3MsXG4gICAgICAgICAgICAgIGtleTogJ3NsaWRlLScgKyBpLFxuICAgICAgICAgICAgICBiYXNpczogdmlzaWJsZVNsaWRlcyA/ICdjYWxjKCgxMDAlIC0gKCcgKyBndXR0ZXIgKyAnICogJyArICh2aXNpYmxlU2xpZGVzIC0gMSkgKyAnKSkgLyAnICsgdmlzaWJsZVNsaWRlcyArICcpJyA6ICdhdXRvJyxcbiAgICAgICAgICAgICAgZ3V0dGVyOiBpID4gMCA/IGd1dHRlciA6ICcnLFxuICAgICAgICAgICAgICBvbkNsaWNrOiBvblNsaWRlQ2xpY2tcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZFxuICAgICAgICAgICk7XG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBXaGlybGlnaWc7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5XaGlybGlnaWcuZGVmYXVsdFByb3BzID0ge1xuICBhZnRlclNsaWRlOiBmdW5jdGlvbiBhZnRlclNsaWRlKCkge30sXG4gIGFuaW1hdGlvbkR1cmF0aW9uOiA1MDAsXG4gIGJlZm9yZVNsaWRlOiBmdW5jdGlvbiBiZWZvcmVTbGlkZSgpIHt9LFxuICBndXR0ZXI6ICcxZW0nLFxuICBuZXh0S2V5czogWydBcnJvd1JpZ2h0J10sXG4gIHByZXZLZXlzOiBbJ0Fycm93TGVmdCddLFxuICBwcmV2ZW50QXV0b0NvcnJlY3Q6IGZhbHNlLFxuICBwcmV2ZW50U2Nyb2xsOiBmYWxzZSxcbiAgcHJldmVudFN3aXBlOiBmYWxzZSxcbiAgc25hcFRvU2xpZGU6IGZhbHNlLFxuICBzdGFydEF0OiAwLFxuICBzdHlsZToge31cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBXaGlybGlnaWc7XG5cbi8qKiovIH0pLFxuLyogMjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9yZWFjdCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbnZhciBTbGlkZSA9IGZ1bmN0aW9uIFNsaWRlKF9yZWYpIHtcbiAgdmFyIF9yZWYkYmFzaXMgPSBfcmVmLmJhc2lzLFxuICAgICAgYmFzaXMgPSBfcmVmJGJhc2lzID09PSB1bmRlZmluZWQgPyAnMTAwJScgOiBfcmVmJGJhc2lzLFxuICAgICAgX3JlZiRndXR0ZXIgPSBfcmVmLmd1dHRlcixcbiAgICAgIGd1dHRlciA9IF9yZWYkZ3V0dGVyID09PSB1bmRlZmluZWQgPyAnMWVtJyA6IF9yZWYkZ3V0dGVyLFxuICAgICAgX3JlZiRjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYkY2xhc3NOYW1lID09PSB1bmRlZmluZWQgPyAnJyA6IF9yZWYkY2xhc3NOYW1lLFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWydiYXNpcycsICdndXR0ZXInLCAnY2xhc3NOYW1lJywgJ2NoaWxkcmVuJ10pO1xuXG4gIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICBfZXh0ZW5kcyh7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGZsZXg6ICcwIDAgYXV0bycsXG4gICAgICAgIHdpZHRoOiBiYXNpcyxcbiAgICAgICAgbWFyZ2luTGVmdDogZ3V0dGVyXG4gICAgICB9XG4gICAgfSwgcHJvcHMpLFxuICAgIGNoaWxkcmVuXG4gICk7XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBTbGlkZTtcblxuLyoqKi8gfSksXG4vKiAyMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcmVhY3REb20gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX3V0aWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcblxudmFyIF93aGlybGlnaWcgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKTtcblxudmFyIF93aGlybGlnaWcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2hpcmxpZ2lnKTtcblxudmFyIF9tYXJrZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIzKTtcblxudmFyIF9tYXJrZWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbWFya2VkKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGlzQ2hlY2thYmxlID0gZnVuY3Rpb24gaXNDaGVja2FibGUodHlwZSkge1xuICByZXR1cm4gKDAsIF91dGlscy5pbmNsdWRlcykodHlwZSwgWydjaGVja2JveCcsICdyYWRpbyddKTtcbn07XG52YXIgY29lcmNlVGFibGUgPSB7XG4gIG51bWJlcjogTnVtYmVyLFxuICBmdW5jOiBmdW5jdGlvbiBmdW5jKGZuKSB7XG4gICAgcmV0dXJuIEZ1bmN0aW9uKGZuKSgpO1xuICB9LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIGNoZWNrYm94OiBCb29sZWFuLFxuICByYWRpbzogQm9vbGVhblxufTtcbnZhciBjb2VyY2VWYWx1ZVRvVHlwZSA9IGZ1bmN0aW9uIGNvZXJjZVZhbHVlVG9UeXBlKF9yZWYpIHtcbiAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsXG4gICAgICB2YWx1ZSA9IF9yZWYudmFsdWU7XG5cbiAgdmFyIGNvZXJjZXIgPSB0eXBlIGluIGNvZXJjZVRhYmxlID8gY29lcmNlVGFibGVbdHlwZV0gOiBmdW5jdGlvbiAoaWRlbnQpIHtcbiAgICByZXR1cm4gaWRlbnQ7XG4gIH07XG4gIHJldHVybiBjb2VyY2VyKHZhbHVlKTtcbn07XG5cbnZhciBTbGlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU2xpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTbGlkZXIoKSB7XG4gICAgdmFyIF9yZWYyO1xuXG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTbGlkZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX3JlZjIgPSBTbGlkZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTbGlkZXIpKS5jYWxsLmFwcGx5KF9yZWYyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBhZnRlclNsaWRlOiBfdGhpcy5wcm9wcy5hZnRlclNsaWRlLFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IF90aGlzLnByb3BzLmFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgYmVmb3JlU2xpZGU6IF90aGlzLnByb3BzLmJlZm9yZVNsaWRlLFxuICAgICAgY2xhc3NOYW1lOiBfdGhpcy5wcm9wcy5jbGFzc05hbWUsXG4gICAgICBlYXNpbmc6IF90aGlzLnByb3BzLmVhc2luZyxcbiAgICAgIGluZmluaXRlOiBfdGhpcy5wcm9wcy5pbmZpbml0ZSxcbiAgICAgIGd1dHRlcjogX3RoaXMucHJvcHMuZ3V0dGVyLFxuICAgICAgb25TbGlkZUNsaWNrOiBfdGhpcy5wcm9wcy5vblNsaWRlQ2xpY2ssXG4gICAgICBwcmV2ZW50U2Nyb2xsOiBfdGhpcy5wcm9wcy5wcmV2ZW50U2Nyb2xsLFxuICAgICAgc25hcFRvU2xpZGU6IF90aGlzLnByb3BzLnNuYXBUb1NsaWRlLFxuICAgICAgc2xpZGVCeTogX3RoaXMucHJvcHMuc2xpZGVCeSxcbiAgICAgIHNsaWRlQ2xhc3M6IF90aGlzLnByb3BzLnNsaWRlQ2xhc3MsXG4gICAgICBzbGlkZVRvOiBfdGhpcy5wcm9wcy5zbGlkZVRvLFxuICAgICAgc3RhcnRBdDogX3RoaXMucHJvcHMuc3RhcnRBdCxcbiAgICAgIHZpc2libGVTbGlkZXM6IF90aGlzLnByb3BzLnZpc2libGVTbGlkZXNcbiAgICB9LCBfdGhpcy5oYW5kbGVBZnRlclNsaWRlID0gZnVuY3Rpb24gKGN1cnJlbnRTbGlkZSkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoeyBjdXJyZW50U2xpZGU6IGN1cnJlbnRTbGlkZSB9KTtcbiAgICB9LCBfdGhpcy5zZXRSZWYgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgICAgX3RoaXNbbmFtZV0gPSByZWY7XG4gICAgICB9O1xuICAgIH0sIF90aGlzLnNldFN0YXRlRnJvbUlucHV0ID0gZnVuY3Rpb24gKHByb3BOYW1lKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBfcmVmMy50YXJnZXQ7XG4gICAgICAgIHZhciBjaGVja2VkID0gdGFyZ2V0LmNoZWNrZWQsXG4gICAgICAgICAgICB0eXBlID0gdGFyZ2V0LnR5cGU7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoX2RlZmluZVByb3BlcnR5KHt9LCBwcm9wTmFtZSwgaXNDaGVja2FibGUodHlwZSkgPyBjaGVja2VkIDogY29lcmNlVmFsdWVUb1R5cGUodGFyZ2V0KSkpO1xuICAgICAgfTtcbiAgICB9LCBfdGhpcy5Db250cm9sID0gZnVuY3Rpb24gKF9yZWY0KSB7XG4gICAgICB2YXIgbGFiZWwgPSBfcmVmNC5sYWJlbCxcbiAgICAgICAgICB0eXBlID0gX3JlZjQudHlwZSxcbiAgICAgICAgICBuYW1lID0gX3JlZjQubmFtZTtcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgeyBodG1sRm9yOiBuYW1lLCBjbGFzc05hbWU6ICdvcHRpb24nIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICB7IGNsYXNzTmFtZTogJ2xhYmVsJyB9LFxuICAgICAgICAgIGxhYmVsXG4gICAgICAgICksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCdpbnB1dCcsIHtcbiAgICAgICAgICB0eXBlOiB0eXBlLFxuICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgaWQ6IG5hbWUsXG4gICAgICAgICAgY2hlY2tlZDogaXNDaGVja2FibGUodHlwZSkgJiYgX3RoaXMuc3RhdGVbbmFtZV0sXG4gICAgICAgICAgdmFsdWU6IGlzQ2hlY2thYmxlKHR5cGUpID8gbmFtZSA6IF90aGlzLnN0YXRlW25hbWVdLFxuICAgICAgICAgIG9uQ2hhbmdlOiBfdGhpcy5zZXRTdGF0ZUZyb21JbnB1dChuYW1lKVxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTbGlkZXIsIFt7XG4gICAga2V5OiAnY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgYWZ0ZXJTbGlkZTogbmV4dFByb3BzLmFmdGVyU2xpZGUsXG4gICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBuZXh0UHJvcHMuYW5pbWF0aW9uRHVyYXRpb24sXG4gICAgICAgIGJlZm9yZVNsaWRlOiBuZXh0UHJvcHMuYmVmb3JlU2xpZGUsXG4gICAgICAgIGNsYXNzTmFtZTogbmV4dFByb3BzLmNsYXNzTmFtZSxcbiAgICAgICAgZWFzaW5nOiBuZXh0UHJvcHMuZWFzaW5nLFxuICAgICAgICBpbmZpbml0ZTogbmV4dFByb3BzLmluZmluaXRlLFxuICAgICAgICBndXR0ZXI6IG5leHRQcm9wcy5ndXR0ZXIsXG4gICAgICAgIG9uU2xpZGVDbGljazogbmV4dFByb3BzLm9uU2xpZGVDbGljayxcbiAgICAgICAgcHJldmVudFNjcm9sbDogbmV4dFByb3BzLnByZXZlbnRTY3JvbGwsXG4gICAgICAgIHNuYXBUb1NsaWRlOiBuZXh0UHJvcHMuc25hcFRvU2xpZGUsXG4gICAgICAgIHNsaWRlQnk6IG5leHRQcm9wcy5zbGlkZUJ5LFxuICAgICAgICBzbGlkZUNsYXNzOiBuZXh0UHJvcHMuc2xpZGVDbGFzcyxcbiAgICAgICAgc2xpZGVUbzogbmV4dFByb3BzLnNsaWRlVG8sXG4gICAgICAgIHN0YXJ0QXQ6IG5leHRQcm9wcy5zdGFydEF0LFxuICAgICAgICB2aXNpYmxlU2xpZGVzOiBuZXh0UHJvcHMudmlzaWJsZVNsaWRlc1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY29tcG9uZW50RGlkTW91bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBwZXJzaXN0ZWRTdGF0ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncmVhY3Qtd2hpcmxpZ2lnJyk7XG4gICAgICAgIGlmIChwZXJzaXN0ZWRTdGF0ZSkge1xuICAgICAgICAgIHZhciBzdGF0ZSA9IEpTT04ucGFyc2UocGVyc2lzdGVkU3RhdGUpO1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChfKSB7fVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NvbXBvbmVudERpZFVwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVhY3Qtd2hpcmxpZ2lnJywgSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgICAgdmFyIF9zdGF0ZSA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb24gPSBfc3RhdGUuYW5pbWF0aW9uRHVyYXRpb24sXG4gICAgICAgICAgYmVmb3JlU2xpZGUgPSBfc3RhdGUuYmVmb3JlU2xpZGUsXG4gICAgICAgICAgY2xhc3NOYW1lID0gX3N0YXRlLmNsYXNzTmFtZSxcbiAgICAgICAgICBlYXNpbmcgPSBfc3RhdGUuZWFzaW5nLFxuICAgICAgICAgIGluZmluaXRlID0gX3N0YXRlLmluZmluaXRlLFxuICAgICAgICAgIGd1dHRlciA9IF9zdGF0ZS5ndXR0ZXIsXG4gICAgICAgICAgb25TbGlkZUNsaWNrID0gX3N0YXRlLm9uU2xpZGVDbGljayxcbiAgICAgICAgICBwcmV2ZW50U2Nyb2xsID0gX3N0YXRlLnByZXZlbnRTY3JvbGwsXG4gICAgICAgICAgc25hcFRvU2xpZGUgPSBfc3RhdGUuc25hcFRvU2xpZGUsXG4gICAgICAgICAgc2xpZGVCeSA9IF9zdGF0ZS5zbGlkZUJ5LFxuICAgICAgICAgIHNsaWRlQ2xhc3MgPSBfc3RhdGUuc2xpZGVDbGFzcyxcbiAgICAgICAgICBzbGlkZVRvID0gX3N0YXRlLnNsaWRlVG8sXG4gICAgICAgICAgc3RhcnRBdCA9IF9zdGF0ZS5zdGFydEF0LFxuICAgICAgICAgIHZpc2libGVTbGlkZXMgPSBfc3RhdGUudmlzaWJsZVNsaWRlcztcblxuICAgICAgdmFyIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICByZXR1cm4gX3RoaXMyLndoaXJsaWdpZy5uZXh0KCkuY2F0Y2goZnVuY3Rpb24gKCkge30pO1xuICAgICAgfTtcbiAgICAgIHZhciBwcmV2ID0gZnVuY3Rpb24gcHJldigpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi53aGlybGlnaWcucHJldigpLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTtcbiAgICAgIH07XG4gICAgICB2YXIgYWZ0ZXIgPSBmdW5jdGlvbiBhZnRlcihpZHgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVBZnRlclNsaWRlKGlkeCk7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgeyBjbGFzc05hbWU6ICdzbGlkZXInIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICBfd2hpcmxpZ2lnMi5kZWZhdWx0LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBhZnRlclNsaWRlOiBhZnRlcixcbiAgICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICAgICAgICBiZWZvcmVTbGlkZTogYmVmb3JlU2xpZGUsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICAgICAgICBlYXNpbmc6IGVhc2luZyxcbiAgICAgICAgICAgICAgaW5maW5pdGU6IGluZmluaXRlLFxuICAgICAgICAgICAgICBndXR0ZXI6IGd1dHRlcixcbiAgICAgICAgICAgICAgb25TbGlkZUNsaWNrOiBvblNsaWRlQ2xpY2ssXG4gICAgICAgICAgICAgIHByZXZlbnRTY3JvbGw6IHByZXZlbnRTY3JvbGwsXG4gICAgICAgICAgICAgIHNuYXBUb1NsaWRlOiBzbmFwVG9TbGlkZSxcbiAgICAgICAgICAgICAgcmVmOiB0aGlzLnNldFJlZignd2hpcmxpZ2lnJyksXG4gICAgICAgICAgICAgIHNsaWRlQnk6IHNsaWRlQnksXG4gICAgICAgICAgICAgIHNsaWRlQ2xhc3M6IHNsaWRlQ2xhc3MsXG4gICAgICAgICAgICAgIHNsaWRlVG86IHNsaWRlVG8sXG4gICAgICAgICAgICAgIHN0YXJ0QXQ6IHN0YXJ0QXQsXG4gICAgICAgICAgICAgIHZpc2libGVTbGlkZXM6IHZpc2libGVTbGlkZXNcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlblxuICAgICAgICAgICksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICAgIHsgY2xhc3NOYW1lOiAnY29udHJvbHMnIH0sXG4gICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJywgeyBjbGFzc05hbWU6ICdwcmV2QnV0dG9uJywgb25DbGljazogcHJldiB9KSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCdidXR0b24nLCB7IGNsYXNzTmFtZTogJ25leHRCdXR0b24nLCBvbkNsaWNrOiBuZXh0IH0pXG4gICAgICAgICAgKVxuICAgICAgICApLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAnZGl2JyxcbiAgICAgICAgICB7IGNsYXNzTmFtZTogJ29wdGlvbnMnIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAnc3BhbicsXG4gICAgICAgICAgICB7IGNsYXNzTmFtZTogJ29wdGlvbiBjdXJyZW50U2xpZGUnIH0sXG4gICAgICAgICAgICAnQ3VycmVudCBzbGlkZSBpcyAnLFxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5jdXJyZW50U2xpZGVcbiAgICAgICAgICApLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ2FmdGVyU2xpZGUnLCB0eXBlOiAnZnVuYycsIG5hbWU6ICdhZnRlclNsaWRlJyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICdhbmltYXRpb25EdXJhdGlvbicsIHR5cGU6ICdudW1iZXInLCBuYW1lOiAnYW5pbWF0aW9uRHVyYXRpb24nIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ2JlZm9yZVNsaWRlJywgdHlwZTogJ2Z1bmMnLCBuYW1lOiAnYmVmb3JlU2xpZGUnIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ2NsYXNzTmFtZScsIHR5cGU6ICd0ZXh0JywgbmFtZTogJ2NsYXNzTmFtZScgfSksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodGhpcy5Db250cm9sLCB7IGxhYmVsOiAnZWFzaW5nJywgdHlwZTogJ2Z1bmMnLCBuYW1lOiAnZWFzaW5nJyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICdpbmZpbml0ZScsIHR5cGU6ICdjaGVja2JveCcsIG5hbWU6ICdpbmZpbml0ZScgfSksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodGhpcy5Db250cm9sLCB7IGxhYmVsOiAnZ3V0dGVyJywgdHlwZTogJ3RleHQnLCBuYW1lOiAnZ3V0dGVyJyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICdvblNsaWRlQ2xpY2snLCB0eXBlOiAnZnVuYycsIG5hbWU6ICdvblNsaWRlQ2xpY2snIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ3ByZXZlbnRTY3JvbGwnLCB0eXBlOiAnY2hlY2tib3gnLCBuYW1lOiAncHJldmVudFNjcm9sbCcgfSksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodGhpcy5Db250cm9sLCB7IGxhYmVsOiAnc25hcFRvU2xpZGUnLCB0eXBlOiAnY2hlY2tib3gnLCBuYW1lOiAnc25hcFRvU2xpZGUnIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ3NsaWRlQnknLCB0eXBlOiAnbnVtYmVyJywgbmFtZTogJ3NsaWRlQnknIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHRoaXMuQ29udHJvbCwgeyBsYWJlbDogJ3NsaWRlQ2xhc3MnLCB0eXBlOiAndGV4dCcsIG5hbWU6ICdzbGlkZUNsYXNzJyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICdzbGlkZVRvJywgdHlwZTogJ251bWJlcicsIG5hbWU6ICdzbGlkZVRvJyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICdzdGFydEF0JywgdHlwZTogJ251bWJlcicsIG5hbWU6ICdzdGFydEF0JyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLkNvbnRyb2wsIHsgbGFiZWw6ICd2aXNpYmxlU2xpZGVzJywgdHlwZTogJ251bWJlcicsIG5hbWU6ICd2aXNpYmxlU2xpZGVzJyB9KVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTbGlkZXI7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5TbGlkZXIuZGVmYXVsdFByb3BzID0ge1xuICBhZnRlclNsaWRlOiBmdW5jdGlvbiBhZnRlclNsaWRlKG5ld0luZGV4KSB7XG4gICAgcmV0dXJuIGNvbnNvbGUubG9nKCdzbGlkIHRvIGluZGV4ICcgKyBuZXdJbmRleCk7XG4gIH0sXG4gIGFuaW1hdGlvbkR1cmF0aW9uOiAzMDAsXG4gIGJlZm9yZVNsaWRlOiBmdW5jdGlvbiBiZWZvcmVTbGlkZShuZXdJbmRleCkge1xuICAgIHJldHVybiBjb25zb2xlLmxvZygnYWJvdXQgdG8gc2xpZGUgdG8gaW5kZXggJyArIG5ld0luZGV4KTtcbiAgfSxcbiAgY2xhc3NOYW1lOiAnd2hpcmxpZ2lnJyxcbiAgZ3V0dGVyOiAnMWVtJyxcbiAgb25TbGlkZUNsaWNrOiBmdW5jdGlvbiBvblNsaWRlQ2xpY2soKSB7XG4gICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIG9uIGEgc2xpZGUhJyk7XG4gIH0sXG4gIGVhc2luZzogZnVuY3Rpb24gZWFzaW5nKHQpIHtcbiAgICByZXR1cm4gdDtcbiAgfSxcbiAgaW5maW5pdGU6IGZhbHNlLFxuICBwcmV2ZW50U2Nyb2xsOiBmYWxzZSxcbiAgc2xpZGVDbGFzczogJ3NsaWRlQ2xhc3NOYW1lJyxcbiAgc2xpZGVCeTogMCxcbiAgc2xpZGVUbzogMCxcbiAgc25hcFRvU2xpZGU6IGZhbHNlLFxuICBzdGFydEF0OiAwLFxuICB2aXNpYmxlU2xpZGVzOiAwXG59O1xuXG5cbnZhciBzbGlkZXMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KEFycmF5KDcpLmZpbGwoKS5tYXAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHNyYzogJ2h0dHBzOi8vcGxhY2ViZWFyZC5pdCcsXG4gICAgaGVpZ2h0OiAzMDAsXG4gICAgd2lkdGg6IDMwMCxcbiAgICBqb2luZXI6ICd4J1xuICB9O1xufSkpLCBbe1xuICB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnaDMnLFxuICAgIG51bGwsXG4gICAgWydpdCcsICduZWVkJywgJ25vdCcsICdvbmx5JywgJ2JlJywgJ2JlYXJkcyEnXS5tYXAoZnVuY3Rpb24gKHQpIHtcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgJ3NwYW4nLFxuICAgICAgICB7IGtleTogdCwgY2xhc3NOYW1lOiAnbGluZSBhbGlnbi1yaWdodCcgfSxcbiAgICAgICAgdFxuICAgICAgKTtcbiAgICB9KVxuICApXG59LCB7XG4gIHNyYzogJ2h0dHBzOi8vZmlsbG11cnJheS5jb20nLFxuICBoZWlnaHQ6IDMwMCxcbiAgd2lkdGg6IDMwMCxcbiAgam9pbmVyOiAnLydcbn0sIHtcbiAgdGV4dDogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ2gzJyxcbiAgICBudWxsLFxuICAgIFsnaXQnLCAnY2FuJywgJ2JlJywgJ2FueXRoaW5nJywgJ3lvdScsICd3YW50ISddLm1hcChmdW5jdGlvbiAodCkge1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnc3BhbicsXG4gICAgICAgIHsga2V5OiB0LCBjbGFzc05hbWU6ICdsaW5lIGFsaWduLWxlZnQnIH0sXG4gICAgICAgIHRcbiAgICAgICk7XG4gICAgfSlcbiAgKVxufSwgeyB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnaDMnLFxuICAgIG51bGwsXG4gICAgJ0ZlYXR1cmluZzonXG4gICkgfSwgeyB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAncCcsXG4gICAgbnVsbCxcbiAgICAnQSBuYXRpdmUgc2Nyb2xsaW5nIFwid2hpcmxpZ2lnXCInXG4gICkgfSwgeyB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAncCcsXG4gICAgbnVsbCxcbiAgICAnc25hcC10by1zbGlkZSBvcHRpb24nXG4gICkgfSwgeyB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAncCcsXG4gICAgbnVsbCxcbiAgICAnc2V0IHRoZSBudW1iZXIgb2Ygc2xpZGUgdmlzaWJsZSBhdCBhIHRpbWUnXG4gICkgfSwgeyB0ZXh0OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAncCcsXG4gICAgbnVsbCxcbiAgICAnc3RhcnQgYXQgYW55IHNsaWRlIHlvdSB3YW50J1xuICApIH0sIHsgdGV4dDogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ3AnLFxuICAgIG51bGwsXG4gICAgJ3NsaWRlIGluZGVjaWVzIGFyZSBub3JtYWxpemVkIHRvIHN0YXkgd2l0aGluIHRoZSBzbGlkZSBjb3VudCByYW5nZSdcbiAgKSB9XSk7XG5cbnZhciBEZW1vID0gZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gIF9pbmhlcml0cyhEZW1vLCBfQ29tcG9uZW50Mik7XG5cbiAgZnVuY3Rpb24gRGVtbygpIHtcbiAgICB2YXIgX3JlZjU7XG5cbiAgICB2YXIgX3RlbXAyLCBfdGhpczMsIF9yZXQyO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERlbW8pO1xuXG4gICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldDIgPSAoX3RlbXAyID0gKF90aGlzMyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChfcmVmNSA9IERlbW8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEZW1vKSkuY2FsbC5hcHBseShfcmVmNSwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpczMpLCBfdGhpczMuc3RhdGUgPSB7IGRvY3M6ICcnIH0sIF90ZW1wMiksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzMywgX3JldDIpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKERlbW8sIFt7XG4gICAga2V5OiAnY29tcG9uZW50V2lsbE1vdW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHdpbmRvdy5mZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2phbmUvcmVhY3Qtd2hpcmxpZ2lnL21hc3Rlci9SRUFETUUubWQnKS50aGVuKGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBhLnRleHQoKTtcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgX3RoaXM0LnNldFN0YXRlKHsgZG9jczogKDAsIF9tYXJrZWQyLmRlZmF1bHQpKHQpIH0pO1xuICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAgeyBjbGFzc05hbWU6ICd3cmFwcGVyJyB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnZGl2JywgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IHRoaXMuc3RhdGUuZG9jcyB9LCBjbGFzc05hbWU6ICdtZCcgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFNsaWRlcixcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIHNsaWRlcy5tYXAoZnVuY3Rpb24gKF9yZWY2LCBpKSB7XG4gICAgICAgICAgICB2YXIgc3JjID0gX3JlZjYuc3JjLFxuICAgICAgICAgICAgICAgIGhlaWdodCA9IF9yZWY2LmhlaWdodCxcbiAgICAgICAgICAgICAgICB3aWR0aCA9IF9yZWY2LndpZHRoLFxuICAgICAgICAgICAgICAgIGpvaW5lciA9IF9yZWY2LmpvaW5lcixcbiAgICAgICAgICAgICAgICB0ZXh0ID0gX3JlZjYudGV4dDtcbiAgICAgICAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgJ2ZpZ3VyZScsXG4gICAgICAgICAgICAgIHsgY2xhc3NOYW1lOiAnbXlTbGlkZScsIGtleTogc3JjICsgJy0nICsgaSB9LFxuICAgICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAnZmlnY2FwdGlvbicsXG4gICAgICAgICAgICAgICAgeyBjbGFzc05hbWU6ICdjYXB0aW9uJyB9LFxuICAgICAgICAgICAgICAgICdTbGlkZSBpbmRleCAnLFxuICAgICAgICAgICAgICAgIGlcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgc3JjICYmIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCdpbWcnLCB7IGFsdDogJ1BsYWNlIFpvbWJpZScsIHNyYzogc3JjICsgJy8nICsgd2lkdGggKyBqb2luZXIgKyBoZWlnaHQgKyAnPycgKyBpIH0pLFxuICAgICAgICAgICAgICB0ZXh0ICYmIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHsgY2xhc3NOYW1lOiAndGV4dCcgfSxcbiAgICAgICAgICAgICAgICB0ZXh0XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRGVtbztcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbigwLCBfcmVhY3REb20ucmVuZGVyKShfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChEZW1vLCBudWxsKSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbicpKTtcblxuLyoqKi8gfSksXG4vKiAyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi8oZnVuY3Rpb24oZ2xvYmFsKSB7LyoqXG4gKiBtYXJrZWQgLSBhIG1hcmtkb3duIHBhcnNlclxuICogQ29weXJpZ2h0IChjKSAyMDExLTIwMTQsIENocmlzdG9waGVyIEplZmZyZXkuIChNSVQgTGljZW5zZWQpXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY2hqai9tYXJrZWRcbiAqL1xuXG47KGZ1bmN0aW9uKCkge1xuXG4vKipcbiAqIEJsb2NrLUxldmVsIEdyYW1tYXJcbiAqL1xuXG52YXIgYmxvY2sgPSB7XG4gIG5ld2xpbmU6IC9eXFxuKy8sXG4gIGNvZGU6IC9eKCB7NH1bXlxcbl0rXFxuKikrLyxcbiAgZmVuY2VzOiBub29wLFxuICBocjogL14oICpbLSpfXSl7Myx9ICooPzpcXG4rfCQpLyxcbiAgaGVhZGluZzogL14gKigjezEsNn0pICooW15cXG5dKz8pICojKiAqKD86XFxuK3wkKS8sXG4gIG5wdGFibGU6IG5vb3AsXG4gIGxoZWFkaW5nOiAvXihbXlxcbl0rKVxcbiAqKD18LSl7Mix9ICooPzpcXG4rfCQpLyxcbiAgYmxvY2txdW90ZTogL14oICo+W15cXG5dKyhcXG4oPyFkZWYpW15cXG5dKykqXFxuKikrLyxcbiAgbGlzdDogL14oICopKGJ1bGwpIFtcXHNcXFNdKz8oPzpocnxkZWZ8XFxuezIsfSg/ISApKD8hXFwxYnVsbCApXFxuKnxcXHMqJCkvLFxuICBodG1sOiAvXiAqKD86Y29tbWVudCAqKD86XFxufFxccyokKXxjbG9zZWQgKig/OlxcbnsyLH18XFxzKiQpfGNsb3NpbmcgKig/OlxcbnsyLH18XFxzKiQpKS8sXG4gIGRlZjogL14gKlxcWyhbXlxcXV0rKVxcXTogKjw/KFteXFxzPl0rKT4/KD86ICtbXCIoXShbXlxcbl0rKVtcIildKT8gKig/Olxcbit8JCkvLFxuICB0YWJsZTogbm9vcCxcbiAgcGFyYWdyYXBoOiAvXigoPzpbXlxcbl0rXFxuPyg/IWhyfGhlYWRpbmd8bGhlYWRpbmd8YmxvY2txdW90ZXx0YWd8ZGVmKSkrKVxcbiovLFxuICB0ZXh0OiAvXlteXFxuXSsvXG59O1xuXG5ibG9jay5idWxsZXQgPSAvKD86WyorLV18XFxkK1xcLikvO1xuYmxvY2suaXRlbSA9IC9eKCAqKShidWxsKSBbXlxcbl0qKD86XFxuKD8hXFwxYnVsbCApW15cXG5dKikqLztcbmJsb2NrLml0ZW0gPSByZXBsYWNlKGJsb2NrLml0ZW0sICdnbScpXG4gICgvYnVsbC9nLCBibG9jay5idWxsZXQpXG4gICgpO1xuXG5ibG9jay5saXN0ID0gcmVwbGFjZShibG9jay5saXN0KVxuICAoL2J1bGwvZywgYmxvY2suYnVsbGV0KVxuICAoJ2hyJywgJ1xcXFxuKyg/PVxcXFwxPyg/OlstKl9dICopezMsfSg/OlxcXFxuK3wkKSknKVxuICAoJ2RlZicsICdcXFxcbisoPz0nICsgYmxvY2suZGVmLnNvdXJjZSArICcpJylcbiAgKCk7XG5cbmJsb2NrLmJsb2NrcXVvdGUgPSByZXBsYWNlKGJsb2NrLmJsb2NrcXVvdGUpXG4gICgnZGVmJywgYmxvY2suZGVmKVxuICAoKTtcblxuYmxvY2suX3RhZyA9ICcoPyEoPzonXG4gICsgJ2F8ZW18c3Ryb25nfHNtYWxsfHN8Y2l0ZXxxfGRmbnxhYmJyfGRhdGF8dGltZXxjb2RlJ1xuICArICd8dmFyfHNhbXB8a2JkfHN1YnxzdXB8aXxifHV8bWFya3xydWJ5fHJ0fHJwfGJkaXxiZG8nXG4gICsgJ3xzcGFufGJyfHdicnxpbnN8ZGVsfGltZylcXFxcYilcXFxcdysoPyE6L3xbXlxcXFx3XFxcXHNAXSpAKVxcXFxiJztcblxuYmxvY2suaHRtbCA9IHJlcGxhY2UoYmxvY2suaHRtbClcbiAgKCdjb21tZW50JywgLzwhLS1bXFxzXFxTXSo/LS0+LylcbiAgKCdjbG9zZWQnLCAvPCh0YWcpW1xcc1xcU10rPzxcXC9cXDE+LylcbiAgKCdjbG9zaW5nJywgLzx0YWcoPzpcIlteXCJdKlwifCdbXiddKid8W14nXCI+XSkqPz4vKVxuICAoL3RhZy9nLCBibG9jay5fdGFnKVxuICAoKTtcblxuYmxvY2sucGFyYWdyYXBoID0gcmVwbGFjZShibG9jay5wYXJhZ3JhcGgpXG4gICgnaHInLCBibG9jay5ocilcbiAgKCdoZWFkaW5nJywgYmxvY2suaGVhZGluZylcbiAgKCdsaGVhZGluZycsIGJsb2NrLmxoZWFkaW5nKVxuICAoJ2Jsb2NrcXVvdGUnLCBibG9jay5ibG9ja3F1b3RlKVxuICAoJ3RhZycsICc8JyArIGJsb2NrLl90YWcpXG4gICgnZGVmJywgYmxvY2suZGVmKVxuICAoKTtcblxuLyoqXG4gKiBOb3JtYWwgQmxvY2sgR3JhbW1hclxuICovXG5cbmJsb2NrLm5vcm1hbCA9IG1lcmdlKHt9LCBibG9jayk7XG5cbi8qKlxuICogR0ZNIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay5nZm0gPSBtZXJnZSh7fSwgYmxvY2subm9ybWFsLCB7XG4gIGZlbmNlczogL14gKihgezMsfXx+ezMsfSlbIFxcLl0qKFxcUyspPyAqXFxuKFtcXHNcXFNdKj8pXFxzKlxcMSAqKD86XFxuK3wkKS8sXG4gIHBhcmFncmFwaDogL14vLFxuICBoZWFkaW5nOiAvXiAqKCN7MSw2fSkgKyhbXlxcbl0rPykgKiMqICooPzpcXG4rfCQpL1xufSk7XG5cbmJsb2NrLmdmbS5wYXJhZ3JhcGggPSByZXBsYWNlKGJsb2NrLnBhcmFncmFwaClcbiAgKCcoPyEnLCAnKD8hJ1xuICAgICsgYmxvY2suZ2ZtLmZlbmNlcy5zb3VyY2UucmVwbGFjZSgnXFxcXDEnLCAnXFxcXDInKSArICd8J1xuICAgICsgYmxvY2subGlzdC5zb3VyY2UucmVwbGFjZSgnXFxcXDEnLCAnXFxcXDMnKSArICd8JylcbiAgKCk7XG5cbi8qKlxuICogR0ZNICsgVGFibGVzIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay50YWJsZXMgPSBtZXJnZSh7fSwgYmxvY2suZ2ZtLCB7XG4gIG5wdGFibGU6IC9eICooXFxTLipcXHwuKilcXG4gKihbLTpdKyAqXFx8Wy18IDpdKilcXG4oKD86LipcXHwuKig/OlxcbnwkKSkqKVxcbiovLFxuICB0YWJsZTogL14gKlxcfCguKylcXG4gKlxcfCggKlstOl0rWy18IDpdKilcXG4oKD86ICpcXHwuKig/OlxcbnwkKSkqKVxcbiovXG59KTtcblxuLyoqXG4gKiBCbG9jayBMZXhlclxuICovXG5cbmZ1bmN0aW9uIExleGVyKG9wdGlvbnMpIHtcbiAgdGhpcy50b2tlbnMgPSBbXTtcbiAgdGhpcy50b2tlbnMubGlua3MgPSB7fTtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMucnVsZXMgPSBibG9jay5ub3JtYWw7XG5cbiAgaWYgKHRoaXMub3B0aW9ucy5nZm0pIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnRhYmxlcykge1xuICAgICAgdGhpcy5ydWxlcyA9IGJsb2NrLnRhYmxlcztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ydWxlcyA9IGJsb2NrLmdmbTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBFeHBvc2UgQmxvY2sgUnVsZXNcbiAqL1xuXG5MZXhlci5ydWxlcyA9IGJsb2NrO1xuXG4vKipcbiAqIFN0YXRpYyBMZXggTWV0aG9kXG4gKi9cblxuTGV4ZXIubGV4ID0gZnVuY3Rpb24oc3JjLCBvcHRpb25zKSB7XG4gIHZhciBsZXhlciA9IG5ldyBMZXhlcihvcHRpb25zKTtcbiAgcmV0dXJuIGxleGVyLmxleChzcmMpO1xufTtcblxuLyoqXG4gKiBQcmVwcm9jZXNzaW5nXG4gKi9cblxuTGV4ZXIucHJvdG90eXBlLmxleCA9IGZ1bmN0aW9uKHNyYykge1xuICBzcmMgPSBzcmNcbiAgICAucmVwbGFjZSgvXFxyXFxufFxcci9nLCAnXFxuJylcbiAgICAucmVwbGFjZSgvXFx0L2csICcgICAgJylcbiAgICAucmVwbGFjZSgvXFx1MDBhMC9nLCAnICcpXG4gICAgLnJlcGxhY2UoL1xcdTI0MjQvZywgJ1xcbicpO1xuXG4gIHJldHVybiB0aGlzLnRva2VuKHNyYywgdHJ1ZSk7XG59O1xuXG4vKipcbiAqIExleGluZ1xuICovXG5cbkxleGVyLnByb3RvdHlwZS50b2tlbiA9IGZ1bmN0aW9uKHNyYywgdG9wLCBicSkge1xuICB2YXIgc3JjID0gc3JjLnJlcGxhY2UoL14gKyQvZ20sICcnKVxuICAgICwgbmV4dFxuICAgICwgbG9vc2VcbiAgICAsIGNhcFxuICAgICwgYnVsbFxuICAgICwgYlxuICAgICwgaXRlbVxuICAgICwgc3BhY2VcbiAgICAsIGlcbiAgICAsIGw7XG5cbiAgd2hpbGUgKHNyYykge1xuICAgIC8vIG5ld2xpbmVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5uZXdsaW5lLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMF0ubGVuZ3RoID4gMSkge1xuICAgICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnc3BhY2UnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvZGVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5jb2RlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGNhcCA9IGNhcFswXS5yZXBsYWNlKC9eIHs0fS9nbSwgJycpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdjb2RlJyxcbiAgICAgICAgdGV4dDogIXRoaXMub3B0aW9ucy5wZWRhbnRpY1xuICAgICAgICAgID8gY2FwLnJlcGxhY2UoL1xcbiskLywgJycpXG4gICAgICAgICAgOiBjYXBcbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gZmVuY2VzIChnZm0pXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZmVuY2VzLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnY29kZScsXG4gICAgICAgIGxhbmc6IGNhcFsyXSxcbiAgICAgICAgdGV4dDogY2FwWzNdIHx8ICcnXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGhlYWRpbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5oZWFkaW5nLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaGVhZGluZycsXG4gICAgICAgIGRlcHRoOiBjYXBbMV0ubGVuZ3RoLFxuICAgICAgICB0ZXh0OiBjYXBbMl1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFibGUgbm8gbGVhZGluZyBwaXBlIChnZm0pXG4gICAgaWYgKHRvcCAmJiAoY2FwID0gdGhpcy5ydWxlcy5ucHRhYmxlLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG5cbiAgICAgIGl0ZW0gPSB7XG4gICAgICAgIHR5cGU6ICd0YWJsZScsXG4gICAgICAgIGhlYWRlcjogY2FwWzFdLnJlcGxhY2UoL14gKnwgKlxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgYWxpZ246IGNhcFsyXS5yZXBsYWNlKC9eICp8XFx8ICokL2csICcnKS5zcGxpdCgvICpcXHwgKi8pLFxuICAgICAgICBjZWxsczogY2FwWzNdLnJlcGxhY2UoL1xcbiQvLCAnJykuc3BsaXQoJ1xcbicpXG4gICAgICB9O1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5hbGlnbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoL14gKi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAncmlnaHQnO1xuICAgICAgICB9IGVsc2UgaWYgKC9eICo6LSs6ICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdjZW50ZXInO1xuICAgICAgICB9IGVsc2UgaWYgKC9eICo6LSsgKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ2xlZnQnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtLmNlbGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGl0ZW0uY2VsbHNbaV0gPSBpdGVtLmNlbGxzW2ldLnNwbGl0KC8gKlxcfCAqLyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goaXRlbSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxoZWFkaW5nXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMubGhlYWRpbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdoZWFkaW5nJyxcbiAgICAgICAgZGVwdGg6IGNhcFsyXSA9PT0gJz0nID8gMSA6IDIsXG4gICAgICAgIHRleHQ6IGNhcFsxXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBoclxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmhyLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaHInXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGJsb2NrcXVvdGVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5ibG9ja3F1b3RlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcblxuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdibG9ja3F1b3RlX3N0YXJ0J1xuICAgICAgfSk7XG5cbiAgICAgIGNhcCA9IGNhcFswXS5yZXBsYWNlKC9eICo+ID8vZ20sICcnKTtcblxuICAgICAgLy8gUGFzcyBgdG9wYCB0byBrZWVwIHRoZSBjdXJyZW50XG4gICAgICAvLyBcInRvcGxldmVsXCIgc3RhdGUuIFRoaXMgaXMgZXhhY3RseVxuICAgICAgLy8gaG93IG1hcmtkb3duLnBsIHdvcmtzLlxuICAgICAgdGhpcy50b2tlbihjYXAsIHRvcCwgdHJ1ZSk7XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnYmxvY2txdW90ZV9lbmQnXG4gICAgICB9KTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gbGlzdFxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmxpc3QuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgYnVsbCA9IGNhcFsyXTtcblxuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdsaXN0X3N0YXJ0JyxcbiAgICAgICAgb3JkZXJlZDogYnVsbC5sZW5ndGggPiAxXG4gICAgICB9KTtcblxuICAgICAgLy8gR2V0IGVhY2ggdG9wLWxldmVsIGl0ZW0uXG4gICAgICBjYXAgPSBjYXBbMF0ubWF0Y2godGhpcy5ydWxlcy5pdGVtKTtcblxuICAgICAgbmV4dCA9IGZhbHNlO1xuICAgICAgbCA9IGNhcC5sZW5ndGg7XG4gICAgICBpID0gMDtcblxuICAgICAgZm9yICg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaXRlbSA9IGNhcFtpXTtcblxuICAgICAgICAvLyBSZW1vdmUgdGhlIGxpc3QgaXRlbSdzIGJ1bGxldFxuICAgICAgICAvLyBzbyBpdCBpcyBzZWVuIGFzIHRoZSBuZXh0IHRva2VuLlxuICAgICAgICBzcGFjZSA9IGl0ZW0ubGVuZ3RoO1xuICAgICAgICBpdGVtID0gaXRlbS5yZXBsYWNlKC9eICooWyorLV18XFxkK1xcLikgKy8sICcnKTtcblxuICAgICAgICAvLyBPdXRkZW50IHdoYXRldmVyIHRoZVxuICAgICAgICAvLyBsaXN0IGl0ZW0gY29udGFpbnMuIEhhY2t5LlxuICAgICAgICBpZiAofml0ZW0uaW5kZXhPZignXFxuICcpKSB7XG4gICAgICAgICAgc3BhY2UgLT0gaXRlbS5sZW5ndGg7XG4gICAgICAgICAgaXRlbSA9ICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgICAgID8gaXRlbS5yZXBsYWNlKG5ldyBSZWdFeHAoJ14gezEsJyArIHNwYWNlICsgJ30nLCAnZ20nKSwgJycpXG4gICAgICAgICAgICA6IGl0ZW0ucmVwbGFjZSgvXiB7MSw0fS9nbSwgJycpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgdGhlIG5leHQgbGlzdCBpdGVtIGJlbG9uZ3MgaGVyZS5cbiAgICAgICAgLy8gQmFja3BlZGFsIGlmIGl0IGRvZXMgbm90IGJlbG9uZyBpbiB0aGlzIGxpc3QuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc21hcnRMaXN0cyAmJiBpICE9PSBsIC0gMSkge1xuICAgICAgICAgIGIgPSBibG9jay5idWxsZXQuZXhlYyhjYXBbaSArIDFdKVswXTtcbiAgICAgICAgICBpZiAoYnVsbCAhPT0gYiAmJiAhKGJ1bGwubGVuZ3RoID4gMSAmJiBiLmxlbmd0aCA+IDEpKSB7XG4gICAgICAgICAgICBzcmMgPSBjYXAuc2xpY2UoaSArIDEpLmpvaW4oJ1xcbicpICsgc3JjO1xuICAgICAgICAgICAgaSA9IGwgLSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERldGVybWluZSB3aGV0aGVyIGl0ZW0gaXMgbG9vc2Ugb3Igbm90LlxuICAgICAgICAvLyBVc2U6IC8oXnxcXG4pKD8hIClbXlxcbl0rXFxuXFxuKD8hXFxzKiQpL1xuICAgICAgICAvLyBmb3IgZGlzY291bnQgYmVoYXZpb3IuXG4gICAgICAgIGxvb3NlID0gbmV4dCB8fCAvXFxuXFxuKD8hXFxzKiQpLy50ZXN0KGl0ZW0pO1xuICAgICAgICBpZiAoaSAhPT0gbCAtIDEpIHtcbiAgICAgICAgICBuZXh0ID0gaXRlbS5jaGFyQXQoaXRlbS5sZW5ndGggLSAxKSA9PT0gJ1xcbic7XG4gICAgICAgICAgaWYgKCFsb29zZSkgbG9vc2UgPSBuZXh0O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogbG9vc2VcbiAgICAgICAgICAgID8gJ2xvb3NlX2l0ZW1fc3RhcnQnXG4gICAgICAgICAgICA6ICdsaXN0X2l0ZW1fc3RhcnQnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFJlY3Vyc2UuXG4gICAgICAgIHRoaXMudG9rZW4oaXRlbSwgZmFsc2UsIGJxKTtcblxuICAgICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnbGlzdF9pdGVtX2VuZCdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnbGlzdF9lbmQnXG4gICAgICB9KTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gaHRtbFxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmh0bWwuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICAgID8gJ3BhcmFncmFwaCdcbiAgICAgICAgICA6ICdodG1sJyxcbiAgICAgICAgcHJlOiAhdGhpcy5vcHRpb25zLnNhbml0aXplclxuICAgICAgICAgICYmIChjYXBbMV0gPT09ICdwcmUnIHx8IGNhcFsxXSA9PT0gJ3NjcmlwdCcgfHwgY2FwWzFdID09PSAnc3R5bGUnKSxcbiAgICAgICAgdGV4dDogY2FwWzBdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGRlZlxuICAgIGlmICgoIWJxICYmIHRvcCkgJiYgKGNhcCA9IHRoaXMucnVsZXMuZGVmLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5saW5rc1tjYXBbMV0udG9Mb3dlckNhc2UoKV0gPSB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRhYmxlIChnZm0pXG4gICAgaWYgKHRvcCAmJiAoY2FwID0gdGhpcy5ydWxlcy50YWJsZS5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuXG4gICAgICBpdGVtID0ge1xuICAgICAgICB0eXBlOiAndGFibGUnLFxuICAgICAgICBoZWFkZXI6IGNhcFsxXS5yZXBsYWNlKC9eICp8ICpcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGFsaWduOiBjYXBbMl0ucmVwbGFjZSgvXiAqfFxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgY2VsbHM6IGNhcFszXS5yZXBsYWNlKC8oPzogKlxcfCAqKT9cXG4kLywgJycpLnNwbGl0KCdcXG4nKVxuICAgICAgfTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uYWxpZ24ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKC9eICotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ3JpZ2h0JztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnY2VudGVyJztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdsZWZ0JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpdGVtLmNlbGxzW2ldID0gaXRlbS5jZWxsc1tpXVxuICAgICAgICAgIC5yZXBsYWNlKC9eICpcXHwgKnwgKlxcfCAqJC9nLCAnJylcbiAgICAgICAgICAuc3BsaXQoLyAqXFx8ICovKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy50b2tlbnMucHVzaChpdGVtKTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdG9wLWxldmVsIHBhcmFncmFwaFxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMucGFyYWdyYXBoLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3BhcmFncmFwaCcsXG4gICAgICAgIHRleHQ6IGNhcFsxXS5jaGFyQXQoY2FwWzFdLmxlbmd0aCAtIDEpID09PSAnXFxuJ1xuICAgICAgICAgID8gY2FwWzFdLnNsaWNlKDAsIC0xKVxuICAgICAgICAgIDogY2FwWzFdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRleHRcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy50ZXh0LmV4ZWMoc3JjKSkge1xuICAgICAgLy8gVG9wLWxldmVsIHNob3VsZCBuZXZlciByZWFjaCBoZXJlLlxuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgIHRleHQ6IGNhcFswXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoc3JjKSB7XG4gICAgICB0aHJvdyBuZXdcbiAgICAgICAgRXJyb3IoJ0luZmluaXRlIGxvb3Agb24gYnl0ZTogJyArIHNyYy5jaGFyQ29kZUF0KDApKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcy50b2tlbnM7XG59O1xuXG4vKipcbiAqIElubGluZS1MZXZlbCBHcmFtbWFyXG4gKi9cblxudmFyIGlubGluZSA9IHtcbiAgZXNjYXBlOiAvXlxcXFwoW1xcXFxgKnt9XFxbXFxdKCkjK1xcLS4hXz5dKS8sXG4gIGF1dG9saW5rOiAvXjwoW14gPl0rKEB8OlxcLylbXiA+XSspPi8sXG4gIHVybDogbm9vcCxcbiAgdGFnOiAvXjwhLS1bXFxzXFxTXSo/LS0+fF48XFwvP1xcdysoPzpcIlteXCJdKlwifCdbXiddKid8W14nXCI+XSkqPz4vLFxuICBsaW5rOiAvXiE/XFxbKGluc2lkZSlcXF1cXChocmVmXFwpLyxcbiAgcmVmbGluazogL14hP1xcWyhpbnNpZGUpXFxdXFxzKlxcWyhbXlxcXV0qKVxcXS8sXG4gIG5vbGluazogL14hP1xcWygoPzpcXFtbXlxcXV0qXFxdfFteXFxbXFxdXSkqKVxcXS8sXG4gIHN0cm9uZzogL15fXyhbXFxzXFxTXSs/KV9fKD8hXyl8XlxcKlxcKihbXFxzXFxTXSs/KVxcKlxcKig/IVxcKikvLFxuICBlbTogL15cXGJfKCg/OlteX118X18pKz8pX1xcYnxeXFwqKCg/OlxcKlxcKnxbXFxzXFxTXSkrPylcXCooPyFcXCopLyxcbiAgY29kZTogL14oYCspXFxzKihbXFxzXFxTXSo/W15gXSlcXHMqXFwxKD8hYCkvLFxuICBicjogL14gezIsfVxcbig/IVxccyokKS8sXG4gIGRlbDogbm9vcCxcbiAgdGV4dDogL15bXFxzXFxTXSs/KD89W1xcXFw8IVxcW18qYF18IHsyLH1cXG58JCkvXG59O1xuXG5pbmxpbmUuX2luc2lkZSA9IC8oPzpcXFtbXlxcXV0qXFxdfFteXFxbXFxdXXxcXF0oPz1bXlxcW10qXFxdKSkqLztcbmlubGluZS5faHJlZiA9IC9cXHMqPD8oW1xcc1xcU10qPyk+Pyg/OlxccytbJ1wiXShbXFxzXFxTXSo/KVsnXCJdKT9cXHMqLztcblxuaW5saW5lLmxpbmsgPSByZXBsYWNlKGlubGluZS5saW5rKVxuICAoJ2luc2lkZScsIGlubGluZS5faW5zaWRlKVxuICAoJ2hyZWYnLCBpbmxpbmUuX2hyZWYpXG4gICgpO1xuXG5pbmxpbmUucmVmbGluayA9IHJlcGxhY2UoaW5saW5lLnJlZmxpbmspXG4gICgnaW5zaWRlJywgaW5saW5lLl9pbnNpZGUpXG4gICgpO1xuXG4vKipcbiAqIE5vcm1hbCBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5ub3JtYWwgPSBtZXJnZSh7fSwgaW5saW5lKTtcblxuLyoqXG4gKiBQZWRhbnRpYyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5wZWRhbnRpYyA9IG1lcmdlKHt9LCBpbmxpbmUubm9ybWFsLCB7XG4gIHN0cm9uZzogL15fXyg/PVxcUykoW1xcc1xcU10qP1xcUylfXyg/IV8pfF5cXCpcXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqXFwqKD8hXFwqKS8sXG4gIGVtOiAvXl8oPz1cXFMpKFtcXHNcXFNdKj9cXFMpXyg/IV8pfF5cXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqKD8hXFwqKS9cbn0pO1xuXG4vKipcbiAqIEdGTSBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5nZm0gPSBtZXJnZSh7fSwgaW5saW5lLm5vcm1hbCwge1xuICBlc2NhcGU6IHJlcGxhY2UoaW5saW5lLmVzY2FwZSkoJ10pJywgJ358XSknKSgpLFxuICB1cmw6IC9eKGh0dHBzPzpcXC9cXC9bXlxcczxdK1tePC4sOjtcIicpXFxdXFxzXSkvLFxuICBkZWw6IC9efn4oPz1cXFMpKFtcXHNcXFNdKj9cXFMpfn4vLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS50ZXh0KVxuICAgICgnXXwnLCAnfl18JylcbiAgICAoJ3wnLCAnfGh0dHBzPzovL3wnKVxuICAgICgpXG59KTtcblxuLyoqXG4gKiBHRk0gKyBMaW5lIEJyZWFrcyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5icmVha3MgPSBtZXJnZSh7fSwgaW5saW5lLmdmbSwge1xuICBicjogcmVwbGFjZShpbmxpbmUuYnIpKCd7Mix9JywgJyonKSgpLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS5nZm0udGV4dCkoJ3syLH0nLCAnKicpKClcbn0pO1xuXG4vKipcbiAqIElubGluZSBMZXhlciAmIENvbXBpbGVyXG4gKi9cblxuZnVuY3Rpb24gSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpIHtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMubGlua3MgPSBsaW5rcztcbiAgdGhpcy5ydWxlcyA9IGlubGluZS5ub3JtYWw7XG4gIHRoaXMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgaWYgKCF0aGlzLmxpbmtzKSB7XG4gICAgdGhyb3cgbmV3XG4gICAgICBFcnJvcignVG9rZW5zIGFycmF5IHJlcXVpcmVzIGEgYGxpbmtzYCBwcm9wZXJ0eS4nKTtcbiAgfVxuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5icmVha3MpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBpbmxpbmUuYnJlYWtzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJ1bGVzID0gaW5saW5lLmdmbTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnBlZGFudGljKSB7XG4gICAgdGhpcy5ydWxlcyA9IGlubGluZS5wZWRhbnRpYztcbiAgfVxufVxuXG4vKipcbiAqIEV4cG9zZSBJbmxpbmUgUnVsZXNcbiAqL1xuXG5JbmxpbmVMZXhlci5ydWxlcyA9IGlubGluZTtcblxuLyoqXG4gKiBTdGF0aWMgTGV4aW5nL0NvbXBpbGluZyBNZXRob2RcbiAqL1xuXG5JbmxpbmVMZXhlci5vdXRwdXQgPSBmdW5jdGlvbihzcmMsIGxpbmtzLCBvcHRpb25zKSB7XG4gIHZhciBpbmxpbmUgPSBuZXcgSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpO1xuICByZXR1cm4gaW5saW5lLm91dHB1dChzcmMpO1xufTtcblxuLyoqXG4gKiBMZXhpbmcvQ29tcGlsaW5nXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uKHNyYykge1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGxpbmtcbiAgICAsIHRleHRcbiAgICAsIGhyZWZcbiAgICAsIGNhcDtcblxuICB3aGlsZSAoc3JjKSB7XG4gICAgLy8gZXNjYXBlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZXNjYXBlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSBjYXBbMV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBhdXRvbGlua1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmF1dG9saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMl0gPT09ICdAJykge1xuICAgICAgICB0ZXh0ID0gY2FwWzFdLmNoYXJBdCg2KSA9PT0gJzonXG4gICAgICAgICAgPyB0aGlzLm1hbmdsZShjYXBbMV0uc3Vic3RyaW5nKDcpKVxuICAgICAgICAgIDogdGhpcy5tYW5nbGUoY2FwWzFdKTtcbiAgICAgICAgaHJlZiA9IHRoaXMubWFuZ2xlKCdtYWlsdG86JykgKyB0ZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgICBocmVmID0gdGV4dDtcbiAgICAgIH1cbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgbnVsbCwgdGV4dCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB1cmwgKGdmbSlcbiAgICBpZiAoIXRoaXMuaW5MaW5rICYmIChjYXAgPSB0aGlzLnJ1bGVzLnVybC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgaHJlZiA9IHRleHQ7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIG51bGwsIHRleHQpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFnXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGFnLmV4ZWMoc3JjKSkge1xuICAgICAgaWYgKCF0aGlzLmluTGluayAmJiAvXjxhIC9pLnRlc3QoY2FwWzBdKSkge1xuICAgICAgICB0aGlzLmluTGluayA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaW5MaW5rICYmIC9ePFxcL2E+L2kudGVzdChjYXBbMF0pKSB7XG4gICAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXIoY2FwWzBdKVxuICAgICAgICAgIDogZXNjYXBlKGNhcFswXSlcbiAgICAgICAgOiBjYXBbMF1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpbmtcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfSk7XG4gICAgICB0aGlzLmluTGluayA9IGZhbHNlO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcmVmbGluaywgbm9saW5rXG4gICAgaWYgKChjYXAgPSB0aGlzLnJ1bGVzLnJlZmxpbmsuZXhlYyhzcmMpKVxuICAgICAgICB8fCAoY2FwID0gdGhpcy5ydWxlcy5ub2xpbmsuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGxpbmsgPSAoY2FwWzJdIHx8IGNhcFsxXSkucmVwbGFjZSgvXFxzKy9nLCAnICcpO1xuICAgICAgbGluayA9IHRoaXMubGlua3NbbGluay50b0xvd2VyQ2FzZSgpXTtcbiAgICAgIGlmICghbGluayB8fCAhbGluay5ocmVmKSB7XG4gICAgICAgIG91dCArPSBjYXBbMF0uY2hhckF0KDApO1xuICAgICAgICBzcmMgPSBjYXBbMF0uc3Vic3RyaW5nKDEpICsgc3JjO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCBsaW5rKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBzdHJvbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5zdHJvbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuc3Ryb25nKHRoaXMub3V0cHV0KGNhcFsyXSB8fCBjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGVtXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZW0uZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuZW0odGhpcy5vdXRwdXQoY2FwWzJdIHx8IGNhcFsxXSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gY29kZVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmNvZGUuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuY29kZXNwYW4oZXNjYXBlKGNhcFsyXSwgdHJ1ZSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gYnJcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5ici5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5icigpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gZGVsIChnZm0pXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZGVsLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmRlbCh0aGlzLm91dHB1dChjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRleHRcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy50ZXh0LmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLnRleHQoZXNjYXBlKHRoaXMuc21hcnR5cGFudHMoY2FwWzBdKSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKHNyYykge1xuICAgICAgdGhyb3cgbmV3XG4gICAgICAgIEVycm9yKCdJbmZpbml0ZSBsb29wIG9uIGJ5dGU6ICcgKyBzcmMuY2hhckNvZGVBdCgwKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQ29tcGlsZSBMaW5rXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dExpbmsgPSBmdW5jdGlvbihjYXAsIGxpbmspIHtcbiAgdmFyIGhyZWYgPSBlc2NhcGUobGluay5ocmVmKVxuICAgICwgdGl0bGUgPSBsaW5rLnRpdGxlID8gZXNjYXBlKGxpbmsudGl0bGUpIDogbnVsbDtcblxuICByZXR1cm4gY2FwWzBdLmNoYXJBdCgwKSAhPT0gJyEnXG4gICAgPyB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgdGl0bGUsIHRoaXMub3V0cHV0KGNhcFsxXSkpXG4gICAgOiB0aGlzLnJlbmRlcmVyLmltYWdlKGhyZWYsIHRpdGxlLCBlc2NhcGUoY2FwWzFdKSk7XG59O1xuXG4vKipcbiAqIFNtYXJ0eXBhbnRzIFRyYW5zZm9ybWF0aW9uc1xuICovXG5cbklubGluZUxleGVyLnByb3RvdHlwZS5zbWFydHlwYW50cyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgaWYgKCF0aGlzLm9wdGlvbnMuc21hcnR5cGFudHMpIHJldHVybiB0ZXh0O1xuICByZXR1cm4gdGV4dFxuICAgIC8vIGVtLWRhc2hlc1xuICAgIC5yZXBsYWNlKC8tLS0vZywgJ1xcdTIwMTQnKVxuICAgIC8vIGVuLWRhc2hlc1xuICAgIC5yZXBsYWNlKC8tLS9nLCAnXFx1MjAxMycpXG4gICAgLy8gb3BlbmluZyBzaW5nbGVzXG4gICAgLnJlcGxhY2UoLyhefFstXFx1MjAxNC8oXFxbe1wiXFxzXSknL2csICckMVxcdTIwMTgnKVxuICAgIC8vIGNsb3Npbmcgc2luZ2xlcyAmIGFwb3N0cm9waGVzXG4gICAgLnJlcGxhY2UoLycvZywgJ1xcdTIwMTknKVxuICAgIC8vIG9wZW5pbmcgZG91Ymxlc1xuICAgIC5yZXBsYWNlKC8oXnxbLVxcdTIwMTQvKFxcW3tcXHUyMDE4XFxzXSlcIi9nLCAnJDFcXHUyMDFjJylcbiAgICAvLyBjbG9zaW5nIGRvdWJsZXNcbiAgICAucmVwbGFjZSgvXCIvZywgJ1xcdTIwMWQnKVxuICAgIC8vIGVsbGlwc2VzXG4gICAgLnJlcGxhY2UoL1xcLnszfS9nLCAnXFx1MjAyNicpO1xufTtcblxuLyoqXG4gKiBNYW5nbGUgTGlua3NcbiAqL1xuXG5JbmxpbmVMZXhlci5wcm90b3R5cGUubWFuZ2xlID0gZnVuY3Rpb24odGV4dCkge1xuICBpZiAoIXRoaXMub3B0aW9ucy5tYW5nbGUpIHJldHVybiB0ZXh0O1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGwgPSB0ZXh0Lmxlbmd0aFxuICAgICwgaSA9IDBcbiAgICAsIGNoO1xuXG4gIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgY2ggPSB0ZXh0LmNoYXJDb2RlQXQoaSk7XG4gICAgaWYgKE1hdGgucmFuZG9tKCkgPiAwLjUpIHtcbiAgICAgIGNoID0gJ3gnICsgY2gudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICBvdXQgKz0gJyYjJyArIGNoICsgJzsnO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogUmVuZGVyZXJcbiAqL1xuXG5mdW5jdGlvbiBSZW5kZXJlcihvcHRpb25zKSB7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG59XG5cblJlbmRlcmVyLnByb3RvdHlwZS5jb2RlID0gZnVuY3Rpb24oY29kZSwgbGFuZywgZXNjYXBlZCkge1xuICBpZiAodGhpcy5vcHRpb25zLmhpZ2hsaWdodCkge1xuICAgIHZhciBvdXQgPSB0aGlzLm9wdGlvbnMuaGlnaGxpZ2h0KGNvZGUsIGxhbmcpO1xuICAgIGlmIChvdXQgIT0gbnVsbCAmJiBvdXQgIT09IGNvZGUpIHtcbiAgICAgIGVzY2FwZWQgPSB0cnVlO1xuICAgICAgY29kZSA9IG91dDtcbiAgICB9XG4gIH1cblxuICBpZiAoIWxhbmcpIHtcbiAgICByZXR1cm4gJzxwcmU+PGNvZGU+J1xuICAgICAgKyAoZXNjYXBlZCA/IGNvZGUgOiBlc2NhcGUoY29kZSwgdHJ1ZSkpXG4gICAgICArICdcXG48L2NvZGU+PC9wcmU+JztcbiAgfVxuXG4gIHJldHVybiAnPHByZT48Y29kZSBjbGFzcz1cIidcbiAgICArIHRoaXMub3B0aW9ucy5sYW5nUHJlZml4XG4gICAgKyBlc2NhcGUobGFuZywgdHJ1ZSlcbiAgICArICdcIj4nXG4gICAgKyAoZXNjYXBlZCA/IGNvZGUgOiBlc2NhcGUoY29kZSwgdHJ1ZSkpXG4gICAgKyAnXFxuPC9jb2RlPjwvcHJlPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuYmxvY2txdW90ZSA9IGZ1bmN0aW9uKHF1b3RlKSB7XG4gIHJldHVybiAnPGJsb2NrcXVvdGU+XFxuJyArIHF1b3RlICsgJzwvYmxvY2txdW90ZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmh0bWwgPSBmdW5jdGlvbihodG1sKSB7XG4gIHJldHVybiBodG1sO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmhlYWRpbmcgPSBmdW5jdGlvbih0ZXh0LCBsZXZlbCwgcmF3KSB7XG4gIHJldHVybiAnPGgnXG4gICAgKyBsZXZlbFxuICAgICsgJyBpZD1cIidcbiAgICArIHRoaXMub3B0aW9ucy5oZWFkZXJQcmVmaXhcbiAgICArIHJhdy50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1teXFx3XSsvZywgJy0nKVxuICAgICsgJ1wiPidcbiAgICArIHRleHRcbiAgICArICc8L2gnXG4gICAgKyBsZXZlbFxuICAgICsgJz5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmhyID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9wdGlvbnMueGh0bWwgPyAnPGhyLz5cXG4nIDogJzxocj5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmxpc3QgPSBmdW5jdGlvbihib2R5LCBvcmRlcmVkKSB7XG4gIHZhciB0eXBlID0gb3JkZXJlZCA/ICdvbCcgOiAndWwnO1xuICByZXR1cm4gJzwnICsgdHlwZSArICc+XFxuJyArIGJvZHkgKyAnPC8nICsgdHlwZSArICc+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5saXN0aXRlbSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8bGk+JyArIHRleHQgKyAnPC9saT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnBhcmFncmFwaCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8cD4nICsgdGV4dCArICc8L3A+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50YWJsZSA9IGZ1bmN0aW9uKGhlYWRlciwgYm9keSkge1xuICByZXR1cm4gJzx0YWJsZT5cXG4nXG4gICAgKyAnPHRoZWFkPlxcbidcbiAgICArIGhlYWRlclxuICAgICsgJzwvdGhlYWQ+XFxuJ1xuICAgICsgJzx0Ym9keT5cXG4nXG4gICAgKyBib2R5XG4gICAgKyAnPC90Ym9keT5cXG4nXG4gICAgKyAnPC90YWJsZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRhYmxlcm93ID0gZnVuY3Rpb24oY29udGVudCkge1xuICByZXR1cm4gJzx0cj5cXG4nICsgY29udGVudCArICc8L3RyPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUudGFibGVjZWxsID0gZnVuY3Rpb24oY29udGVudCwgZmxhZ3MpIHtcbiAgdmFyIHR5cGUgPSBmbGFncy5oZWFkZXIgPyAndGgnIDogJ3RkJztcbiAgdmFyIHRhZyA9IGZsYWdzLmFsaWduXG4gICAgPyAnPCcgKyB0eXBlICsgJyBzdHlsZT1cInRleHQtYWxpZ246JyArIGZsYWdzLmFsaWduICsgJ1wiPidcbiAgICA6ICc8JyArIHR5cGUgKyAnPic7XG4gIHJldHVybiB0YWcgKyBjb250ZW50ICsgJzwvJyArIHR5cGUgKyAnPlxcbic7XG59O1xuXG4vLyBzcGFuIGxldmVsIHJlbmRlcmVyXG5SZW5kZXJlci5wcm90b3R5cGUuc3Ryb25nID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gJzxzdHJvbmc+JyArIHRleHQgKyAnPC9zdHJvbmc+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5lbSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8ZW0+JyArIHRleHQgKyAnPC9lbT4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmNvZGVzcGFuID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gJzxjb2RlPicgKyB0ZXh0ICsgJzwvY29kZT4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmJyID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9wdGlvbnMueGh0bWwgPyAnPGJyLz4nIDogJzxicj4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmRlbCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8ZGVsPicgKyB0ZXh0ICsgJzwvZGVsPic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUubGluayA9IGZ1bmN0aW9uKGhyZWYsIHRpdGxlLCB0ZXh0KSB7XG4gIGlmICh0aGlzLm9wdGlvbnMuc2FuaXRpemUpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIHByb3QgPSBkZWNvZGVVUklDb21wb25lbnQodW5lc2NhcGUoaHJlZikpXG4gICAgICAgIC5yZXBsYWNlKC9bXlxcdzpdL2csICcnKVxuICAgICAgICAudG9Mb3dlckNhc2UoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGlmIChwcm90LmluZGV4T2YoJ2phdmFzY3JpcHQ6JykgPT09IDAgfHwgcHJvdC5pbmRleE9mKCd2YnNjcmlwdDonKSA9PT0gMCkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfVxuICB2YXIgb3V0ID0gJzxhIGhyZWY9XCInICsgaHJlZiArICdcIic7XG4gIGlmICh0aXRsZSkge1xuICAgIG91dCArPSAnIHRpdGxlPVwiJyArIHRpdGxlICsgJ1wiJztcbiAgfVxuICBvdXQgKz0gJz4nICsgdGV4dCArICc8L2E+JztcbiAgcmV0dXJuIG91dDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5pbWFnZSA9IGZ1bmN0aW9uKGhyZWYsIHRpdGxlLCB0ZXh0KSB7XG4gIHZhciBvdXQgPSAnPGltZyBzcmM9XCInICsgaHJlZiArICdcIiBhbHQ9XCInICsgdGV4dCArICdcIic7XG4gIGlmICh0aXRsZSkge1xuICAgIG91dCArPSAnIHRpdGxlPVwiJyArIHRpdGxlICsgJ1wiJztcbiAgfVxuICBvdXQgKz0gdGhpcy5vcHRpb25zLnhodG1sID8gJy8+JyA6ICc+JztcbiAgcmV0dXJuIG91dDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gdGV4dDtcbn07XG5cbi8qKlxuICogUGFyc2luZyAmIENvbXBpbGluZ1xuICovXG5cbmZ1bmN0aW9uIFBhcnNlcihvcHRpb25zKSB7XG4gIHRoaXMudG9rZW5zID0gW107XG4gIHRoaXMudG9rZW4gPSBudWxsO1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IG1hcmtlZC5kZWZhdWx0cztcbiAgdGhpcy5vcHRpb25zLnJlbmRlcmVyID0gdGhpcy5vcHRpb25zLnJlbmRlcmVyIHx8IG5ldyBSZW5kZXJlcjtcbiAgdGhpcy5yZW5kZXJlciA9IHRoaXMub3B0aW9ucy5yZW5kZXJlcjtcbiAgdGhpcy5yZW5kZXJlci5vcHRpb25zID0gdGhpcy5vcHRpb25zO1xufVxuXG4vKipcbiAqIFN0YXRpYyBQYXJzZSBNZXRob2RcbiAqL1xuXG5QYXJzZXIucGFyc2UgPSBmdW5jdGlvbihzcmMsIG9wdGlvbnMsIHJlbmRlcmVyKSB7XG4gIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMsIHJlbmRlcmVyKTtcbiAgcmV0dXJuIHBhcnNlci5wYXJzZShzcmMpO1xufTtcblxuLyoqXG4gKiBQYXJzZSBMb29wXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uKHNyYykge1xuICB0aGlzLmlubGluZSA9IG5ldyBJbmxpbmVMZXhlcihzcmMubGlua3MsIHRoaXMub3B0aW9ucywgdGhpcy5yZW5kZXJlcik7XG4gIHRoaXMudG9rZW5zID0gc3JjLnJldmVyc2UoKTtcblxuICB2YXIgb3V0ID0gJyc7XG4gIHdoaWxlICh0aGlzLm5leHQoKSkge1xuICAgIG91dCArPSB0aGlzLnRvaygpO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogTmV4dCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy50b2tlbiA9IHRoaXMudG9rZW5zLnBvcCgpO1xufTtcblxuLyoqXG4gKiBQcmV2aWV3IE5leHQgVG9rZW5cbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBlZWsgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMudG9rZW5zW3RoaXMudG9rZW5zLmxlbmd0aCAtIDFdIHx8IDA7XG59O1xuXG4vKipcbiAqIFBhcnNlIFRleHQgVG9rZW5zXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5wYXJzZVRleHQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGJvZHkgPSB0aGlzLnRva2VuLnRleHQ7XG5cbiAgd2hpbGUgKHRoaXMucGVlaygpLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgIGJvZHkgKz0gJ1xcbicgKyB0aGlzLm5leHQoKS50ZXh0O1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuaW5saW5lLm91dHB1dChib2R5KTtcbn07XG5cbi8qKlxuICogUGFyc2UgQ3VycmVudCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUudG9rID0gZnVuY3Rpb24oKSB7XG4gIHN3aXRjaCAodGhpcy50b2tlbi50eXBlKSB7XG4gICAgY2FzZSAnc3BhY2UnOiB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGNhc2UgJ2hyJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuaHIoKTtcbiAgICB9XG4gICAgY2FzZSAnaGVhZGluZyc6IHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmhlYWRpbmcoXG4gICAgICAgIHRoaXMuaW5saW5lLm91dHB1dCh0aGlzLnRva2VuLnRleHQpLFxuICAgICAgICB0aGlzLnRva2VuLmRlcHRoLFxuICAgICAgICB0aGlzLnRva2VuLnRleHQpO1xuICAgIH1cbiAgICBjYXNlICdjb2RlJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuY29kZSh0aGlzLnRva2VuLnRleHQsXG4gICAgICAgIHRoaXMudG9rZW4ubGFuZyxcbiAgICAgICAgdGhpcy50b2tlbi5lc2NhcGVkKTtcbiAgICB9XG4gICAgY2FzZSAndGFibGUnOiB7XG4gICAgICB2YXIgaGVhZGVyID0gJydcbiAgICAgICAgLCBib2R5ID0gJydcbiAgICAgICAgLCBpXG4gICAgICAgICwgcm93XG4gICAgICAgICwgY2VsbFxuICAgICAgICAsIGZsYWdzXG4gICAgICAgICwgajtcblxuICAgICAgLy8gaGVhZGVyXG4gICAgICBjZWxsID0gJyc7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy50b2tlbi5oZWFkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZmxhZ3MgPSB7IGhlYWRlcjogdHJ1ZSwgYWxpZ246IHRoaXMudG9rZW4uYWxpZ25baV0gfTtcbiAgICAgICAgY2VsbCArPSB0aGlzLnJlbmRlcmVyLnRhYmxlY2VsbChcbiAgICAgICAgICB0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi5oZWFkZXJbaV0pLFxuICAgICAgICAgIHsgaGVhZGVyOiB0cnVlLCBhbGlnbjogdGhpcy50b2tlbi5hbGlnbltpXSB9XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBoZWFkZXIgKz0gdGhpcy5yZW5kZXJlci50YWJsZXJvdyhjZWxsKTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMudG9rZW4uY2VsbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcm93ID0gdGhpcy50b2tlbi5jZWxsc1tpXTtcblxuICAgICAgICBjZWxsID0gJyc7XG4gICAgICAgIGZvciAoaiA9IDA7IGogPCByb3cubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBjZWxsICs9IHRoaXMucmVuZGVyZXIudGFibGVjZWxsKFxuICAgICAgICAgICAgdGhpcy5pbmxpbmUub3V0cHV0KHJvd1tqXSksXG4gICAgICAgICAgICB7IGhlYWRlcjogZmFsc2UsIGFsaWduOiB0aGlzLnRva2VuLmFsaWduW2pdIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgYm9keSArPSB0aGlzLnJlbmRlcmVyLnRhYmxlcm93KGNlbGwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIudGFibGUoaGVhZGVyLCBib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnYmxvY2txdW90ZV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnYmxvY2txdW90ZV9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuYmxvY2txdW90ZShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnbGlzdF9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJydcbiAgICAgICAgLCBvcmRlcmVkID0gdGhpcy50b2tlbi5vcmRlcmVkO1xuXG4gICAgICB3aGlsZSAodGhpcy5uZXh0KCkudHlwZSAhPT0gJ2xpc3RfZW5kJykge1xuICAgICAgICBib2R5ICs9IHRoaXMudG9rKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmxpc3QoYm9keSwgb3JkZXJlZCk7XG4gICAgfVxuICAgIGNhc2UgJ2xpc3RfaXRlbV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9pdGVtX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRva2VuLnR5cGUgPT09ICd0ZXh0J1xuICAgICAgICAgID8gdGhpcy5wYXJzZVRleHQoKVxuICAgICAgICAgIDogdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdGl0ZW0oYm9keSk7XG4gICAgfVxuICAgIGNhc2UgJ2xvb3NlX2l0ZW1fc3RhcnQnOiB7XG4gICAgICB2YXIgYm9keSA9ICcnO1xuXG4gICAgICB3aGlsZSAodGhpcy5uZXh0KCkudHlwZSAhPT0gJ2xpc3RfaXRlbV9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdGl0ZW0oYm9keSk7XG4gICAgfVxuICAgIGNhc2UgJ2h0bWwnOiB7XG4gICAgICB2YXIgaHRtbCA9ICF0aGlzLnRva2VuLnByZSAmJiAhdGhpcy5vcHRpb25zLnBlZGFudGljXG4gICAgICAgID8gdGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dClcbiAgICAgICAgOiB0aGlzLnRva2VuLnRleHQ7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5odG1sKGh0bWwpO1xuICAgIH1cbiAgICBjYXNlICdwYXJhZ3JhcGgnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5wYXJhZ3JhcGgodGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dCkpO1xuICAgIH1cbiAgICBjYXNlICd0ZXh0Jzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIucGFyYWdyYXBoKHRoaXMucGFyc2VUZXh0KCkpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBIZWxwZXJzXG4gKi9cblxuZnVuY3Rpb24gZXNjYXBlKGh0bWwsIGVuY29kZSkge1xuICByZXR1cm4gaHRtbFxuICAgIC5yZXBsYWNlKCFlbmNvZGUgPyAvJig/ISM/XFx3KzspL2cgOiAvJi9nLCAnJmFtcDsnKVxuICAgIC5yZXBsYWNlKC88L2csICcmbHQ7JylcbiAgICAucmVwbGFjZSgvPi9nLCAnJmd0OycpXG4gICAgLnJlcGxhY2UoL1wiL2csICcmcXVvdDsnKVxuICAgIC5yZXBsYWNlKC8nL2csICcmIzM5OycpO1xufVxuXG5mdW5jdGlvbiB1bmVzY2FwZShodG1sKSB7XG5cdC8vIGV4cGxpY2l0bHkgbWF0Y2ggZGVjaW1hbCwgaGV4LCBhbmQgbmFtZWQgSFRNTCBlbnRpdGllcyBcbiAgcmV0dXJuIGh0bWwucmVwbGFjZSgvJigjKD86XFxkKyl8KD86I3hbMC05QS1GYS1mXSspfCg/OlxcdyspKTs/L2csIGZ1bmN0aW9uKF8sIG4pIHtcbiAgICBuID0gbi50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChuID09PSAnY29sb24nKSByZXR1cm4gJzonO1xuICAgIGlmIChuLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgICByZXR1cm4gbi5jaGFyQXQoMSkgPT09ICd4J1xuICAgICAgICA/IFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobi5zdWJzdHJpbmcoMiksIDE2KSlcbiAgICAgICAgOiBTdHJpbmcuZnJvbUNoYXJDb2RlKCtuLnN1YnN0cmluZygxKSk7XG4gICAgfVxuICAgIHJldHVybiAnJztcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2UocmVnZXgsIG9wdCkge1xuICByZWdleCA9IHJlZ2V4LnNvdXJjZTtcbiAgb3B0ID0gb3B0IHx8ICcnO1xuICByZXR1cm4gZnVuY3Rpb24gc2VsZihuYW1lLCB2YWwpIHtcbiAgICBpZiAoIW5hbWUpIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4LCBvcHQpO1xuICAgIHZhbCA9IHZhbC5zb3VyY2UgfHwgdmFsO1xuICAgIHZhbCA9IHZhbC5yZXBsYWNlKC8oXnxbXlxcW10pXFxeL2csICckMScpO1xuICAgIHJlZ2V4ID0gcmVnZXgucmVwbGFjZShuYW1lLCB2YWwpO1xuICAgIHJldHVybiBzZWxmO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbm5vb3AuZXhlYyA9IG5vb3A7XG5cbmZ1bmN0aW9uIG1lcmdlKG9iaikge1xuICB2YXIgaSA9IDFcbiAgICAsIHRhcmdldFxuICAgICwga2V5O1xuXG4gIGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdGFyZ2V0ID0gYXJndW1lbnRzW2ldO1xuICAgIGZvciAoa2V5IGluIHRhcmdldCkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSB0YXJnZXRba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5cbi8qKlxuICogTWFya2VkXG4gKi9cblxuZnVuY3Rpb24gbWFya2VkKHNyYywgb3B0LCBjYWxsYmFjaykge1xuICBpZiAoY2FsbGJhY2sgfHwgdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gb3B0O1xuICAgICAgb3B0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQgfHwge30pO1xuXG4gICAgdmFyIGhpZ2hsaWdodCA9IG9wdC5oaWdobGlnaHRcbiAgICAgICwgdG9rZW5zXG4gICAgICAsIHBlbmRpbmdcbiAgICAgICwgaSA9IDA7XG5cbiAgICB0cnkge1xuICAgICAgdG9rZW5zID0gTGV4ZXIubGV4KHNyYywgb3B0KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICB9XG5cbiAgICBwZW5kaW5nID0gdG9rZW5zLmxlbmd0aDtcblxuICAgIHZhciBkb25lID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIG9wdC5oaWdobGlnaHQgPSBoaWdobGlnaHQ7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb3V0O1xuXG4gICAgICB0cnkge1xuICAgICAgICBvdXQgPSBQYXJzZXIucGFyc2UodG9rZW5zLCBvcHQpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBlcnIgPSBlO1xuICAgICAgfVxuXG4gICAgICBvcHQuaGlnaGxpZ2h0ID0gaGlnaGxpZ2h0O1xuXG4gICAgICByZXR1cm4gZXJyXG4gICAgICAgID8gY2FsbGJhY2soZXJyKVxuICAgICAgICA6IGNhbGxiYWNrKG51bGwsIG91dCk7XG4gICAgfTtcblxuICAgIGlmICghaGlnaGxpZ2h0IHx8IGhpZ2hsaWdodC5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZSBvcHQuaGlnaGxpZ2h0O1xuXG4gICAgaWYgKCFwZW5kaW5nKSByZXR1cm4gZG9uZSgpO1xuXG4gICAgZm9yICg7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIChmdW5jdGlvbih0b2tlbikge1xuICAgICAgICBpZiAodG9rZW4udHlwZSAhPT0gJ2NvZGUnKSB7XG4gICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodCh0b2tlbi50ZXh0LCB0b2tlbi5sYW5nLCBmdW5jdGlvbihlcnIsIGNvZGUpIHtcbiAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgIGlmIChjb2RlID09IG51bGwgfHwgY29kZSA9PT0gdG9rZW4udGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRva2VuLnRleHQgPSBjb2RlO1xuICAgICAgICAgIHRva2VuLmVzY2FwZWQgPSB0cnVlO1xuICAgICAgICAgIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSkodG9rZW5zW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBpZiAob3B0KSBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICAgIHJldHVybiBQYXJzZXIucGFyc2UoTGV4ZXIubGV4KHNyYywgb3B0KSwgb3B0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGUubWVzc2FnZSArPSAnXFxuUGxlYXNlIHJlcG9ydCB0aGlzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL21hcmtlZC4nO1xuICAgIGlmICgob3B0IHx8IG1hcmtlZC5kZWZhdWx0cykuc2lsZW50KSB7XG4gICAgICByZXR1cm4gJzxwPkFuIGVycm9yIG9jY3VyZWQ6PC9wPjxwcmU+J1xuICAgICAgICArIGVzY2FwZShlLm1lc3NhZ2UgKyAnJywgdHJ1ZSlcbiAgICAgICAgKyAnPC9wcmU+JztcbiAgICB9XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuXG4vKipcbiAqIE9wdGlvbnNcbiAqL1xuXG5tYXJrZWQub3B0aW9ucyA9XG5tYXJrZWQuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uKG9wdCkge1xuICBtZXJnZShtYXJrZWQuZGVmYXVsdHMsIG9wdCk7XG4gIHJldHVybiBtYXJrZWQ7XG59O1xuXG5tYXJrZWQuZGVmYXVsdHMgPSB7XG4gIGdmbTogdHJ1ZSxcbiAgdGFibGVzOiB0cnVlLFxuICBicmVha3M6IGZhbHNlLFxuICBwZWRhbnRpYzogZmFsc2UsXG4gIHNhbml0aXplOiBmYWxzZSxcbiAgc2FuaXRpemVyOiBudWxsLFxuICBtYW5nbGU6IHRydWUsXG4gIHNtYXJ0TGlzdHM6IGZhbHNlLFxuICBzaWxlbnQ6IGZhbHNlLFxuICBoaWdobGlnaHQ6IG51bGwsXG4gIGxhbmdQcmVmaXg6ICdsYW5nLScsXG4gIHNtYXJ0eXBhbnRzOiBmYWxzZSxcbiAgaGVhZGVyUHJlZml4OiAnJyxcbiAgcmVuZGVyZXI6IG5ldyBSZW5kZXJlcixcbiAgeGh0bWw6IGZhbHNlXG59O1xuXG4vKipcbiAqIEV4cG9zZVxuICovXG5cbm1hcmtlZC5QYXJzZXIgPSBQYXJzZXI7XG5tYXJrZWQucGFyc2VyID0gUGFyc2VyLnBhcnNlO1xuXG5tYXJrZWQuUmVuZGVyZXIgPSBSZW5kZXJlcjtcblxubWFya2VkLkxleGVyID0gTGV4ZXI7XG5tYXJrZWQubGV4ZXIgPSBMZXhlci5sZXg7XG5cbm1hcmtlZC5JbmxpbmVMZXhlciA9IElubGluZUxleGVyO1xubWFya2VkLmlubGluZUxleGVyID0gSW5saW5lTGV4ZXIub3V0cHV0O1xuXG5tYXJrZWQucGFyc2UgPSBtYXJrZWQ7XG5cbmlmICh0cnVlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gbWFya2VkO1xufSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gbWFya2VkOyB9KTtcbn0gZWxzZSB7XG4gIHRoaXMubWFya2VkID0gbWFya2VkO1xufVxuXG59KS5jYWxsKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWwpO1xufSgpKTtcblxuLyogV0VCUEFDSyBWQVIgSU5KRUNUSU9OICovfS5jYWxsKGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18oMjQpKSlcblxuLyoqKi8gfSksXG4vKiAyNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuLyoqKi8gfSlcbi8qKioqKiovIF0pO1xufSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRlbW8uanMiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyMik7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgZDA2NzIxZTVmZTcyY2I3ZjkwNTMiLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJleHBvcnQgY29uc3QgaW5jbHVkZXMgPSAodmFsLCBhcnIpID0+XG4gIGFyci5pbmNsdWRlcyA/IGFyci5pbmNsdWRlcyh2YWwpIDogISFhcnIuZmlsdGVyKChpdGVtKSA9PiBpdGVtID09PSB2YWwpLmxlbmd0aFxuZXhwb3J0IGNvbnN0IHZhbHVlcyA9IE9iamVjdC52YWx1ZXMgfHwgKChvYmopID0+IE9iamVjdC5rZXlzKG9iaikubWFwKChrZXkpID0+IG9ialtrZXldKSlcbmV4cG9ydCBjb25zdCBjb21wb3NlID0gKC4uLmZucykgPT4gKHZhbCkgPT4gZm5zLnJlZHVjZVJpZ2h0KChjdXJyVmFsLCBmbikgPT4gZm4oY3VyclZhbCksIHZhbClcbmV4cG9ydCBjb25zdCBtaW5NYXAgPSAoLi4udmFscykgPT4gKHZhbCkgPT4gTWF0aC5taW4oLi4udmFscywgdmFsKVxuZXhwb3J0IGNvbnN0IG1heE1hcCA9ICguLi52YWxzKSA9PiAodmFsKSA9PiBNYXRoLm1heCguLi52YWxzLCB2YWwpXG5leHBvcnQgY29uc3Qgbm9vcCA9ICgpID0+IHt9XG5leHBvcnQgY29uc3QgZWFzZU91dFF1aW50ID0gKHQpID0+IDEgKyAoLS10KSAqIHQgKiogNFxuZXhwb3J0IGNvbnN0IG9uID0gKGV2dCwgb3B0cyA9IGZhbHNlKSA9PiAoY2IpID0+IChlbCkgPT4ge1xuICBpZiAoZWwgJiYgdHlwZW9mIGVsLmFkZEV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2dCwgY2IsIG9wdHMpXG4gICAgcmV0dXJuICgpID0+IGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0LCBjYilcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgb25XaW5kb3dTY3JvbGwgPSAoY2IpID0+IG9uKCdzY3JvbGwnLCB0cnVlKShjYikod2luZG93KVxuXG5leHBvcnQgY29uc3Qgb25TY3JvbGwgPSAoY2IsIHsgdGFyZ2V0ID0gd2luZG93IH0gPSB7fSkgPT5cbiAgb25XaW5kb3dTY3JvbGwoKGUpID0+ICh0YXJnZXQgPT09IHdpbmRvdyB8fCB0YXJnZXQgPT09IGUudGFyZ2V0KSAmJiBjYihlKSlcblxuZXhwb3J0IGNvbnN0IG9uU2Nyb2xsRW5kID0gKGNiLCB7IHdhaXQgPSAxMDAsIHRhcmdldCA9IHdpbmRvdyB9ID0ge30pID0+ICgodGltZW91dElEKSA9PiBvblNjcm9sbCgoZXZ0KSA9PiB7XG4gIGNsZWFyVGltZW91dCh0aW1lb3V0SUQpXG4gIHRpbWVvdXRJRCA9IHNldFRpbWVvdXQoKCkgPT4gZXZ0LnRhcmdldCA9PT0gdGFyZ2V0ID8gY2IoKSA6IHVuZGVmaW5lZCwgd2FpdClcbn0pKSgwKVxuXG5leHBvcnQgY29uc3Qgb25TY3JvbGxTdGFydCA9IChjYiwgeyB0YXJnZXQgPSB3aW5kb3cgfSA9IHt9KSA9PiB7XG4gIGxldCBzdGFydGVkID0gZmFsc2VcbiAgY29uc3Qgb2ZmU2Nyb2xsRW5kID0gb25TY3JvbGxFbmQoKCkgPT4geyBzdGFydGVkID0gZmFsc2UgfSwgeyB0YXJnZXQgfSlcbiAgY29uc3Qgb2ZmU2Nyb2xsID0gb25TY3JvbGwoKGUpID0+IHtcbiAgICBpZiAoIXN0YXJ0ZWQpIHtcbiAgICAgIHN0YXJ0ZWQgPSB0cnVlXG4gICAgICBjYihlKVxuICAgIH1cbiAgfSwgeyB0YXJnZXQgfSlcblxuICByZXR1cm4gKCkgPT4ge1xuICAgIG9mZlNjcm9sbCgpXG4gICAgb2ZmU2Nyb2xsRW5kKClcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgb25Td2lwZSA9IChjYikgPT4gKHRhcmdldCkgPT4ge1xuICBjb25zdCBvZmZUb3VjaFN0YXJ0ID0gb24oJ3RvdWNoc3RhcnQnKSgoeyB0YXJnZXRUb3VjaGVzIH0pID0+IHtcbiAgICBjb25zdCB7IHBhZ2VYOiBzdGFydFgsIHBhZ2VZOiBzdGFydFkgfSA9IHRhcmdldFRvdWNoZXNbMF1cbiAgICBjb25zdCBvZmZUb3VjaEVuZCA9IG9uKCd0b3VjaGVuZCcpKCh7IGNoYW5nZWRUb3VjaGVzIH0pID0+IHtcbiAgICAgIGNvbnN0IHsgcGFnZVg6IGVuZFgsIHBhZ2VZOiBlbmRZIH0gPSBjaGFuZ2VkVG91Y2hlc1swXVxuICAgICAgY29uc3QgeERpZmYgPSBlbmRYIC0gc3RhcnRYXG4gICAgICBjb25zdCBhYnNYRGlmZiA9IE1hdGguYWJzKHhEaWZmKVxuICAgICAgY29uc3QgeURpZmYgPSBlbmRZIC0gc3RhcnRZXG4gICAgICBjb25zdCBhYnNZRGlmZiA9IE1hdGguYWJzKHlEaWZmKVxuICAgICAgaWYgKE1hdGgubWF4KGFic1hEaWZmLCBhYnNZRGlmZikgPiAyMCkge1xuICAgICAgICBjb25zdCBkaXIgPSBhYnNYRGlmZiA+IGFic1lEaWZmID8gKC8qIGggKi8geERpZmYgPCAwID8gJ3JpZ2h0JyA6ICdsZWZ0JykgOiAoLyogdiAqLyB5RGlmZiA8IDAgPyAnZG93bicgOiAndXAnKVxuICAgICAgICBjYihkaXIpXG4gICAgICB9XG4gICAgICBvZmZUb3VjaEVuZCgpXG4gICAgfSkodGFyZ2V0KVxuICB9KSh0YXJnZXQpXG5cbiAgcmV0dXJuIG9mZlRvdWNoU3RhcnRcbn1cblxuZXhwb3J0IGNvbnN0IHRyYWNrVG91Y2hlc0ZvckVsZW1lbnQgPSAoZWwpID0+IHtcbiAgbGV0IHRvdWNoSWRzID0gW11cbiAgb24oJ3RvdWNoZW5kJykoKHsgdGFyZ2V0VG91Y2hlcyB9KSA9PiB7IHRvdWNoSWRzID0gdGFyZ2V0VG91Y2hlcyB9KShlbClcbiAgcmV0dXJuICgpID0+IHRvdWNoSWRzLmxlbmd0aFxufVxuXG5leHBvcnQgY29uc3QgdHJhY2tPbmdvaW5nTW91c2VJbnRlcmFjdGlvbiA9IChlbCkgPT4ge1xuICBsZXQgaXNJbnRlcmFjdGluZyA9IGZhbHNlXG4gIG9uKCdtb3VzZWRvd24nKSgoKSA9PiB7IGlzSW50ZXJhY3RpbmcgPSB0cnVlIH0pKGVsKVxuICBvbignbW91c2V1cCcpKCgpID0+IHsgaXNJbnRlcmFjdGluZyA9IGZhbHNlIH0pKGRvY3VtZW50LmJvZHkpXG4gIHJldHVybiAoKSA9PiBpc0ludGVyYWN0aW5nXG59XG5cbmV4cG9ydCBjb25zdCBoYXNPbmdvaW5nSW50ZXJhY3Rpb24gPSAoZWwpID0+IHtcbiAgY29uc3QgZ2V0T25nb2luZ1RvdWNoQ291bnQgPSB0cmFja1RvdWNoZXNGb3JFbGVtZW50KGVsKVxuICBjb25zdCBnZXRPbmdvaW5nTW91c2VDbGljayA9IHRyYWNrT25nb2luZ01vdXNlSW50ZXJhY3Rpb24oZWwpXG4gIHJldHVybiAoKSA9PiBnZXRPbmdvaW5nVG91Y2hDb3VudCgpIHx8IGdldE9uZ29pbmdNb3VzZUNsaWNrKClcbn1cblxuZXhwb3J0IGNvbnN0IGlzV2hvbGx5SW5WaWV3ID0gKHBhcmVudCkgPT4gKGNoaWxkID0geyBnZXRCb3VuZGluZ0NsaWVudFJlY3Q6ICgpID0+ICh7fSkgfSkgPT4ge1xuICBjb25zdCB7IGxlZnQ6IGNMZWZ0LCByaWdodDogY1JpZ2h0IH0gPSBjaGlsZC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICBjb25zdCB7IGxlZnQ6IHBMZWZ0LCByaWdodDogcFJpZ2h0IH0gPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgcmV0dXJuIChjTGVmdCA+PSBwTGVmdCAmJiBjUmlnaHQgPD0gcFJpZ2h0KVxufVxuXG5leHBvcnQgY29uc3QgYW5pbWF0ZSA9IChlbCwge1xuICBkZWx0YSA9IDAsXG4gIGltbWVkaWF0ZSA9IGZhbHNlLFxuICBkdXJhdGlvbiA9IDUwMCxcbiAgZWFzaW5nID0gZWFzZU91dFF1aW50LFxuICBwcm9wID0gJ3Njcm9sbFRvcCdcbn0gPSB7fSkgPT4gKG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICBpZiAoIWRlbHRhKSByZXR1cm4gcmVzKClcbiAgY29uc3QgaW5pdGlhbFZhbCA9IGVsW3Byb3BdXG4gIGlmIChpbW1lZGlhdGUpIHtcbiAgICBlbFtwcm9wXSA9IGluaXRpYWxWYWwgKyBkZWx0YVxuICAgIHJldHVybiByZXMoKVxuICB9XG4gIGxldCBoYXNCYWlsZWQgPSBmYWxzZVxuICBjb25zdCBiYWlsID0gKCkgPT4ge1xuICAgIGhhc0JhaWxlZCA9IHRydWVcbiAgICBjb25zdCBwb3MgPSBlbFtwcm9wXVxuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBiYWlsKVxuICAgIGVsW3Byb3BdID0gcG9zXG4gICAgcmV0dXJuIHJlaignQW5pbWF0aW9uIGludGVydXB0ZWQgYnkgaW50ZXJhY3Rpb24nKVxuICB9XG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBiYWlsKVxuICBsZXQgc3RhcnRUaW1lID0gbnVsbFxuICBjb25zdCBzdGVwID0gKHRpbWVzdGFtcCkgPT4ge1xuICAgIGlmIChoYXNCYWlsZWQpIHJldHVyblxuICAgIGlmICghc3RhcnRUaW1lKSBzdGFydFRpbWUgPSB0aW1lc3RhbXBcbiAgICBjb25zdCBwcm9ncmVzc1RpbWUgPSB0aW1lc3RhbXAgLSBzdGFydFRpbWVcbiAgICBjb25zdCBwcm9ncmVzc1JhdGlvID0gZWFzaW5nKHByb2dyZXNzVGltZSAvIGR1cmF0aW9uKVxuICAgIGVsW3Byb3BdID0gaW5pdGlhbFZhbCArIChkZWx0YSAqIHByb2dyZXNzUmF0aW8pXG4gICAgaWYgKHByb2dyZXNzVGltZSA8IGR1cmF0aW9uKSB7XG4gICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApXG4gICAgfSBlbHNlIHtcbiAgICAgIGVsW3Byb3BdID0gaW5pdGlhbFZhbCArIGRlbHRhIC8vIGp1bXAgdG8gZW5kIHdoZW4gYW5pbWF0aW9uIGlzIGNvbXBsZXRlLiBuZWNlc3NhcnkgYXQgbGVhc3QgZm9yIGltbWVkaWF0ZSBzY3JvbGxcbiAgICAgIHJlcygpXG4gICAgfVxuICB9XG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcClcbn0pKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3V0aWxzLmpzIiwiLypcbiBSZWFjdCB2MTYuMC4wXG4gcmVhY3QucHJvZHVjdGlvbi5taW4uanNcblxuIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuXG4gVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxwPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtyZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpO3ZhciByPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uXCIpO1xuZnVuY3Rpb24gdChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsZT0wO2U8YjtlKyspZCs9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tlKzFdKTtiPUVycm9yKGQrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fVxudmFyIHU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIHYoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZHx8dX12LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O3YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT90KFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07di5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiB3KGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWR8fHV9ZnVuY3Rpb24geCgpe314LnByb3RvdHlwZT12LnByb3RvdHlwZTt2YXIgeT13LnByb3RvdHlwZT1uZXcgeDt5LmNvbnN0cnVjdG9yPXc7Zih5LHYucHJvdG90eXBlKTt5LmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO2Z1bmN0aW9uIHooYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZHx8dX12YXIgQT16LnByb3RvdHlwZT1uZXcgeDtBLmNvbnN0cnVjdG9yPXo7ZihBLHYucHJvdG90eXBlKTtBLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD0hMDtBLnJlbmRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3BzLmNoaWxkcmVufTtcbnZhciBCPXtDb21wb25lbnQ6dixQdXJlQ29tcG9uZW50OncsQXN5bmNDb21wb25lbnQ6en0sQz17Y3VycmVudDpudWxsfSxEPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0mJlN5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIil8fDYwMTAzLEY9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtmdW5jdGlvbiBHKGEsYixkLGUsYyxnLGspe3JldHVybnskJHR5cGVvZjpFLHR5cGU6YSxrZXk6YixyZWY6ZCxwcm9wczprLF9vd25lcjpnfX1cbkcuY3JlYXRlRWxlbWVudD1mdW5jdGlvbihhLGIsZCl7dmFyIGUsYz17fSxnPW51bGwsaz1udWxsLG09bnVsbCxxPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxtPXZvaWQgMD09PWIuX19zZWxmP251bGw6Yi5fX3NlbGYscT12b2lkIDA9PT1iLl9fc291cmNlP251bGw6Yi5fX3NvdXJjZSxiKUQuY2FsbChiLGUpJiYhRi5oYXNPd25Qcm9wZXJ0eShlKSYmKGNbZV09YltlXSk7dmFyIGw9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1sKWMuY2hpbGRyZW49ZDtlbHNlIGlmKDE8bCl7Zm9yKHZhciBoPUFycmF5KGwpLG49MDtuPGw7bisrKWhbbl09YXJndW1lbnRzW24rMl07Yy5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGw9YS5kZWZhdWx0UHJvcHMsbCl2b2lkIDA9PT1jW2VdJiYoY1tlXT1sW2VdKTtyZXR1cm4gRyhhLGcsayxtLHEsQy5jdXJyZW50LGMpfTtcbkcuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1HLmNyZWF0ZUVsZW1lbnQuYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtHLmNsb25lQW5kUmVwbGFjZUtleT1mdW5jdGlvbihhLGIpe3JldHVybiBHKGEudHlwZSxiLGEucmVmLGEuX3NlbGYsYS5fc291cmNlLGEuX293bmVyLGEucHJvcHMpfTtcbkcuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixkKXt2YXIgZT1mKHt9LGEucHJvcHMpLGM9YS5rZXksZz1hLnJlZixrPWEuX3NlbGYsbT1hLl9zb3VyY2UscT1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYscT1DLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoYz1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGw9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUQuY2FsbChiLGgpJiYhRi5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09bD9sW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGgpe2w9QXJyYXkoaCk7Zm9yKHZhciBuPTA7bjxoO24rKylsW25dPWFyZ3VtZW50c1tuKzJdO2UuY2hpbGRyZW49bH1yZXR1cm4gRyhhLnR5cGUsYyxnLGssbSxxLGUpfTtcbkcuaXNWYWxpZEVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PUV9O3ZhciBIPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcixJPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSYmU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKXx8NjAxMDM7ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIlxceDNkXCI6XCJcXHgzZDBcIixcIjpcIjpcIlxceDNkMlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgSj0vXFwvKy9nLEs9W107XG5mdW5jdGlvbiBMKGEsYixkLGUpe2lmKEsubGVuZ3RoKXt2YXIgYz1LLnBvcCgpO2MucmVzdWx0PWE7Yy5rZXlQcmVmaXg9YjtjLmZ1bmM9ZDtjLmNvbnRleHQ9ZTtjLmNvdW50PTA7cmV0dXJuIGN9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmUsY291bnQ6MH19ZnVuY3Rpb24gTShhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPksubGVuZ3RoJiZLLnB1c2goYSl9XG5mdW5jdGlvbiBOKGEsYixkLGUpe3ZhciBjPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1jfHxcImJvb2xlYW5cIj09PWMpYT1udWxsO2lmKG51bGw9PT1hfHxcInN0cmluZ1wiPT09Y3x8XCJudW1iZXJcIj09PWN8fFwib2JqZWN0XCI9PT1jJiZhLiQkdHlwZW9mPT09SSlyZXR1cm4gZChlLGEsXCJcIj09PWI/XCIuXCIrTyhhLDApOmIpLDE7dmFyIGc9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7Yz1hW2tdO3ZhciBtPWIrTyhjLGspO2crPU4oYyxtLGQsZSl9ZWxzZSBpZihtPUgmJmFbSF18fGFbXCJAQGl0ZXJhdG9yXCJdLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtKWZvcihhPW0uY2FsbChhKSxrPTA7IShjPWEubmV4dCgpKS5kb25lOyljPWMudmFsdWUsbT1iK08oYyxrKyspLGcrPU4oYyxtLGQsZSk7ZWxzZVwib2JqZWN0XCI9PT1jJiYoZD1cIlwiK2EsdChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitcbk9iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpkLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBPKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBQKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1mdW5jdGlvbiBRKGEsYixkKXt2YXIgZT1hLnJlc3VsdCxjPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1IoYSxlLGQsci50aGF0UmV0dXJuc0FyZ3VtZW50KTpudWxsIT1hJiYoRy5pc1ZhbGlkRWxlbWVudChhKSYmKGE9Ry5jbG9uZUFuZFJlcGxhY2VLZXkoYSxjKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShKLFwiJFxceDI2L1wiKStcIi9cIikrZCkpLGUucHVzaChhKSl9XG5mdW5jdGlvbiBSKGEsYixkLGUsYyl7dmFyIGc9XCJcIjtudWxsIT1kJiYoZz0oXCJcIitkKS5yZXBsYWNlKEosXCIkXFx4MjYvXCIpK1wiL1wiKTtiPUwoYixnLGUsYyk7bnVsbD09YXx8TihhLFwiXCIsUSxiKTtNKGIpfXZhciBTPXtmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9TChudWxsLG51bGwsYixkKTtudWxsPT1hfHxOKGEsXCJcIixQLGIpO00oYil9LG1hcDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtSKGEsZSxudWxsLGIsZCk7cmV0dXJuIGV9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hPzA6TihhLFwiXCIsci50aGF0UmV0dXJuc051bGwsbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107UihhLGIsbnVsbCxyLnRoYXRSZXR1cm5zQXJndW1lbnQpO3JldHVybiBifX07XG5tb2R1bGUuZXhwb3J0cz17Q2hpbGRyZW46e21hcDpTLm1hcCxmb3JFYWNoOlMuZm9yRWFjaCxjb3VudDpTLmNvdW50LHRvQXJyYXk6Uy50b0FycmF5LG9ubHk6ZnVuY3Rpb24oYSl7Ry5pc1ZhbGlkRWxlbWVudChhKT92b2lkIDA6dChcIjE0M1wiKTtyZXR1cm4gYX19LENvbXBvbmVudDpCLkNvbXBvbmVudCxQdXJlQ29tcG9uZW50OkIuUHVyZUNvbXBvbmVudCx1bnN0YWJsZV9Bc3luY0NvbXBvbmVudDpCLkFzeW5jQ29tcG9uZW50LGNyZWF0ZUVsZW1lbnQ6Ry5jcmVhdGVFbGVtZW50LGNsb25lRWxlbWVudDpHLmNsb25lRWxlbWVudCxpc1ZhbGlkRWxlbWVudDpHLmlzVmFsaWRFbGVtZW50LGNyZWF0ZUZhY3Rvcnk6Ry5jcmVhdGVGYWN0b3J5LHZlcnNpb246XCIxNi4wLjBcIixfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Qyxhc3NpZ246Zn19O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3Qvbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qXG4gUmVhY3QgdjE2LjAuMFxuIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuXG4gQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG5cbiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIik7cmVxdWlyZShcImZianMvbGliL2ludmFyaWFudFwiKTt2YXIgbD1yZXF1aXJlKFwiZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnRcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxiYT1yZXF1aXJlKFwiZmJqcy9saWIvRXZlbnRMaXN0ZW5lclwiKSxjYT1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxkYT1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlPYmplY3RcIiksZWE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxmYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGhhPXJlcXVpcmUoXCJmYmpzL2xpYi9mb2N1c05vZGVcIiksaWE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIik7XG5mdW5jdGlvbiB3KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudFxceDNkXCIrYSxkPTA7ZDxiO2QrKyljKz1cIlxceDI2YXJnc1tdXFx4M2RcIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2I9RXJyb3IoYytcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2IubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIjtiLmZyYW1lc1RvUG9wPTE7dGhyb3cgYjt9YWE/dm9pZCAwOncoXCIyMjdcIik7XG5mdW5jdGlvbiBqYShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxudmFyIGthPXtOYW1lc3BhY2VzOntodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifSxnZXRJbnRyaW5zaWNOYW1lc3BhY2U6amEsZ2V0Q2hpbGROYW1lc3BhY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2phKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfX0sbGE9bnVsbCxvYT17fTtcbmZ1bmN0aW9uIHBhKCl7aWYobGEpZm9yKHZhciBhIGluIG9hKXt2YXIgYj1vYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6dyhcIjk2XCIsYSk7aWYoIXFhLnBsdWdpbnNbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6dyhcIjk3XCIsYSk7cWEucGx1Z2luc1tjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmV2ZW50TmFtZURpc3BhdGNoQ29uZmlncy5oYXNPd25Qcm9wZXJ0eShoKT93KFwiOTlcIixoKTp2b2lkIDA7cWEuZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnJhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhyYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOncoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiByYShhLGIsYyl7cWEucmVnaXN0cmF0aW9uTmFtZU1vZHVsZXNbYV0/dyhcIjEwMFwiLGEpOnZvaWQgMDtxYS5yZWdpc3RyYXRpb25OYW1lTW9kdWxlc1thXT1iO3FhLnJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXNbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc31cbnZhciBxYT17cGx1Z2luczpbXSxldmVudE5hbWVEaXNwYXRjaENvbmZpZ3M6e30scmVnaXN0cmF0aW9uTmFtZU1vZHVsZXM6e30scmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llczp7fSxwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzOm51bGwsaW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT93KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtwYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107b2EuaGFzT3duUHJvcGVydHkoYykmJm9hW2NdPT09ZHx8KG9hW2NdP3coXCIxMDJcIixjKTp2b2lkIDAsb2FbY109ZCxiPSEwKX1iJiZwYSgpfX0sc2E9cWEsdGE9e2NoaWxkcmVuOiEwLGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiEwLGF1dG9Gb2N1czohMCxkZWZhdWx0VmFsdWU6ITAsZGVmYXVsdENoZWNrZWQ6ITAsXG5pbm5lckhUTUw6ITAsc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nOiEwLHN0eWxlOiEwfTtmdW5jdGlvbiB1YShhLGIpe3JldHVybihhJmIpPT09Yn1cbnZhciB3YT17TVVTVF9VU0VfUFJPUEVSVFk6MSxIQVNfQk9PTEVBTl9WQUxVRTo0LEhBU19OVU1FUklDX1ZBTFVFOjgsSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUU6MjQsSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRTozMixIQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUU6NjQsaW5qZWN0RE9NUHJvcGVydHlDb25maWc6ZnVuY3Rpb24oYSl7dmFyIGI9d2EsYz1hLlByb3BlcnRpZXN8fHt9LGQ9YS5ET01BdHRyaWJ1dGVOYW1lc3BhY2VzfHx7fSxlPWEuRE9NQXR0cmlidXRlTmFtZXN8fHt9O2E9YS5ET01NdXRhdGlvbk1ldGhvZHN8fHt9O2Zvcih2YXIgZiBpbiBjKXt4YS5wcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KGYpP3coXCI0OFwiLGYpOnZvaWQgMDt2YXIgZz1mLnRvTG93ZXJDYXNlKCksaD1jW2ZdO2c9e2F0dHJpYnV0ZU5hbWU6ZyxhdHRyaWJ1dGVOYW1lc3BhY2U6bnVsbCxwcm9wZXJ0eU5hbWU6ZixtdXRhdGlvbk1ldGhvZDpudWxsLG11c3RVc2VQcm9wZXJ0eTp1YShoLGIuTVVTVF9VU0VfUFJPUEVSVFkpLFxuaGFzQm9vbGVhblZhbHVlOnVhKGgsYi5IQVNfQk9PTEVBTl9WQUxVRSksaGFzTnVtZXJpY1ZhbHVlOnVhKGgsYi5IQVNfTlVNRVJJQ19WQUxVRSksaGFzUG9zaXRpdmVOdW1lcmljVmFsdWU6dWEoaCxiLkhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFKSxoYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlOnVhKGgsYi5IQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFKSxoYXNTdHJpbmdCb29sZWFuVmFsdWU6dWEoaCxiLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSl9OzE+PWcuaGFzQm9vbGVhblZhbHVlK2cuaGFzTnVtZXJpY1ZhbHVlK2cuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZT92b2lkIDA6dyhcIjUwXCIsZik7ZS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcuYXR0cmlidXRlTmFtZT1lW2ZdKTtkLmhhc093blByb3BlcnR5KGYpJiYoZy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZFtmXSk7YS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcubXV0YXRpb25NZXRob2Q9YVtmXSk7eGEucHJvcGVydGllc1tmXT1cbmd9fX0seGE9e0lEX0FUVFJJQlVURV9OQU1FOlwiZGF0YS1yZWFjdGlkXCIsUk9PVF9BVFRSSUJVVEVfTkFNRTpcImRhdGEtcmVhY3Ryb290XCIsQVRUUklCVVRFX05BTUVfU1RBUlRfQ0hBUjpcIjpBLVpfYS16XFxcXHUwMEMwLVxcXFx1MDBENlxcXFx1MDBEOC1cXFxcdTAwRjZcXFxcdTAwRjgtXFxcXHUwMkZGXFxcXHUwMzcwLVxcXFx1MDM3RFxcXFx1MDM3Ri1cXFxcdTFGRkZcXFxcdTIwMEMtXFxcXHUyMDBEXFxcXHUyMDcwLVxcXFx1MjE4RlxcXFx1MkMwMC1cXFxcdTJGRUZcXFxcdTMwMDEtXFxcXHVEN0ZGXFxcXHVGOTAwLVxcXFx1RkRDRlxcXFx1RkRGMC1cXFxcdUZGRkRcIixBVFRSSUJVVEVfTkFNRV9DSEFSOlwiOkEtWl9hLXpcXFxcdTAwQzAtXFxcXHUwMEQ2XFxcXHUwMEQ4LVxcXFx1MDBGNlxcXFx1MDBGOC1cXFxcdTAyRkZcXFxcdTAzNzAtXFxcXHUwMzdEXFxcXHUwMzdGLVxcXFx1MUZGRlxcXFx1MjAwQy1cXFxcdTIwMERcXFxcdTIwNzAtXFxcXHUyMThGXFxcXHUyQzAwLVxcXFx1MkZFRlxcXFx1MzAwMS1cXFxcdUQ3RkZcXFxcdUY5MDAtXFxcXHVGRENGXFxcXHVGREYwLVxcXFx1RkZGRFxcXFwtLjAtOVxcXFx1MDBCN1xcXFx1MDMwMC1cXFxcdTAzNkZcXFxcdTIwM0YtXFxcXHUyMDQwXCIsXG5wcm9wZXJ0aWVzOnt9LHNob3VsZFNldEF0dHJpYnV0ZTpmdW5jdGlvbihhLGIpe2lmKHhhLmlzUmVzZXJ2ZWRQcm9wKGEpfHwhKFwib1wiIT09YVswXSYmXCJPXCIhPT1hWzBdfHxcIm5cIiE9PWFbMV0mJlwiTlwiIT09YVsxXSkpcmV0dXJuITE7aWYobnVsbD09PWIpcmV0dXJuITA7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiYm9vbGVhblwiOnJldHVybiB4YS5zaG91bGRBdHRyaWJ1dGVBY2NlcHRCb29sZWFuVmFsdWUoYSk7Y2FzZSBcInVuZGVmaW5lZFwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm9iamVjdFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxnZXRQcm9wZXJ0eUluZm86ZnVuY3Rpb24oYSl7cmV0dXJuIHhhLnByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoYSk/eGEucHJvcGVydGllc1thXTpudWxsfSxzaG91bGRBdHRyaWJ1dGVBY2NlcHRCb29sZWFuVmFsdWU6ZnVuY3Rpb24oYSl7aWYoeGEuaXNSZXNlcnZlZFByb3AoYSkpcmV0dXJuITA7dmFyIGI9eGEuZ2V0UHJvcGVydHlJbmZvKGEpO1xuaWYoYilyZXR1cm4gYi5oYXNCb29sZWFuVmFsdWV8fGIuaGFzU3RyaW5nQm9vbGVhblZhbHVlfHxiLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCI9PT1hfHxcImFyaWEtXCI9PT1hfSxpc1Jlc2VydmVkUHJvcDpmdW5jdGlvbihhKXtyZXR1cm4gdGEuaGFzT3duUHJvcGVydHkoYSl9LGluamVjdGlvbjp3YX0sQT14YSxFPXtJbmRldGVybWluYXRlQ29tcG9uZW50OjAsRnVuY3Rpb25hbENvbXBvbmVudDoxLENsYXNzQ29tcG9uZW50OjIsSG9zdFJvb3Q6MyxIb3N0UG9ydGFsOjQsSG9zdENvbXBvbmVudDo1LEhvc3RUZXh0OjYsQ29yb3V0aW5lQ29tcG9uZW50OjcsQ29yb3V0aW5lSGFuZGxlclBoYXNlOjgsWWllbGRDb21wb25lbnQ6OSxGcmFnbWVudDoxMH0sRj17RUxFTUVOVF9OT0RFOjEsVEVYVF9OT0RFOjMsQ09NTUVOVF9OT0RFOjgsRE9DVU1FTlRfTk9ERTo5LERPQ1VNRU5UX0ZSQUdNRU5UX05PREU6MTF9LFxueWE9RS5Ib3N0Q29tcG9uZW50LHphPUUuSG9zdFRleHQsQWE9Ri5FTEVNRU5UX05PREUsQmE9Ri5DT01NRU5UX05PREUsRWE9QS5JRF9BVFRSSUJVVEVfTkFNRSxGYT17aGFzQ2FjaGVkQ2hpbGROb2RlczoxfSxHYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxIYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0dhLElhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrR2E7ZnVuY3Rpb24gTGEoYSl7Zm9yKHZhciBiO2I9YS5fcmVuZGVyZWRDb21wb25lbnQ7KWE9YjtyZXR1cm4gYX1mdW5jdGlvbiBNYShhLGIpe2E9TGEoYSk7YS5faG9zdE5vZGU9YjtiW0hhXT1hfVxuZnVuY3Rpb24gTmEoYSxiKXtpZighKGEuX2ZsYWdzJkZhLmhhc0NhY2hlZENoaWxkTm9kZXMpKXt2YXIgYz1hLl9yZW5kZXJlZENoaWxkcmVuO2I9Yi5maXJzdENoaWxkO3ZhciBkO2E6Zm9yKGQgaW4gYylpZihjLmhhc093blByb3BlcnR5KGQpKXt2YXIgZT1jW2RdLGY9TGEoZSkuX2RvbUlEO2lmKDAhPT1mKXtmb3IoO251bGwhPT1iO2I9Yi5uZXh0U2libGluZyl7dmFyIGc9YixoPWY7aWYoZy5ub2RlVHlwZT09PUFhJiZnLmdldEF0dHJpYnV0ZShFYSk9PT1cIlwiK2h8fGcubm9kZVR5cGU9PT1CYSYmZy5ub2RlVmFsdWU9PT1cIiByZWFjdC10ZXh0OiBcIitoK1wiIFwifHxnLm5vZGVUeXBlPT09QmEmJmcubm9kZVZhbHVlPT09XCIgcmVhY3QtZW1wdHk6IFwiK2grXCIgXCIpe01hKGUsYik7Y29udGludWUgYX19dyhcIjMyXCIsZil9fWEuX2ZsYWdzfD1GYS5oYXNDYWNoZWRDaGlsZE5vZGVzfX1cbmZ1bmN0aW9uIE9hKGEpe2lmKGFbSGFdKXJldHVybiBhW0hhXTtmb3IodmFyIGI9W107IWFbSGFdOylpZihiLnB1c2goYSksYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7dmFyIGM9YVtIYV07aWYoYy50YWc9PT15YXx8Yy50YWc9PT16YSlyZXR1cm4gYztmb3IoO2EmJihjPWFbSGFdKTthPWIucG9wKCkpe3ZhciBkPWM7Yi5sZW5ndGgmJk5hKGMsYSl9cmV0dXJuIGR9XG52YXIgRz17Z2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGU6T2EsZ2V0SW5zdGFuY2VGcm9tTm9kZTpmdW5jdGlvbihhKXt2YXIgYj1hW0hhXTtpZihiKXJldHVybiBiLnRhZz09PXlhfHxiLnRhZz09PXphP2I6Yi5faG9zdE5vZGU9PT1hP2I6bnVsbDtiPU9hKGEpO3JldHVybiBudWxsIT1iJiZiLl9ob3N0Tm9kZT09PWE/YjpudWxsfSxnZXROb2RlRnJvbUluc3RhbmNlOmZ1bmN0aW9uKGEpe2lmKGEudGFnPT09eWF8fGEudGFnPT09emEpcmV0dXJuIGEuc3RhdGVOb2RlO3ZvaWQgMD09PWEuX2hvc3ROb2RlP3coXCIzM1wiKTp2b2lkIDA7aWYoYS5faG9zdE5vZGUpcmV0dXJuIGEuX2hvc3ROb2RlO2Zvcih2YXIgYj1bXTshYS5faG9zdE5vZGU7KWIucHVzaChhKSxhLl9ob3N0UGFyZW50P3ZvaWQgMDp3KFwiMzRcIiksYT1hLl9ob3N0UGFyZW50O2Zvcig7Yi5sZW5ndGg7YT1iLnBvcCgpKU5hKGEsYS5faG9zdE5vZGUpO3JldHVybiBhLl9ob3N0Tm9kZX0scHJlY2FjaGVDaGlsZE5vZGVzOk5hLFxucHJlY2FjaGVOb2RlOk1hLHVuY2FjaGVOb2RlOmZ1bmN0aW9uKGEpe3ZhciBiPWEuX2hvc3ROb2RlO2ImJihkZWxldGUgYltIYV0sYS5faG9zdE5vZGU9bnVsbCl9LHByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltIYV09YX0sZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gYVtJYV18fG51bGx9LHVwZGF0ZUZpYmVyUHJvcHM6ZnVuY3Rpb24oYSxiKXthW0lhXT1ifX0sUGE9e3JlbW92ZTpmdW5jdGlvbihhKXthLl9yZWFjdEludGVybmFsRmliZXI9dm9pZCAwfSxnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuX3JlYWN0SW50ZXJuYWxGaWJlcn0saGFzOmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDAhPT1hLl9yZWFjdEludGVybmFsRmliZXJ9LHNldDpmdW5jdGlvbihhLGIpe2EuX3JlYWN0SW50ZXJuYWxGaWJlcj1ifX0sUWE9e1JlYWN0Q3VycmVudE93bmVyOmFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyfTtcbmZ1bmN0aW9uIFJhKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmdldE5hbWUpcmV0dXJuIGEuZ2V0TmFtZSgpO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgYS50YWcpe2E9YS50eXBlO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfXJldHVybiBudWxsfXZhciBKPXtOb0VmZmVjdDowLFBlcmZvcm1lZFdvcms6MSxQbGFjZW1lbnQ6MixVcGRhdGU6NCxQbGFjZW1lbnRBbmRVcGRhdGU6NixEZWxldGlvbjo4LENvbnRlbnRSZXNldDoxNixDYWxsYmFjazozMixFcnI6NjQsUmVmOjEyOH0sU2E9RS5Ib3N0Q29tcG9uZW50LFRhPUUuSG9zdFJvb3QsVWE9RS5Ib3N0UG9ydGFsLFZhPUUuSG9zdFRleHQsV2E9Si5Ob0VmZmVjdCxYYT1KLlBsYWNlbWVudDtcbmZ1bmN0aW9uIFphKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiW1wicmV0dXJuXCJdOyliPWJbXCJyZXR1cm5cIl07ZWxzZXtpZigoYi5lZmZlY3RUYWcmWGEpIT09V2EpcmV0dXJuIDE7Zm9yKDtiW1wicmV0dXJuXCJdOylpZihiPWJbXCJyZXR1cm5cIl0sKGIuZWZmZWN0VGFnJlhhKSE9PVdhKXJldHVybiAxfXJldHVybiBiLnRhZz09PVRhPzI6M31mdW5jdGlvbiAkYShhKXsyIT09WmEoYSk/dyhcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBhYihhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1aYShhKSwzPT09Yj93KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWNbXCJyZXR1cm5cIl0sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuICRhKGUpLGE7aWYoZz09PWQpcmV0dXJuICRhKGUpLGI7Zz1nLnNpYmxpbmd9dyhcIjE4OFwiKX1pZihjW1wicmV0dXJuXCJdIT09ZFtcInJldHVyblwiXSljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp3KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/dyhcIjE5MFwiKTp2b2lkIDB9Yy50YWchPT1UYT93KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifVxudmFyIGJiPXtpc0ZpYmVyTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4gMj09PVphKGEpfSxpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9UGEuZ2V0KGEpKT8yPT09WmEoYSk6ITF9LGZpbmRDdXJyZW50RmliZXJVc2luZ1Nsb3dQYXRoOmFiLGZpbmRDdXJyZW50SG9zdEZpYmVyOmZ1bmN0aW9uKGEpe2E9YWIoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoYi50YWc9PT1TYXx8Yi50YWc9PT1WYSlyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuIG51bGw7Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH0sZmluZEN1cnJlbnRIb3N0RmliZXJXaXRoTm9Qb3J0YWxzOmZ1bmN0aW9uKGEpe2E9YWIoYSk7XG5pZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZihiLnRhZz09PVNhfHxiLnRhZz09PVZhKXJldHVybiBiO2lmKGIuY2hpbGQmJmIudGFnIT09VWEpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfX0sSz17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGluamVjdGlvbjp7aW5qZWN0RXJyb3JVdGlsczpmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYS5pbnZva2VHdWFyZGVkQ2FsbGJhY2s/dyhcIjE5N1wiKTp2b2lkIDA7Y2I9YS5pbnZva2VHdWFyZGVkQ2FsbGJhY2t9fSxpbnZva2VHdWFyZGVkQ2FsbGJhY2s6ZnVuY3Rpb24oYSxcbmIsYyxkLGUsZixnLGgsayl7Y2IuYXBwbHkoSyxhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0suaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihLLmhhc0NhdWdodEVycm9yKCkpe3ZhciBwPUsuY2xlYXJDYXVnaHRFcnJvcigpO0suX2hhc1JldGhyb3dFcnJvcnx8KEsuX2hhc1JldGhyb3dFcnJvcj0hMCxLLl9yZXRocm93RXJyb3I9cCl9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gZGIuYXBwbHkoSyxhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBLLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKEsuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1LLl9jYXVnaHRFcnJvcjtLLl9jYXVnaHRFcnJvcj1udWxsO0suX2hhc0NhdWdodEVycm9yPSExO3JldHVybiBhfXcoXCIxOThcIil9fTtcbmZ1bmN0aW9uIGNiKGEsYixjLGQsZSxmLGcsaCxrKXtLLl9oYXNDYXVnaHRFcnJvcj0hMTtLLl9jYXVnaHRFcnJvcj1udWxsO3ZhciBwPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLHApfWNhdGNoKHgpe0suX2NhdWdodEVycm9yPXgsSy5faGFzQ2F1Z2h0RXJyb3I9ITB9fWZ1bmN0aW9uIGRiKCl7aWYoSy5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1LLl9yZXRocm93RXJyb3I7Sy5fcmV0aHJvd0Vycm9yPW51bGw7Sy5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgZWI9SyxmYjtmdW5jdGlvbiBnYihhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWhiLmdldE5vZGVGcm9tSW5zdGFuY2UoZCk7ZWIuaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG52YXIgaGI9e2lzRW5kaXNoOmZ1bmN0aW9uKGEpe3JldHVyblwidG9wTW91c2VVcFwiPT09YXx8XCJ0b3BUb3VjaEVuZFwiPT09YXx8XCJ0b3BUb3VjaENhbmNlbFwiPT09YX0saXNNb3ZlaXNoOmZ1bmN0aW9uKGEpe3JldHVyblwidG9wTW91c2VNb3ZlXCI9PT1hfHxcInRvcFRvdWNoTW92ZVwiPT09YX0saXNTdGFydGlzaDpmdW5jdGlvbihhKXtyZXR1cm5cInRvcE1vdXNlRG93blwiPT09YXx8XCJ0b3BUb3VjaFN0YXJ0XCI9PT1hfSxleGVjdXRlRGlyZWN0RGlzcGF0Y2g6ZnVuY3Rpb24oYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztBcnJheS5pc0FycmF5KGIpP3coXCIxMDNcIik6dm9pZCAwO2EuY3VycmVudFRhcmdldD1iP2hiLmdldE5vZGVGcm9tSW5zdGFuY2UoYyk6bnVsbDtiPWI/YihhKTpudWxsO2EuY3VycmVudFRhcmdldD1udWxsO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDtyZXR1cm4gYn0sZXhlY3V0ZURpc3BhdGNoZXNJbk9yZGVyOmZ1bmN0aW9uKGEsXG5iKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspZ2IoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZnYihhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGx9LGV4ZWN1dGVEaXNwYXRjaGVzSW5PcmRlclN0b3BBdFRydWU6ZnVuY3Rpb24oYSl7YTp7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnM7dmFyIGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl7aWYoYltkXShhLGNbZF0pKXtiPWNbZF07YnJlYWsgYX19ZWxzZSBpZihiJiZiKGEsYykpe2I9YzticmVhayBhfWI9bnVsbH1hLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPVxubnVsbDtyZXR1cm4gYn0saGFzRGlzcGF0Y2hlczpmdW5jdGlvbihhKXtyZXR1cm4hIWEuX2Rpc3BhdGNoTGlzdGVuZXJzfSxnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlOmZ1bmN0aW9uKGEpe3JldHVybiBmYi5nZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlKGEpfSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe3JldHVybiBmYi5nZXRJbnN0YW5jZUZyb21Ob2RlKGEpfSxnZXROb2RlRnJvbUluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBmYi5nZXROb2RlRnJvbUluc3RhbmNlKGEpfSxpbmplY3Rpb246e2luamVjdENvbXBvbmVudFRyZWU6ZnVuY3Rpb24oYSl7ZmI9YX19fSxpYj1oYixqYj1udWxsLGtiPW51bGwsbGI9bnVsbDtcbmZ1bmN0aW9uIG1iKGEpe2lmKGE9aWIuZ2V0SW5zdGFuY2VGcm9tTm9kZShhKSlpZihcIm51bWJlclwiPT09dHlwZW9mIGEudGFnKXtqYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGpiLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOncoXCIxOTRcIik7dmFyIGI9aWIuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZShhLnN0YXRlTm9kZSk7amIucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLnN0YXRlTm9kZSxhLnR5cGUsYil9ZWxzZVwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dyhcIjE5NVwiKTp2b2lkIDAsYS5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKCl9XG52YXIgbmI9e2luamVjdGlvbjp7aW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudDpmdW5jdGlvbihhKXtqYj1hfX0sZW5xdWV1ZVN0YXRlUmVzdG9yZTpmdW5jdGlvbihhKXtrYj9sYj9sYi5wdXNoKGEpOmxiPVthXTprYj1hfSxyZXN0b3JlU3RhdGVJZk5lZWRlZDpmdW5jdGlvbigpe2lmKGtiKXt2YXIgYT1rYixiPWxiO2xiPWtiPW51bGw7bWIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKW1iKGJbYV0pfX19O2Z1bmN0aW9uIG9iKGEsYixjLGQsZSxmKXtyZXR1cm4gYShiLGMsZCxlLGYpfWZ1bmN0aW9uIHBiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gcWIoYSxiKXtyZXR1cm4gcGIoYSxiKX1cbnZhciByYj0hMSxzYj17YmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSxiKXtpZihyYilyZXR1cm4gb2IocWIsYSxiKTtyYj0hMDt0cnl7cmV0dXJuIG9iKHFiLGEsYil9ZmluYWxseXtyYj0hMSxuYi5yZXN0b3JlU3RhdGVJZk5lZWRlZCgpfX0saW5qZWN0aW9uOntpbmplY3RTdGFja0JhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEpe29iPWF9LGluamVjdEZpYmVyQmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7cGI9YX19fSx0Yj1GLlRFWFRfTk9ERTtmdW5jdGlvbiB1YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gYS5ub2RlVHlwZT09PXRiP2EucGFyZW50Tm9kZTphfXZhciB2Yj1FLkhvc3RSb290LHdiPVtdO1xuZnVuY3Rpb24geGIoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjPWI7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBjLnRhZyl7Zm9yKDtjW1wicmV0dXJuXCJdOyljPWNbXCJyZXR1cm5cIl07Yz1jLnRhZyE9PXZiP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31lbHNle2Zvcig7Yy5faG9zdFBhcmVudDspYz1jLl9ob3N0UGFyZW50O2M9Ry5nZXROb2RlRnJvbUluc3RhbmNlKGMpLnBhcmVudE5vZGV9aWYoIWMpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChiKTtiPUcuZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSx5Yi5faGFuZGxlVG9wTGV2ZWwoYS50b3BMZXZlbFR5cGUsYixhLm5hdGl2ZUV2ZW50LHViKGEubmF0aXZlRXZlbnQpKX1cbnZhciB5Yj17X2VuYWJsZWQ6ITAsX2hhbmRsZVRvcExldmVsOm51bGwsc2V0SGFuZGxlVG9wTGV2ZWw6ZnVuY3Rpb24oYSl7eWIuX2hhbmRsZVRvcExldmVsPWF9LHNldEVuYWJsZWQ6ZnVuY3Rpb24oYSl7eWIuX2VuYWJsZWQ9ISFhfSxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4geWIuX2VuYWJsZWR9LHRyYXBCdWJibGVkRXZlbnQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjP2JhLmxpc3RlbihjLGIseWIuZGlzcGF0Y2hFdmVudC5iaW5kKG51bGwsYSkpOm51bGx9LHRyYXBDYXB0dXJlZEV2ZW50OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYz9iYS5jYXB0dXJlKGMsYix5Yi5kaXNwYXRjaEV2ZW50LmJpbmQobnVsbCxhKSk6bnVsbH0sZGlzcGF0Y2hFdmVudDpmdW5jdGlvbihhLGIpe2lmKHliLl9lbmFibGVkKXt2YXIgYz11YihiKTtjPUcuZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fGJiLmlzRmliZXJNb3VudGVkKGMpfHxcbihjPW51bGwpO2lmKHdiLmxlbmd0aCl7dmFyIGQ9d2IucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7c2IuYmF0Y2hlZFVwZGF0ZXMoeGIsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD53Yi5sZW5ndGgmJndiLnB1c2goYSl9fX19LEw9eWI7ZnVuY3Rpb24gQ2IoYSxiKXtudWxsPT1iP3coXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24gRGIoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIEViPW51bGw7ZnVuY3Rpb24gRmIoYSxiKXthJiYoaWIuZXhlY3V0ZURpc3BhdGNoZXNJbk9yZGVyKGEsYiksYS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpKX1mdW5jdGlvbiBHYihhKXtyZXR1cm4gRmIoYSwhMCl9ZnVuY3Rpb24gSGIoYSl7cmV0dXJuIEZiKGEsITEpfVxuZnVuY3Rpb24gSWIoYSxiLGMpe3N3aXRjaChhKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpyZXR1cm4hKCFjLmRpc2FibGVkfHxcImJ1dHRvblwiIT09YiYmXCJpbnB1dFwiIT09YiYmXCJzZWxlY3RcIiE9PWImJlwidGV4dGFyZWFcIiE9PWIpO2RlZmF1bHQ6cmV0dXJuITF9fVxudmFyIEpiPXtpbmplY3Rpb246e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6c2EuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcixpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6c2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lfSxnZXRMaXN0ZW5lcjpmdW5jdGlvbihhLGIpe2lmKFwibnVtYmVyXCI9PT10eXBlb2YgYS50YWcpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWliLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGUoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2lmKEliKGIsYS50eXBlLGQpKXJldHVybiBudWxsfWVsc2V7ZD1hLl9jdXJyZW50RWxlbWVudDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZHx8IWEuX3Jvb3ROb2RlSUQpcmV0dXJuIG51bGw7YT1kLnByb3BzO2M9YVtiXTtpZihJYihiLGQudHlwZSxhKSlyZXR1cm4gbnVsbH1jJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz93KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7Zm9yKHZhciBlLGY9c2EucGx1Z2lucyxnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aCYmKGg9aC5leHRyYWN0RXZlbnRzKGEsYixjLGQpKSYmKGU9Q2IoZSxoKSl9cmV0dXJuIGV9LGVucXVldWVFdmVudHM6ZnVuY3Rpb24oYSl7YSYmKEViPUNiKEViLGEpKX0scHJvY2Vzc0V2ZW50UXVldWU6ZnVuY3Rpb24oYSl7dmFyIGI9RWI7RWI9bnVsbDthP0RiKGIsR2IpOkRiKGIsSGIpO0ViP3coXCI5NVwiKTp2b2lkIDA7ZWIucmV0aHJvd0NhdWdodEVycm9yKCl9fSxLYjtsLmNhblVzZURPTSYmKEtiPWRvY3VtZW50LmltcGxlbWVudGF0aW9uJiZkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlJiYhMCE9PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJcIixcIlwiKSk7XG5mdW5jdGlvbiBMYihhLGIpe2lmKCFsLmNhblVzZURPTXx8YiYmIShcImFkZEV2ZW50TGlzdGVuZXJcImluIGRvY3VtZW50KSlyZXR1cm4hMTtiPVwib25cIithO3ZhciBjPWIgaW4gZG9jdW1lbnQ7Y3x8KGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjLnNldEF0dHJpYnV0ZShiLFwicmV0dXJuO1wiKSxjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjW2JdKTshYyYmS2ImJlwid2hlZWxcIj09PWEmJihjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJFdmVudHMud2hlZWxcIixcIjMuMFwiKSk7cmV0dXJuIGN9ZnVuY3Rpb24gTWIoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciBOYj17YW5pbWF0aW9uZW5kOk1iKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOk1iKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6TWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6TWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxPYj17fSxQYj17fTtsLmNhblVzZURPTSYmKFBiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIE5iLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIE5iLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIE5iLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIE5iLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBRYihhKXtpZihPYlthXSlyZXR1cm4gT2JbYV07aWYoIU5iW2FdKXJldHVybiBhO3ZhciBiPU5iW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFBiKXJldHVybiBPYlthXT1iW2NdO3JldHVyblwiXCJ9XG52YXIgUmI9e3RvcEFib3J0OlwiYWJvcnRcIix0b3BBbmltYXRpb25FbmQ6UWIoXCJhbmltYXRpb25lbmRcIil8fFwiYW5pbWF0aW9uZW5kXCIsdG9wQW5pbWF0aW9uSXRlcmF0aW9uOlFiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpfHxcImFuaW1hdGlvbml0ZXJhdGlvblwiLHRvcEFuaW1hdGlvblN0YXJ0OlFiKFwiYW5pbWF0aW9uc3RhcnRcIil8fFwiYW5pbWF0aW9uc3RhcnRcIix0b3BCbHVyOlwiYmx1clwiLHRvcENhbmNlbDpcImNhbmNlbFwiLHRvcENhblBsYXk6XCJjYW5wbGF5XCIsdG9wQ2FuUGxheVRocm91Z2g6XCJjYW5wbGF5dGhyb3VnaFwiLHRvcENoYW5nZTpcImNoYW5nZVwiLHRvcENsaWNrOlwiY2xpY2tcIix0b3BDbG9zZTpcImNsb3NlXCIsdG9wQ29tcG9zaXRpb25FbmQ6XCJjb21wb3NpdGlvbmVuZFwiLHRvcENvbXBvc2l0aW9uU3RhcnQ6XCJjb21wb3NpdGlvbnN0YXJ0XCIsdG9wQ29tcG9zaXRpb25VcGRhdGU6XCJjb21wb3NpdGlvbnVwZGF0ZVwiLHRvcENvbnRleHRNZW51OlwiY29udGV4dG1lbnVcIix0b3BDb3B5OlwiY29weVwiLFxudG9wQ3V0OlwiY3V0XCIsdG9wRG91YmxlQ2xpY2s6XCJkYmxjbGlja1wiLHRvcERyYWc6XCJkcmFnXCIsdG9wRHJhZ0VuZDpcImRyYWdlbmRcIix0b3BEcmFnRW50ZXI6XCJkcmFnZW50ZXJcIix0b3BEcmFnRXhpdDpcImRyYWdleGl0XCIsdG9wRHJhZ0xlYXZlOlwiZHJhZ2xlYXZlXCIsdG9wRHJhZ092ZXI6XCJkcmFnb3ZlclwiLHRvcERyYWdTdGFydDpcImRyYWdzdGFydFwiLHRvcERyb3A6XCJkcm9wXCIsdG9wRHVyYXRpb25DaGFuZ2U6XCJkdXJhdGlvbmNoYW5nZVwiLHRvcEVtcHRpZWQ6XCJlbXB0aWVkXCIsdG9wRW5jcnlwdGVkOlwiZW5jcnlwdGVkXCIsdG9wRW5kZWQ6XCJlbmRlZFwiLHRvcEVycm9yOlwiZXJyb3JcIix0b3BGb2N1czpcImZvY3VzXCIsdG9wSW5wdXQ6XCJpbnB1dFwiLHRvcEtleURvd246XCJrZXlkb3duXCIsdG9wS2V5UHJlc3M6XCJrZXlwcmVzc1wiLHRvcEtleVVwOlwia2V5dXBcIix0b3BMb2FkZWREYXRhOlwibG9hZGVkZGF0YVwiLHRvcExvYWQ6XCJsb2FkXCIsdG9wTG9hZGVkTWV0YWRhdGE6XCJsb2FkZWRtZXRhZGF0YVwiLHRvcExvYWRTdGFydDpcImxvYWRzdGFydFwiLFxudG9wTW91c2VEb3duOlwibW91c2Vkb3duXCIsdG9wTW91c2VNb3ZlOlwibW91c2Vtb3ZlXCIsdG9wTW91c2VPdXQ6XCJtb3VzZW91dFwiLHRvcE1vdXNlT3ZlcjpcIm1vdXNlb3ZlclwiLHRvcE1vdXNlVXA6XCJtb3VzZXVwXCIsdG9wUGFzdGU6XCJwYXN0ZVwiLHRvcFBhdXNlOlwicGF1c2VcIix0b3BQbGF5OlwicGxheVwiLHRvcFBsYXlpbmc6XCJwbGF5aW5nXCIsdG9wUHJvZ3Jlc3M6XCJwcm9ncmVzc1wiLHRvcFJhdGVDaGFuZ2U6XCJyYXRlY2hhbmdlXCIsdG9wU2Nyb2xsOlwic2Nyb2xsXCIsdG9wU2Vla2VkOlwic2Vla2VkXCIsdG9wU2Vla2luZzpcInNlZWtpbmdcIix0b3BTZWxlY3Rpb25DaGFuZ2U6XCJzZWxlY3Rpb25jaGFuZ2VcIix0b3BTdGFsbGVkOlwic3RhbGxlZFwiLHRvcFN1c3BlbmQ6XCJzdXNwZW5kXCIsdG9wVGV4dElucHV0OlwidGV4dElucHV0XCIsdG9wVGltZVVwZGF0ZTpcInRpbWV1cGRhdGVcIix0b3BUb2dnbGU6XCJ0b2dnbGVcIix0b3BUb3VjaENhbmNlbDpcInRvdWNoY2FuY2VsXCIsdG9wVG91Y2hFbmQ6XCJ0b3VjaGVuZFwiLHRvcFRvdWNoTW92ZTpcInRvdWNobW92ZVwiLFxudG9wVG91Y2hTdGFydDpcInRvdWNoc3RhcnRcIix0b3BUcmFuc2l0aW9uRW5kOlFiKFwidHJhbnNpdGlvbmVuZFwiKXx8XCJ0cmFuc2l0aW9uZW5kXCIsdG9wVm9sdW1lQ2hhbmdlOlwidm9sdW1lY2hhbmdlXCIsdG9wV2FpdGluZzpcIndhaXRpbmdcIix0b3BXaGVlbDpcIndoZWVsXCJ9LFNiPXt9LFRiPTAsVWI9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO2Z1bmN0aW9uIFZiKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLFViKXx8KGFbVWJdPVRiKyssU2JbYVtVYl1dPXt9KTtyZXR1cm4gU2JbYVtVYl1dfVxudmFyIE09bih7fSx7aGFuZGxlVG9wTGV2ZWw6ZnVuY3Rpb24oYSxiLGMsZCl7YT1KYi5leHRyYWN0RXZlbnRzKGEsYixjLGQpO0piLmVucXVldWVFdmVudHMoYSk7SmIucHJvY2Vzc0V2ZW50UXVldWUoITEpfX0se3NldEVuYWJsZWQ6ZnVuY3Rpb24oYSl7TCYmTC5zZXRFbmFibGVkKGEpfSxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hKCFMfHwhTC5pc0VuYWJsZWQoKSl9LGxpc3RlblRvOmZ1bmN0aW9uKGEsYil7dmFyIGM9VmIoYik7YT1zYS5yZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzW2FdO2Zvcih2YXIgZD0wO2Q8YS5sZW5ndGg7ZCsrKXt2YXIgZT1hW2RdO2MuaGFzT3duUHJvcGVydHkoZSkmJmNbZV18fChcInRvcFdoZWVsXCI9PT1lP0xiKFwid2hlZWxcIik/TC50cmFwQnViYmxlZEV2ZW50KFwidG9wV2hlZWxcIixcIndoZWVsXCIsYik6TGIoXCJtb3VzZXdoZWVsXCIpP0wudHJhcEJ1YmJsZWRFdmVudChcInRvcFdoZWVsXCIsXCJtb3VzZXdoZWVsXCIsYik6TC50cmFwQnViYmxlZEV2ZW50KFwidG9wV2hlZWxcIixcblwiRE9NTW91c2VTY3JvbGxcIixiKTpcInRvcFNjcm9sbFwiPT09ZT9MLnRyYXBDYXB0dXJlZEV2ZW50KFwidG9wU2Nyb2xsXCIsXCJzY3JvbGxcIixiKTpcInRvcEZvY3VzXCI9PT1lfHxcInRvcEJsdXJcIj09PWU/KEwudHJhcENhcHR1cmVkRXZlbnQoXCJ0b3BGb2N1c1wiLFwiZm9jdXNcIixiKSxMLnRyYXBDYXB0dXJlZEV2ZW50KFwidG9wQmx1clwiLFwiYmx1clwiLGIpLGMudG9wQmx1cj0hMCxjLnRvcEZvY3VzPSEwKTpcInRvcENhbmNlbFwiPT09ZT8oTGIoXCJjYW5jZWxcIiwhMCkmJkwudHJhcENhcHR1cmVkRXZlbnQoXCJ0b3BDYW5jZWxcIixcImNhbmNlbFwiLGIpLGMudG9wQ2FuY2VsPSEwKTpcInRvcENsb3NlXCI9PT1lPyhMYihcImNsb3NlXCIsITApJiZMLnRyYXBDYXB0dXJlZEV2ZW50KFwidG9wQ2xvc2VcIixcImNsb3NlXCIsYiksYy50b3BDbG9zZT0hMCk6UmIuaGFzT3duUHJvcGVydHkoZSkmJkwudHJhcEJ1YmJsZWRFdmVudChlLFJiW2VdLGIpLGNbZV09ITApfX0saXNMaXN0ZW5pbmdUb0FsbERlcGVuZGVuY2llczpmdW5jdGlvbihhLFxuYil7Yj1WYihiKTthPXNhLnJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXNbYV07Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY107aWYoIWIuaGFzT3duUHJvcGVydHkoZCl8fCFiW2RdKXJldHVybiExfXJldHVybiEwfSx0cmFwQnViYmxlZEV2ZW50OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gTC50cmFwQnViYmxlZEV2ZW50KGEsYixjKX0sdHJhcENhcHR1cmVkRXZlbnQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBMLnRyYXBDYXB0dXJlZEV2ZW50KGEsYixjKX19KSxXYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLFxuZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxYYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07XG5PYmplY3Qua2V5cyhXYikuZm9yRWFjaChmdW5jdGlvbihhKXtYYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO1diW2JdPVdiW2FdfSl9KTtcbnZhciBZYj17aXNVbml0bGVzc051bWJlcjpXYixzaG9ydGhhbmRQcm9wZXJ0eUV4cGFuc2lvbnM6e2JhY2tncm91bmQ6e2JhY2tncm91bmRBdHRhY2htZW50OiEwLGJhY2tncm91bmRDb2xvcjohMCxiYWNrZ3JvdW5kSW1hZ2U6ITAsYmFja2dyb3VuZFBvc2l0aW9uWDohMCxiYWNrZ3JvdW5kUG9zaXRpb25ZOiEwLGJhY2tncm91bmRSZXBlYXQ6ITB9LGJhY2tncm91bmRQb3NpdGlvbjp7YmFja2dyb3VuZFBvc2l0aW9uWDohMCxiYWNrZ3JvdW5kUG9zaXRpb25ZOiEwfSxib3JkZXI6e2JvcmRlcldpZHRoOiEwLGJvcmRlclN0eWxlOiEwLGJvcmRlckNvbG9yOiEwfSxib3JkZXJCb3R0b206e2JvcmRlckJvdHRvbVdpZHRoOiEwLGJvcmRlckJvdHRvbVN0eWxlOiEwLGJvcmRlckJvdHRvbUNvbG9yOiEwfSxib3JkZXJMZWZ0Ontib3JkZXJMZWZ0V2lkdGg6ITAsYm9yZGVyTGVmdFN0eWxlOiEwLGJvcmRlckxlZnRDb2xvcjohMH0sYm9yZGVyUmlnaHQ6e2JvcmRlclJpZ2h0V2lkdGg6ITAsYm9yZGVyUmlnaHRTdHlsZTohMCxcbmJvcmRlclJpZ2h0Q29sb3I6ITB9LGJvcmRlclRvcDp7Ym9yZGVyVG9wV2lkdGg6ITAsYm9yZGVyVG9wU3R5bGU6ITAsYm9yZGVyVG9wQ29sb3I6ITB9LGZvbnQ6e2ZvbnRTdHlsZTohMCxmb250VmFyaWFudDohMCxmb250V2VpZ2h0OiEwLGZvbnRTaXplOiEwLGxpbmVIZWlnaHQ6ITAsZm9udEZhbWlseTohMH0sb3V0bGluZTp7b3V0bGluZVdpZHRoOiEwLG91dGxpbmVTdHlsZTohMCxvdXRsaW5lQ29sb3I6ITB9fX0sWmI9WWIuaXNVbml0bGVzc051bWJlciwkYj0hMTtpZihsLmNhblVzZURPTSl7dmFyIGFjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGU7dHJ5e2FjLmZvbnQ9XCJcIn1jYXRjaChhKXskYj0hMH19XG52YXIgYmM9e2NyZWF0ZURhbmdlcm91c1N0cmluZ0ZvclN0eWxlczpmdW5jdGlvbigpe30sc2V0VmFsdWVGb3JTdHlsZXM6ZnVuY3Rpb24oYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpO3ZhciBlPWM7dmFyIGY9YltjXTtlPW51bGw9PWZ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGZ8fFwiXCI9PT1mP1wiXCI6ZHx8XCJudW1iZXJcIiE9PXR5cGVvZiBmfHwwPT09Znx8WmIuaGFzT3duUHJvcGVydHkoZSkmJlpiW2VdPyhcIlwiK2YpLnRyaW0oKTpmK1wicHhcIjtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2lmKGQpYS5zZXRQcm9wZXJ0eShjLGUpO2Vsc2UgaWYoZSlhW2NdPWU7ZWxzZSBpZihkPSRiJiZZYi5zaG9ydGhhbmRQcm9wZXJ0eUV4cGFuc2lvbnNbY10pZm9yKHZhciBnIGluIGQpYVtnXT1cIlwiO2Vsc2UgYVtjXT1cIlwifX19LGNjPW5ldyBSZWdFeHAoXCJeW1wiK0EuQVRUUklCVVRFX05BTUVfU1RBUlRfQ0hBUitcblwiXVtcIitBLkFUVFJJQlVURV9OQU1FX0NIQVIrXCJdKiRcIiksZGM9e30sZWM9e307ZnVuY3Rpb24gZmMoYSl7aWYoZWMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoZGMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYoY2MudGVzdChhKSlyZXR1cm4gZWNbYV09ITA7ZGNbYV09ITA7cmV0dXJuITF9XG52YXIgZ2M9e3NldEF0dHJpYnV0ZUZvcklEOmZ1bmN0aW9uKGEsYil7YS5zZXRBdHRyaWJ1dGUoQS5JRF9BVFRSSUJVVEVfTkFNRSxiKX0sc2V0QXR0cmlidXRlRm9yUm9vdDpmdW5jdGlvbihhKXthLnNldEF0dHJpYnV0ZShBLlJPT1RfQVRUUklCVVRFX05BTUUsXCJcIil9LGdldFZhbHVlRm9yUHJvcGVydHk6ZnVuY3Rpb24oKXt9LGdldFZhbHVlRm9yQXR0cmlidXRlOmZ1bmN0aW9uKCl7fSxzZXRWYWx1ZUZvclByb3BlcnR5OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1BLmdldFByb3BlcnR5SW5mbyhiKTtpZihkJiZBLnNob3VsZFNldEF0dHJpYnV0ZShiLGMpKXt2YXIgZT1kLm11dGF0aW9uTWV0aG9kO2U/ZShhLGMpOm51bGw9PWN8fGQuaGFzQm9vbGVhblZhbHVlJiYhY3x8ZC5oYXNOdW1lcmljVmFsdWUmJmlzTmFOKGMpfHxkLmhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlJiYxPmN8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITE9PT1jP2djLmRlbGV0ZVZhbHVlRm9yUHJvcGVydHkoYSxcbmIpOmQubXVzdFVzZVByb3BlcnR5P2FbZC5wcm9wZXJ0eU5hbWVdPWM6KGI9ZC5hdHRyaWJ1dGVOYW1lLChlPWQuYXR0cmlidXRlTmFtZXNwYWNlKT9hLnNldEF0dHJpYnV0ZU5TKGUsYixcIlwiK2MpOmQuaGFzQm9vbGVhblZhbHVlfHxkLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWUmJiEwPT09Yz9hLnNldEF0dHJpYnV0ZShiLFwiXCIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9ZWxzZSBnYy5zZXRWYWx1ZUZvckF0dHJpYnV0ZShhLGIsQS5zaG91bGRTZXRBdHRyaWJ1dGUoYixjKT9jOm51bGwpfSxzZXRWYWx1ZUZvckF0dHJpYnV0ZTpmdW5jdGlvbihhLGIsYyl7ZmMoYikmJihudWxsPT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9LGRlbGV0ZVZhbHVlRm9yQXR0cmlidXRlOmZ1bmN0aW9uKGEsYil7YS5yZW1vdmVBdHRyaWJ1dGUoYil9LGRlbGV0ZVZhbHVlRm9yUHJvcGVydHk6ZnVuY3Rpb24oYSxiKXt2YXIgYz1BLmdldFByb3BlcnR5SW5mbyhiKTtcbmM/KGI9Yy5tdXRhdGlvbk1ldGhvZCk/YihhLHZvaWQgMCk6Yy5tdXN0VXNlUHJvcGVydHk/YVtjLnByb3BlcnR5TmFtZV09Yy5oYXNCb29sZWFuVmFsdWU/ITE6XCJcIjphLnJlbW92ZUF0dHJpYnV0ZShjLmF0dHJpYnV0ZU5hbWUpOmEucmVtb3ZlQXR0cmlidXRlKGIpfX0saGM9Z2MsaWM9UWEuUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZTtmdW5jdGlvbiBqYygpe3JldHVybiBudWxsfVxudmFyIGtjPXtjdXJyZW50Om51bGwscGhhc2U6bnVsbCxyZXNldEN1cnJlbnRGaWJlcjpmdW5jdGlvbigpe2ljLmdldEN1cnJlbnRTdGFjaz1udWxsO2tjLmN1cnJlbnQ9bnVsbDtrYy5waGFzZT1udWxsfSxzZXRDdXJyZW50RmliZXI6ZnVuY3Rpb24oYSxiKXtpYy5nZXRDdXJyZW50U3RhY2s9amM7a2MuY3VycmVudD1hO2tjLnBoYXNlPWJ9LGdldEN1cnJlbnRGaWJlck93bmVyTmFtZTpmdW5jdGlvbigpe3JldHVybiBudWxsfSxnZXRDdXJyZW50RmliZXJTdGFja0FkZGVuZHVtOmpjfSxsYz1rYyxtYz17Z2V0SG9zdFByb3BzOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi52YWx1ZSxkPWIuY2hlY2tlZDtyZXR1cm4gbih7dHlwZTp2b2lkIDAsc3RlcDp2b2lkIDAsbWluOnZvaWQgMCxtYXg6dm9pZCAwfSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSxjaGVja2VkOm51bGwhPWQ/XG5kOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfSxpbml0V3JhcHBlclN0YXRlOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5kZWZhdWx0VmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpudWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQsaW5pdGlhbFZhbHVlOm51bGwhPWIudmFsdWU/Yi52YWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fSx1cGRhdGVXcmFwcGVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5jaGVja2VkO251bGwhPWMmJmhjLnNldFZhbHVlRm9yUHJvcGVydHkoYSxcImNoZWNrZWRcIixjfHwhMSk7Yz1iLnZhbHVlO2lmKG51bGwhPWMpaWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlKWEudmFsdWU9XCIwXCI7ZWxzZSBpZihcIm51bWJlclwiPT09Yi50eXBlKXtpZihiPXBhcnNlRmxvYXQoYS52YWx1ZSl8fDAsYyE9Ynx8Yz09YiYmYS52YWx1ZSE9XG5jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIG51bGw9PWIudmFsdWUmJm51bGwhPWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2IuZGVmYXVsdFZhbHVlKSxudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9LHBvc3RNb3VudFdyYXBwZXI6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50eXBlKXtjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7Y2FzZSBcImNvbG9yXCI6Y2FzZSBcImRhdGVcIjpjYXNlIFwiZGF0ZXRpbWVcIjpjYXNlIFwiZGF0ZXRpbWUtbG9jYWxcIjpjYXNlIFwibW9udGhcIjpjYXNlIFwidGltZVwiOmNhc2UgXCJ3ZWVrXCI6YS52YWx1ZT1cIlwiO2EudmFsdWU9YS5kZWZhdWx0VmFsdWU7YnJlYWs7ZGVmYXVsdDphLnZhbHVlPWEudmFsdWV9Yj1hLm5hbWU7XCJcIiE9PVxuYiYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7XCJcIiE9PWImJihhLm5hbWU9Yil9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiKXttYy51cGRhdGVXcmFwcGVyKGEsYik7dmFyIGM9Yi5uYW1lO2lmKFwicmFkaW9cIj09PWIudHlwZSYmbnVsbCE9Yyl7Zm9yKGI9YTtiLnBhcmVudE5vZGU7KWI9Yi5wYXJlbnROb2RlO2M9Yi5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZVxceDNkXCIrSlNPTi5zdHJpbmdpZnkoXCJcIitjKSsnXVt0eXBlXFx4M2RcInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1HLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGUoZCk7ZT92b2lkIDA6dyhcIjkwXCIpO21jLnVwZGF0ZVdyYXBwZXIoZCxlKX19fX19LHFjPW1jO1xuZnVuY3Rpb24gcmMoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbD09YXx8XCJzdHJpbmdcIiE9PXR5cGVvZiBhJiZcIm51bWJlclwiIT09dHlwZW9mIGF8fChiKz1hKX0pO3JldHVybiBifXZhciBzYz17dmFsaWRhdGVQcm9wczpmdW5jdGlvbigpe30scG9zdE1vdW50V3JhcHBlcjpmdW5jdGlvbihhLGIpe251bGwhPWIudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixiLnZhbHVlKX0sZ2V0SG9zdFByb3BzOmZ1bmN0aW9uKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9cmMoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfX07XG5mdW5jdGlvbiB0YyhhLGIsYyl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyliW1wiJFwiK2NbZF1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZD1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1kJiYoYVtjXS5zZWxlY3RlZD1kKX1lbHNle2M9XCJcIitjO2I9bnVsbDtmb3IoZD0wO2Q8YS5sZW5ndGg7ZCsrKXtpZihhW2RdLnZhbHVlPT09Yyl7YVtkXS5zZWxlY3RlZD0hMDtyZXR1cm59bnVsbCE9PWJ8fGFbZF0uZGlzYWJsZWR8fChiPWFbZF0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxudmFyIHVjPXtnZXRIb3N0UHJvcHM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDB9KX0saW5pdFdyYXBwZXJTdGF0ZTpmdW5jdGlvbihhLGIpe3ZhciBjPWIudmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6bnVsbCE9Yz9jOmIuZGVmYXVsdFZhbHVlLHdhc011bHRpcGxlOiEhYi5tdWx0aXBsZX19LHBvc3RNb3VudFdyYXBwZXI6ZnVuY3Rpb24oYSxiKXthLm11bHRpcGxlPSEhYi5tdWx0aXBsZTt2YXIgYz1iLnZhbHVlO251bGwhPWM/dGMoYSwhIWIubXVsdGlwbGUsYyk6bnVsbCE9Yi5kZWZhdWx0VmFsdWUmJnRjKGEsISFiLm11bHRpcGxlLGIuZGVmYXVsdFZhbHVlKX0scG9zdFVwZGF0ZVdyYXBwZXI6ZnVuY3Rpb24oYSxiKXthLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlPXZvaWQgMDt2YXIgYz1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU7YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhYi5tdWx0aXBsZTt2YXIgZD1iLnZhbHVlO1xubnVsbCE9ZD90YyhhLCEhYi5tdWx0aXBsZSxkKTpjIT09ISFiLm11bHRpcGxlJiYobnVsbCE9Yi5kZWZhdWx0VmFsdWU/dGMoYSwhIWIubXVsdGlwbGUsYi5kZWZhdWx0VmFsdWUpOnRjKGEsISFiLm11bHRpcGxlLGIubXVsdGlwbGU/W106XCJcIikpfSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiZ0YyhhLCEhYi5tdWx0aXBsZSxjKX19LHZjPXtnZXRIb3N0UHJvcHM6ZnVuY3Rpb24oYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3coXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9LGluaXRXcmFwcGVyU3RhdGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLnZhbHVlLGQ9YztudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/XG53KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6dyhcIjkzXCIpLGI9YlswXSksYz1cIlwiK2IpLG51bGw9PWMmJihjPVwiXCIpLGQ9Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6XCJcIitkfX0sdXBkYXRlV3JhcHBlcjpmdW5jdGlvbihhLGIpe3ZhciBjPWIudmFsdWU7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWIuZGVmYXVsdFZhbHVlKX0scG9zdE1vdW50V3JhcHBlcjpmdW5jdGlvbihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX0scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIpe3ZjLnVwZGF0ZVdyYXBwZXIoYSxiKX19LHdjPXZjLHhjPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxcbmJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtmdW5jdGlvbiB5YyhhLGIpe2ImJih4Y1thXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dyhcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj93KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOncoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3coXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiB6YyhhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gQWMoYSl7dmFyIGI9emMoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYy5nZXQuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2Muc2V0LmNhbGwodGhpcyxhKX19KSx7Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1udWxsO2RlbGV0ZSBhW2JdfX19XG52YXIgQmM9e19nZXRUcmFja2VyRnJvbU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuX3ZhbHVlVHJhY2tlcn0sdHJhY2s6ZnVuY3Rpb24oYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPUFjKGEpKX0sdXBkYXRlVmFsdWVJZkNoYW5nZWQ6ZnVuY3Rpb24oYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXpjKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9LHN0b3BUcmFja2luZzpmdW5jdGlvbihhKXsoYT1hLl92YWx1ZVRyYWNrZXIpJiZhLnN0b3BUcmFja2luZygpfX07XG5mdW5jdGlvbiBDYyhhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG52YXIgRGM9a2EuTmFtZXNwYWNlcyxFYyxGYz1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1EYy5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZSBmb3IoRWM9RWN8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksRWMuaW5uZXJIVE1MPVwiXFx4M2NzdmdcXHgzZVwiK2IrXCJcXHgzYy9zdmdcXHgzZVwiLGI9RWMuZmlyc3RDaGlsZDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX0pLEdjPS9bXCInJjw+XS8sSGM9Ri5URVhUX05PREU7XG5mdW5jdGlvbiBJYyhhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJmMubm9kZVR5cGU9PT1IYyl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbmwuY2FuVXNlRE9NJiYoXCJ0ZXh0Q29udGVudFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fHwoSWM9ZnVuY3Rpb24oYSxiKXtpZihhLm5vZGVUeXBlPT09SGMpYS5ub2RlVmFsdWU9YjtlbHNle2lmKFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYiliPVwiXCIrYjtlbHNle2I9XCJcIitiO3ZhciBjPUdjLmV4ZWMoYik7aWYoYyl7dmFyIGQ9XCJcIixlLGY9MDtmb3IoZT1jLmluZGV4O2U8Yi5sZW5ndGg7ZSsrKXtzd2l0Y2goYi5jaGFyQ29kZUF0KGUpKXtjYXNlIDM0OmM9XCJcXHgyNnF1b3Q7XCI7YnJlYWs7Y2FzZSAzODpjPVwiXFx4MjZhbXA7XCI7YnJlYWs7Y2FzZSAzOTpjPVwiXFx4MjYjeDI3O1wiO2JyZWFrO2Nhc2UgNjA6Yz1cIlxceDI2bHQ7XCI7YnJlYWs7Y2FzZSA2MjpjPVwiXFx4MjZndDtcIjticmVhaztkZWZhdWx0OmNvbnRpbnVlfWYhPT1lJiYoZCs9Yi5zdWJzdHJpbmcoZixlKSk7Zj1lKzE7ZCs9Y31iPWYhPT1lP2QrYi5zdWJzdHJpbmcoZixlKTpkfX1GYyhhLGIpfX0pKTtcbnZhciBKYz1JYyxLYz1sYy5nZXRDdXJyZW50RmliZXJPd25lck5hbWUsTGM9Ri5ET0NVTUVOVF9OT0RFLE1jPUYuRE9DVU1FTlRfRlJBR01FTlRfTk9ERSxOYz1NLmxpc3RlblRvLE9jPXNhLnJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzLFBjPWthLk5hbWVzcGFjZXMuaHRtbCxRYz1rYS5nZXRJbnRyaW5zaWNOYW1lc3BhY2U7ZnVuY3Rpb24gUmMoYSxiKXtOYyhiLGEubm9kZVR5cGU9PT1MY3x8YS5ub2RlVHlwZT09PU1jP2E6YS5vd25lckRvY3VtZW50KX1cbnZhciBTYz17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcENhblBsYXk6XCJjYW5wbGF5XCIsdG9wQ2FuUGxheVRocm91Z2g6XCJjYW5wbGF5dGhyb3VnaFwiLHRvcER1cmF0aW9uQ2hhbmdlOlwiZHVyYXRpb25jaGFuZ2VcIix0b3BFbXB0aWVkOlwiZW1wdGllZFwiLHRvcEVuY3J5cHRlZDpcImVuY3J5cHRlZFwiLHRvcEVuZGVkOlwiZW5kZWRcIix0b3BFcnJvcjpcImVycm9yXCIsdG9wTG9hZGVkRGF0YTpcImxvYWRlZGRhdGFcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLFxudG9wV2FpdGluZzpcIndhaXRpbmdcIn0sTj17Y3JlYXRlRWxlbWVudDpmdW5jdGlvbihhLGIsYyxkKXtjPWMubm9kZVR5cGU9PT1MYz9jOmMub3duZXJEb2N1bWVudDtkPT09UGMmJihkPVFjKGEpKTtkPT09UGM/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiXFx4M2NzY3JpcHRcXHgzZVxceDNjL3NjcmlwdFxceDNlXCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX0sY3JlYXRlVGV4dE5vZGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYi5ub2RlVHlwZT09PUxjP2I6Yi5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShhKX0sc2V0SW5pdGlhbFByb3BlcnRpZXM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Q2MoYixjKTtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BMb2FkXCIsXG5cImxvYWRcIixhKTt2YXIgZj1jO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihmIGluIFNjKVNjLmhhc093blByb3BlcnR5KGYpJiZNLnRyYXBCdWJibGVkRXZlbnQoZixTY1tmXSxhKTtmPWM7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7TS50cmFwQnViYmxlZEV2ZW50KFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZm9ybVwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO00udHJhcEJ1YmJsZWRFdmVudChcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wVG9nZ2xlXCIsXCJ0b2dnbGVcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6cWMuaW5pdFdyYXBwZXJTdGF0ZShhLFxuYyk7Zj1xYy5nZXRIb3N0UHJvcHMoYSxjKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7UmMoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpzYy52YWxpZGF0ZVByb3BzKGEsYyk7Zj1zYy5nZXRIb3N0UHJvcHMoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6dWMuaW5pdFdyYXBwZXJTdGF0ZShhLGMpO2Y9dWMuZ2V0SG9zdFByb3BzKGEsYyk7TS50cmFwQnViYmxlZEV2ZW50KFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO1JjKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp3Yy5pbml0V3JhcHBlclN0YXRlKGEsYyk7Zj13Yy5nZXRIb3N0UHJvcHMoYSxjKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7UmMoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6Zj1jfXljKGIsZixLYyk7dmFyIGc9ZixoO2ZvcihoIGluIGcpaWYoZy5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIGs9Z1toXTtcInN0eWxlXCI9PT1cbmg/YmMuc2V0VmFsdWVGb3JTdHlsZXMoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJkZjKGEsaykpOlwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiBrP0pjKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZKYyhhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJihPYy5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT1rJiZSYyhkLGgpOmU/aGMuc2V0VmFsdWVGb3JBdHRyaWJ1dGUoYSxoLGspOm51bGwhPWsmJmhjLnNldFZhbHVlRm9yUHJvcGVydHkoYSxoLGspKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMudHJhY2soYSk7cWMucG9zdE1vdW50V3JhcHBlcihhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkJjLnRyYWNrKGEpO3djLnBvc3RNb3VudFdyYXBwZXIoYSxjKTticmVhaztjYXNlIFwib3B0aW9uXCI6c2MucG9zdE1vdW50V3JhcHBlcihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp1Yy5wb3N0TW91bnRXcmFwcGVyKGEsXG5jKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihhLm9uY2xpY2s9Y2EpfX0sZGlmZlByb3BlcnRpZXM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1udWxsO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjPXFjLmdldEhvc3RQcm9wcyhhLGMpO2Q9cWMuZ2V0SG9zdFByb3BzKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Yz1zYy5nZXRIb3N0UHJvcHMoYSxjKTtkPXNjLmdldEhvc3RQcm9wcyhhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmM9dWMuZ2V0SG9zdFByb3BzKGEsYyk7ZD11Yy5nZXRIb3N0UHJvcHMoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmM9d2MuZ2V0SG9zdFByb3BzKGEsYyk7ZD13Yy5nZXRIb3N0UHJvcHMoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGMub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1jYSl9eWMoYixkLEtjKTtcbnZhciBnLGg7YT1udWxsO2ZvcihnIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoZykmJmMuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWNbZ10paWYoXCJzdHlsZVwiPT09Zylmb3IoaCBpbiBiPWNbZ10sYiliLmhhc093blByb3BlcnR5KGgpJiYoYXx8KGE9e30pLGFbaF09XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWcmJlwiY2hpbGRyZW5cIiE9PWcmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1nJiYoT2MuaGFzT3duUHJvcGVydHkoZyk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGcsbnVsbCkpO2ZvcihnIGluIGQpe3ZhciBrPWRbZ107Yj1udWxsIT1jP2NbZ106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoZykmJmshPT1iJiYobnVsbCE9a3x8bnVsbCE9YikpaWYoXCJzdHlsZVwiPT09ZylpZihiKXtmb3IoaCBpbiBiKSFiLmhhc093blByb3BlcnR5KGgpfHxrJiZrLmhhc093blByb3BlcnR5KGgpfHwoYXx8KGE9e30pLGFbaF09XCJcIik7Zm9yKGggaW4gaylrLmhhc093blByb3BlcnR5KGgpJiZcbmJbaF0hPT1rW2hdJiYoYXx8KGE9e30pLGFbaF09a1toXSl9ZWxzZSBhfHwoZnx8KGY9W10pLGYucHVzaChnLGEpKSxhPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/KGs9az9rLl9faHRtbDp2b2lkIDAsYj1iP2IuX19odG1sOnZvaWQgMCxudWxsIT1rJiZiIT09ayYmKGY9Znx8W10pLnB1c2goZyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1nP2I9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2goZyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1nJiYoT2MuaGFzT3duUHJvcGVydHkoZyk/KG51bGwhPWsmJlJjKGUsZyksZnx8Yj09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2goZyxrKSl9YSYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGEpO3JldHVybiBmfSx1cGRhdGVQcm9wZXJ0aWVzOmZ1bmN0aW9uKGEsYixjLGQsZSl7Q2MoYyxkKTtkPUNjKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz1cbjIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9iYy5zZXRWYWx1ZUZvclN0eWxlcyhhLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/RmMoYSxoKTpcImNoaWxkcmVuXCI9PT1nP0pjKGEsaCk6ZD9udWxsIT1oP2hjLnNldFZhbHVlRm9yQXR0cmlidXRlKGEsZyxoKTpoYy5kZWxldGVWYWx1ZUZvckF0dHJpYnV0ZShhLGcpOm51bGwhPWg/aGMuc2V0VmFsdWVGb3JQcm9wZXJ0eShhLGcsaCk6aGMuZGVsZXRlVmFsdWVGb3JQcm9wZXJ0eShhLGcpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpxYy51cGRhdGVXcmFwcGVyKGEsZSk7QmMudXBkYXRlVmFsdWVJZkNoYW5nZWQoYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6d2MudXBkYXRlV3JhcHBlcihhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp1Yy5wb3N0VXBkYXRlV3JhcHBlcihhLGUpfX0sZGlmZkh5ZHJhdGVkUHJvcGVydGllczpmdW5jdGlvbihhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcExvYWRcIixcblwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcih2YXIgZiBpbiBTYylTYy5oYXNPd25Qcm9wZXJ0eShmKSYmTS50cmFwQnViYmxlZEV2ZW50KGYsU2NbZl0sYSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOk0udHJhcEJ1YmJsZWRFdmVudChcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BSZXNldFwiLFwicmVzZXRcIixhKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BTdWJtaXRcIixcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6TS50cmFwQnViYmxlZEV2ZW50KFwidG9wVG9nZ2xlXCIsXCJ0b2dnbGVcIixhKTticmVhaztjYXNlIFwiaW5wdXRcIjpxYy5pbml0V3JhcHBlclN0YXRlKGEsYyk7TS50cmFwQnViYmxlZEV2ZW50KFwidG9wSW52YWxpZFwiLFxuXCJpbnZhbGlkXCIsYSk7UmMoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpzYy52YWxpZGF0ZVByb3BzKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnVjLmluaXRXcmFwcGVyU3RhdGUoYSxjKTtNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7UmMoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOndjLmluaXRXcmFwcGVyU3RhdGUoYSxjKSxNLnRyYXBCdWJibGVkRXZlbnQoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSksUmMoZSxcIm9uQ2hhbmdlXCIpfXljKGIsYyxLYyk7ZD1udWxsO2Zvcih2YXIgZyBpbiBjKWMuaGFzT3duUHJvcGVydHkoZykmJihmPWNbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGY/YS50ZXh0Q29udGVudCE9PWYmJihkPVtcImNoaWxkcmVuXCIsZl0pOlwibnVtYmVyXCI9PT10eXBlb2YgZiYmYS50ZXh0Q29udGVudCE9PVwiXCIrZiYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ZdKTpPYy5oYXNPd25Qcm9wZXJ0eShnKSYmXG5udWxsIT1mJiZSYyhlLGcpKTtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMudHJhY2soYSk7cWMucG9zdE1vdW50V3JhcHBlcihhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkJjLnRyYWNrKGEpO3djLnBvc3RNb3VudFdyYXBwZXIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGMub25DbGljayYmKGEub25jbGljaz1jYSl9cmV0dXJuIGR9LGRpZmZIeWRyYXRlZFRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5ub2RlVmFsdWUhPT1ifSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dDpmdW5jdGlvbigpe30scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLFxuYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6cWMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOndjLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6dWMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLGMpfX19LFRjPXZvaWQgMDtcbmlmKGwuY2FuVXNlRE9NKWlmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiByZXF1ZXN0SWRsZUNhbGxiYWNrKXt2YXIgVWM9bnVsbCxWYz1udWxsLFdjPSExLFhjPSExLFljPTAsWmM9MzMsJGM9MzMsYWQ9e3RpbWVSZW1haW5pbmc6XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdz9mdW5jdGlvbigpe3JldHVybiBZYy1wZXJmb3JtYW5jZS5ub3coKX06ZnVuY3Rpb24oKXtyZXR1cm4gWWMtRGF0ZS5ub3coKX19LGJkPVwiX19yZWFjdElkbGVDYWxsYmFjayRcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbihhKXthLnNvdXJjZT09PXdpbmRvdyYmYS5kYXRhPT09YmQmJihXYz0hMSxhPVZjLFZjPW51bGwsbnVsbCE9PWEmJmEoYWQpKX0sITEpO3ZhciBjZD1mdW5jdGlvbihhKXtYYz0hMTt2YXIgYj1hLVljKyRjO2I8JGMmJlpjPCRjPyg4PlxuYiYmKGI9OCksJGM9YjxaYz9aYzpiKTpaYz1iO1ljPWErJGM7V2N8fChXYz0hMCx3aW5kb3cucG9zdE1lc3NhZ2UoYmQsXCIqXCIpKTtiPVVjO1VjPW51bGw7bnVsbCE9PWImJmIoYSl9O1RjPWZ1bmN0aW9uKGEpe1ZjPWE7WGN8fChYYz0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoY2QpKTtyZXR1cm4gMH19ZWxzZSBUYz1yZXF1ZXN0SWRsZUNhbGxiYWNrO2Vsc2UgVGM9ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9fSl9KTtyZXR1cm4gMH07XG52YXIgZGQ9e3JJQzpUY30sZWQ9e2VuYWJsZUFzeW5jU3VidHJlZUFQSTohMH0sUT17Tm9Xb3JrOjAsU3luY2hyb25vdXNQcmlvcml0eToxLFRhc2tQcmlvcml0eToyLEhpZ2hQcmlvcml0eTozLExvd1ByaW9yaXR5OjQsT2Zmc2NyZWVuUHJpb3JpdHk6NX0sZmQ9Si5DYWxsYmFjayxnZD1RLk5vV29yayxoZD1RLlN5bmNocm9ub3VzUHJpb3JpdHksaWQ9US5UYXNrUHJpb3JpdHksamQ9RS5DbGFzc0NvbXBvbmVudCxrZD1FLkhvc3RSb290LG1kPXZvaWQgMCxuZD12b2lkIDA7ZnVuY3Rpb24gb2QoYSxiKXtyZXR1cm4gYSE9PWlkJiZhIT09aGR8fGIhPT1pZCYmYiE9PWhkP2E9PT1nZCYmYiE9PWdkPy0yNTU6YSE9PWdkJiZiPT09Z2Q/MjU1OmEtYjowfWZ1bmN0aW9uIHBkKCl7cmV0dXJue2ZpcnN0Om51bGwsbGFzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExLGNhbGxiYWNrTGlzdDpudWxsfX1cbmZ1bmN0aW9uIHFkKGEsYixjLGQpe251bGwhPT1jP2MubmV4dD1iOihiLm5leHQ9YS5maXJzdCxhLmZpcnN0PWIpO251bGwhPT1kP2IubmV4dD1kOmEubGFzdD1ifWZ1bmN0aW9uIHJkKGEsYil7Yj1iLnByaW9yaXR5TGV2ZWw7dmFyIGM9bnVsbDtpZihudWxsIT09YS5sYXN0JiYwPj1vZChhLmxhc3QucHJpb3JpdHlMZXZlbCxiKSljPWEubGFzdDtlbHNlIGZvcihhPWEuZmlyc3Q7bnVsbCE9PWEmJjA+PW9kKGEucHJpb3JpdHlMZXZlbCxiKTspYz1hLGE9YS5uZXh0O3JldHVybiBjfVxuZnVuY3Rpb24gc2QoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEudXBkYXRlUXVldWU7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9cGQoKSk7bnVsbCE9PWM/KGE9Yy51cGRhdGVRdWV1ZSxudWxsPT09YSYmKGE9Yy51cGRhdGVRdWV1ZT1wZCgpKSk6YT1udWxsO21kPWQ7bmQ9YSE9PWQ/YTpudWxsO3ZhciBlPW1kO2M9bmQ7dmFyIGY9cmQoZSxiKSxnPW51bGwhPT1mP2YubmV4dDplLmZpcnN0O2lmKG51bGw9PT1jKXJldHVybiBxZChlLGIsZixnKSxudWxsO2Q9cmQoYyxiKTthPW51bGwhPT1kP2QubmV4dDpjLmZpcnN0O3FkKGUsYixmLGcpO2lmKGc9PT1hJiZudWxsIT09Z3x8Zj09PWQmJm51bGwhPT1mKXJldHVybiBudWxsPT09ZCYmKGMuZmlyc3Q9YiksbnVsbD09PWEmJihjLmxhc3Q9bnVsbCksbnVsbDtiPXtwcmlvcml0eUxldmVsOmIucHJpb3JpdHlMZXZlbCxwYXJ0aWFsU3RhdGU6Yi5wYXJ0aWFsU3RhdGUsY2FsbGJhY2s6Yi5jYWxsYmFjayxpc1JlcGxhY2U6Yi5pc1JlcGxhY2UsXG5pc0ZvcmNlZDpiLmlzRm9yY2VkLGlzVG9wTGV2ZWxVbm1vdW50OmIuaXNUb3BMZXZlbFVubW91bnQsbmV4dDpudWxsfTtxZChjLGIsZCxhKTtyZXR1cm4gYn1mdW5jdGlvbiB0ZChhLGIsYyxkKXthPWEucGFydGlhbFN0YXRlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChiLGMsZCk6YX1cbnZhciB1ZD17YWRkVXBkYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3NkKGEse3ByaW9yaXR5TGV2ZWw6ZCxwYXJ0aWFsU3RhdGU6YixjYWxsYmFjazpjLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxpc1RvcExldmVsVW5tb3VudDohMSxuZXh0Om51bGx9KX0sYWRkUmVwbGFjZVVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkKXtzZChhLHtwcmlvcml0eUxldmVsOmQscGFydGlhbFN0YXRlOmIsY2FsbGJhY2s6Yyxpc1JlcGxhY2U6ITAsaXNGb3JjZWQ6ITEsaXNUb3BMZXZlbFVubW91bnQ6ITEsbmV4dDpudWxsfSl9LGFkZEZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYixjKXtzZChhLHtwcmlvcml0eUxldmVsOmMscGFydGlhbFN0YXRlOm51bGwsY2FsbGJhY2s6Yixpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITAsaXNUb3BMZXZlbFVubW91bnQ6ITEsbmV4dDpudWxsfSl9LGdldFVwZGF0ZVByaW9yaXR5OmZ1bmN0aW9uKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7cmV0dXJuIG51bGw9PT1ifHxhLnRhZyE9PVxuamQmJmEudGFnIT09a2Q/Z2Q6bnVsbCE9PWIuZmlyc3Q/Yi5maXJzdC5wcmlvcml0eUxldmVsOmdkfSxhZGRUb3BMZXZlbFVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1udWxsPT09Yi5lbGVtZW50O2I9e3ByaW9yaXR5TGV2ZWw6ZCxwYXJ0aWFsU3RhdGU6YixjYWxsYmFjazpjLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxpc1RvcExldmVsVW5tb3VudDplLG5leHQ6bnVsbH07YT1zZChhLGIpO2UmJihlPW1kLGM9bmQsbnVsbCE9PWUmJm51bGwhPT1iLm5leHQmJihiLm5leHQ9bnVsbCxlLmxhc3Q9YiksbnVsbCE9PWMmJm51bGwhPT1hJiZudWxsIT09YS5uZXh0JiYoYS5uZXh0PW51bGwsYy5sYXN0PWIpKX0sYmVnaW5VcGRhdGVRdWV1ZTpmdW5jdGlvbihhLGIsYyxkLGUsZixnKXtudWxsIT09YSYmYS51cGRhdGVRdWV1ZT09PWMmJihjPWIudXBkYXRlUXVldWU9e2ZpcnN0OmMuZmlyc3QsbGFzdDpjLmxhc3QsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITF9KTtcbmE9Yy5jYWxsYmFja0xpc3Q7Zm9yKHZhciBoPWMuaGFzRm9yY2VVcGRhdGUsaz0hMCxwPWMuZmlyc3Q7bnVsbCE9PXAmJjA+PW9kKHAucHJpb3JpdHlMZXZlbCxnKTspe2MuZmlyc3Q9cC5uZXh0O251bGw9PT1jLmZpcnN0JiYoYy5sYXN0PW51bGwpO3ZhciB4O2lmKHAuaXNSZXBsYWNlKWU9dGQocCxkLGUsZiksaz0hMDtlbHNlIGlmKHg9dGQocCxkLGUsZikpZT1rP24oe30sZSx4KTpuKGUseCksaz0hMTtwLmlzRm9yY2VkJiYoaD0hMCk7bnVsbD09PXAuY2FsbGJhY2t8fHAuaXNUb3BMZXZlbFVubW91bnQmJm51bGwhPT1wLm5leHR8fChhPW51bGwhPT1hP2E6W10sYS5wdXNoKHAuY2FsbGJhY2spLGIuZWZmZWN0VGFnfD1mZCk7cD1wLm5leHR9Yy5jYWxsYmFja0xpc3Q9YTtjLmhhc0ZvcmNlVXBkYXRlPWg7bnVsbCE9PWMuZmlyc3R8fG51bGwhPT1hfHxofHwoYi51cGRhdGVRdWV1ZT1udWxsKTtyZXR1cm4gZX0sY29tbWl0Q2FsbGJhY2tzOmZ1bmN0aW9uKGEsYixjKXthPWIuY2FsbGJhY2tMaXN0O1xuaWYobnVsbCE9PWEpZm9yKGIuY2FsbGJhY2tMaXN0PW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkP3coXCIxOTFcIixkKTp2b2lkIDA7ZC5jYWxsKGMpfX19LHZkPVtdLHdkPS0xLHhkPXtjcmVhdGVDdXJzb3I6ZnVuY3Rpb24oYSl7cmV0dXJue2N1cnJlbnQ6YX19LGlzRW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4tMT09PXdkfSxwb3A6ZnVuY3Rpb24oYSl7MD53ZHx8KGEuY3VycmVudD12ZFt3ZF0sdmRbd2RdPW51bGwsd2QtLSl9LHB1c2g6ZnVuY3Rpb24oYSxiKXt3ZCsrO3ZkW3dkXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9LHJlc2V0OmZ1bmN0aW9uKCl7Zm9yKDstMTx3ZDspdmRbd2RdPW51bGwsd2QtLX19LHlkPWJiLmlzRmliZXJNb3VudGVkLHpkPUUuQ2xhc3NDb21wb25lbnQsQWQ9RS5Ib3N0Um9vdCxCZD14ZC5jcmVhdGVDdXJzb3IsQ2Q9eGQucG9wLERkPXhkLnB1c2gsRWQ9QmQoZGEpLEZkPUJkKCExKSxMZD1kYTtcbmZ1bmN0aW9uIE1kKGEsYixjKXthPWEuc3RhdGVOb2RlO2EuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iO2EuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Y31mdW5jdGlvbiBOZChhKXtyZXR1cm4gYS50YWc9PT16ZCYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIE9kKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGUsZD1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBiO2M9Yy5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gYyllIGluIGQ/dm9pZCAwOncoXCIxMDhcIixSYShhKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYixjKX1cbnZhciBSPXtnZXRVbm1hc2tlZENvbnRleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIE5kKGEpP0xkOkVkLmN1cnJlbnR9LGNhY2hlQ29udGV4dDpNZCxnZXRNYXNrZWRDb250ZXh0OmZ1bmN0aW9uKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gZGE7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJk1kKGEsYixlKTtyZXR1cm4gZX0saGFzQ29udGV4dENoYW5nZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gRmQuY3VycmVudH0saXNDb250ZXh0Q29uc3VtZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGFnPT09emQmJm51bGwhPWEudHlwZS5jb250ZXh0VHlwZXN9LGlzQ29udGV4dFByb3ZpZGVyOk5kLHBvcENvbnRleHRQcm92aWRlcjpmdW5jdGlvbihhKXtOZChhKSYmXG4oQ2QoRmQsYSksQ2QoRWQsYSkpfSxwb3BUb3BMZXZlbENvbnRleHRPYmplY3Q6ZnVuY3Rpb24oYSl7Q2QoRmQsYSk7Q2QoRWQsYSl9LHB1c2hUb3BMZXZlbENvbnRleHRPYmplY3Q6ZnVuY3Rpb24oYSxiLGMpe251bGwhPUVkLmN1cnNvcj93KFwiMTY4XCIpOnZvaWQgMDtEZChFZCxiLGEpO0RkKEZkLGMsYSl9LHByb2Nlc3NDaGlsZENvbnRleHQ6T2QscHVzaENvbnRleHRQcm92aWRlcjpmdW5jdGlvbihhKXtpZighTmQoYSkpcmV0dXJuITE7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxkYTtMZD1FZC5jdXJyZW50O0RkKEVkLGIsYSk7RGQoRmQsRmQuY3VycmVudCxhKTtyZXR1cm4hMH0saW52YWxpZGF0ZUNvbnRleHRQcm92aWRlcjpmdW5jdGlvbihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOncoXCIxNjlcIik7aWYoYil7dmFyIGQ9T2QoYSxMZCwhMCk7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1cbmQ7Q2QoRmQsYSk7Q2QoRWQsYSk7RGQoRWQsZCxhKX1lbHNlIENkKEZkLGEpO0RkKEZkLGIsYSl9LHJlc2V0Q29udGV4dDpmdW5jdGlvbigpe0xkPWRhO0VkLmN1cnJlbnQ9ZGE7RmQuY3VycmVudD0hMX0sZmluZEN1cnJlbnRVbm1hc2tlZENvbnRleHQ6ZnVuY3Rpb24oYSl7Zm9yKHlkKGEpJiZhLnRhZz09PXpkP3ZvaWQgMDp3KFwiMTcwXCIpO2EudGFnIT09QWQ7KXtpZihOZChhKSlyZXR1cm4gYS5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7KGE9YVtcInJldHVyblwiXSk/dm9pZCAwOncoXCIxNzFcIil9cmV0dXJuIGEuc3RhdGVOb2RlLmNvbnRleHR9fSxQZD17Tm9Db250ZXh0OjAsQXN5bmNVcGRhdGVzOjF9LFFkPUUuSW5kZXRlcm1pbmF0ZUNvbXBvbmVudCxSZD1FLkNsYXNzQ29tcG9uZW50LFNkPUUuSG9zdFJvb3QsVGQ9RS5Ib3N0Q29tcG9uZW50LFVkPUUuSG9zdFRleHQsVmQ9RS5Ib3N0UG9ydGFsLFdkPUUuQ29yb3V0aW5lQ29tcG9uZW50LFxuWGQ9RS5ZaWVsZENvbXBvbmVudCxZZD1FLkZyYWdtZW50LFpkPVEuTm9Xb3JrLCRkPVBkLk5vQ29udGV4dCxhZT1KLk5vRWZmZWN0O2Z1bmN0aW9uIGJlKGEsYixjKXt0aGlzLnRhZz1hO3RoaXMua2V5PWI7dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPW51bGw7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpc1tcInJldHVyblwiXT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9dGhpcy5wZW5kaW5nUHJvcHM9dGhpcy5yZWY9bnVsbDt0aGlzLmludGVybmFsQ29udGV4dFRhZz1jO3RoaXMuZWZmZWN0VGFnPWFlO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMucGVuZGluZ1dvcmtQcmlvcml0eT1aZDt0aGlzLmFsdGVybmF0ZT1udWxsfVxuZnVuY3Rpb24gY2UoYSxiLGMpe3ZhciBkPXZvaWQgMDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT8oZD1hLnByb3RvdHlwZSYmYS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD9uZXcgYmUoUmQsYixjKTpuZXcgYmUoUWQsYixjKSxkLnR5cGU9YSk6XCJzdHJpbmdcIj09PXR5cGVvZiBhPyhkPW5ldyBiZShUZCxiLGMpLGQudHlwZT1hKTpcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZcIm51bWJlclwiPT09dHlwZW9mIGEudGFnP2Q9YTp3KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpO3JldHVybiBkfVxudmFyIGRlPXtjcmVhdGVXb3JrSW5Qcm9ncmVzczpmdW5jdGlvbihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5ldyBiZShhLnRhZyxhLmtleSxhLmludGVybmFsQ29udGV4dFRhZyksYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLmVmZmVjdFRhZz1hZSxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MucGVuZGluZ1dvcmtQcmlvcml0eT1iO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfSxjcmVhdGVIb3N0Um9vdEZpYmVyOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBiZShTZCxudWxsLCRkKX0sXG5jcmVhdGVGaWJlckZyb21FbGVtZW50OmZ1bmN0aW9uKGEsYixjKXtiPWNlKGEudHlwZSxhLmtleSxiLG51bGwpO2IucGVuZGluZ1Byb3BzPWEucHJvcHM7Yi5wZW5kaW5nV29ya1ByaW9yaXR5PWM7cmV0dXJuIGJ9LGNyZWF0ZUZpYmVyRnJvbUZyYWdtZW50OmZ1bmN0aW9uKGEsYixjKXtiPW5ldyBiZShZZCxudWxsLGIpO2IucGVuZGluZ1Byb3BzPWE7Yi5wZW5kaW5nV29ya1ByaW9yaXR5PWM7cmV0dXJuIGJ9LGNyZWF0ZUZpYmVyRnJvbVRleHQ6ZnVuY3Rpb24oYSxiLGMpe2I9bmV3IGJlKFVkLG51bGwsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLnBlbmRpbmdXb3JrUHJpb3JpdHk9YztyZXR1cm4gYn0sY3JlYXRlRmliZXJGcm9tRWxlbWVudFR5cGU6Y2UsY3JlYXRlRmliZXJGcm9tSG9zdEluc3RhbmNlRm9yRGVsZXRpb246ZnVuY3Rpb24oKXt2YXIgYT1uZXcgYmUoVGQsbnVsbCwkZCk7YS50eXBlPVwiREVMRVRFRFwiO3JldHVybiBhfSxjcmVhdGVGaWJlckZyb21Db3JvdXRpbmU6ZnVuY3Rpb24oYSxcbmIsYyl7Yj1uZXcgYmUoV2QsYS5rZXksYik7Yi50eXBlPWEuaGFuZGxlcjtiLnBlbmRpbmdQcm9wcz1hO2IucGVuZGluZ1dvcmtQcmlvcml0eT1jO3JldHVybiBifSxjcmVhdGVGaWJlckZyb21ZaWVsZDpmdW5jdGlvbihhLGIpe3JldHVybiBuZXcgYmUoWGQsbnVsbCxiKX0sY3JlYXRlRmliZXJGcm9tUG9ydGFsOmZ1bmN0aW9uKGEsYixjKXtiPW5ldyBiZShWZCxhLmtleSxiKTtiLnBlbmRpbmdQcm9wcz1hLmNoaWxkcmVufHxbXTtiLnBlbmRpbmdXb3JrUHJpb3JpdHk9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8saW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9LGxhcmdlclByaW9yaXR5OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEhPT1aZCYmKGI9PT1aZHx8Yj5hKT9hOmJ9fSxlZT1kZS5jcmVhdGVIb3N0Um9vdEZpYmVyLGZlPUUuSW5kZXRlcm1pbmF0ZUNvbXBvbmVudCxnZT1FLkZ1bmN0aW9uYWxDb21wb25lbnQsaGU9RS5DbGFzc0NvbXBvbmVudCxcbmllPUUuSG9zdENvbXBvbmVudCxqZSxrZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0/KGplPVN5bWJvbFtcImZvclwiXShcInJlYWN0LmNvcm91dGluZVwiKSxrZT1TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC55aWVsZFwiKSk6KGplPTYwMTA0LGtlPTYwMTA1KTtcbnZhciBsZT17Y3JlYXRlQ29yb3V0aW5lOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6amUsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxoYW5kbGVyOmIscHJvcHM6Y319LGNyZWF0ZVlpZWxkOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjprZSx2YWx1ZTphfX0saXNDb3JvdXRpbmU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWplfSxpc1lpZWxkOmZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1rZX0sUkVBQ1RfWUlFTERfVFlQRTprZSxSRUFDVF9DT1JPVVRJTkVfVFlQRTpqZX0sbWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdJiZTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIil8fFxuNjAxMDYsbmU9e2NyZWF0ZVBvcnRhbDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOm1lLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fSxpc1BvcnRhbDpmdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bWV9LFJFQUNUX1BPUlRBTF9UWVBFOm1lfSxvZT1sZS5SRUFDVF9DT1JPVVRJTkVfVFlQRSxwZT1sZS5SRUFDVF9ZSUVMRF9UWVBFLHFlPW5lLlJFQUNUX1BPUlRBTF9UWVBFLHJlPWRlLmNyZWF0ZVdvcmtJblByb2dyZXNzLHNlPWRlLmNyZWF0ZUZpYmVyRnJvbUVsZW1lbnQsdGU9ZGUuY3JlYXRlRmliZXJGcm9tRnJhZ21lbnQsdWU9ZGUuY3JlYXRlRmliZXJGcm9tVGV4dCx2ZT1kZS5jcmVhdGVGaWJlckZyb21Db3JvdXRpbmUsXG53ZT1kZS5jcmVhdGVGaWJlckZyb21ZaWVsZCx4ZT1kZS5jcmVhdGVGaWJlckZyb21Qb3J0YWwseWU9QXJyYXkuaXNBcnJheSx6ZT1FLkZ1bmN0aW9uYWxDb21wb25lbnQsQWU9RS5DbGFzc0NvbXBvbmVudCxCZT1FLkhvc3RUZXh0LENlPUUuSG9zdFBvcnRhbCxEZT1FLkNvcm91dGluZUNvbXBvbmVudCxFZT1FLllpZWxkQ29tcG9uZW50LEZlPUUuRnJhZ21lbnQsR2U9Si5Ob0VmZmVjdCxIZT1KLlBsYWNlbWVudCxJZT1KLkRlbGV0aW9uLEplPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcixLZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0mJlN5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIil8fDYwMTAzO1xuZnVuY3Rpb24gTGUoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUplJiZhW0plXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gTWUoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsIT09YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpe2lmKGIuX293bmVyKXtiPWIuX293bmVyO3ZhciBkPXZvaWQgMDtiJiYoXCJudW1iZXJcIj09PXR5cGVvZiBiLnRhZz8oYi50YWchPT1BZT93KFwiMTEwXCIpOnZvaWQgMCxkPWIuc3RhdGVOb2RlKTpkPWIuZ2V0UHVibGljSW5zdGFuY2UoKSk7ZD92b2lkIDA6dyhcIjE0N1wiLGMpO3ZhciBlPVwiXCIrYztpZihudWxsIT09YSYmbnVsbCE9PWEucmVmJiZhLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYS5yZWY7YT1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM9PT1kYT9kLnJlZnM9e306ZC5yZWZzO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07YS5fc3RyaW5nUmVmPWU7cmV0dXJuIGF9XCJzdHJpbmdcIiE9PXR5cGVvZiBjP3coXCIxNDhcIik6dm9pZCAwO2IuX293bmVyP3ZvaWQgMDp3KFwiMTQ5XCIsYyl9cmV0dXJuIGN9XG5mdW5jdGlvbiBOZShhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmdyhcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gT2UoYSxiKXtmdW5jdGlvbiBjKGMsZCl7aWYoYil7aWYoIWEpe2lmKG51bGw9PT1kLmFsdGVybmF0ZSlyZXR1cm47ZD1kLmFsdGVybmF0ZX12YXIgbT1jLmxhc3RFZmZlY3Q7bnVsbCE9PW0/KG0ubmV4dEVmZmVjdD1kLGMubGFzdEVmZmVjdD1kKTpjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1kO2QubmV4dEVmZmVjdD1udWxsO2QuZWZmZWN0VGFnPUllfX1mdW5jdGlvbiBkKGEsZCl7aWYoIWIpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYyhhLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGUoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyl7aWYoYSlyZXR1cm4gYj1yZShiLGMpLGIuaW5kZXg9MCxiLnNpYmxpbmc9bnVsbCxiO2IucGVuZGluZ1dvcmtQcmlvcml0eT1jO2IuZWZmZWN0VGFnPUdlO1xuYi5pbmRleD0wO2Iuc2libGluZz1udWxsO3JldHVybiBifWZ1bmN0aW9uIGcoYSxjLGQpe2EuaW5kZXg9ZDtpZighYilyZXR1cm4gYztkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhhLmVmZmVjdFRhZz1IZSxjKTpkO2EuZWZmZWN0VGFnPUhlO3JldHVybiBjfWZ1bmN0aW9uIGgoYSl7YiYmbnVsbD09PWEuYWx0ZXJuYXRlJiYoYS5lZmZlY3RUYWc9SGUpO3JldHVybiBhfWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbD09PWJ8fGIudGFnIT09QmUpcmV0dXJuIGM9dWUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxjW1wicmV0dXJuXCJdPWEsYztiPWYoYixkKTtiLnBlbmRpbmdQcm9wcz1jO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjLGQpe2lmKG51bGw9PT1ifHxiLnR5cGUhPT1jLnR5cGUpcmV0dXJuIGQ9c2UoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxkLnJlZj1NZShiLGMpLGRbXCJyZXR1cm5cIl09YSxkO2Q9ZihiLFxuZCk7ZC5yZWY9TWUoYixjKTtkLnBlbmRpbmdQcm9wcz1jLnByb3BzO2RbXCJyZXR1cm5cIl09YTtyZXR1cm4gZH1mdW5jdGlvbiB4KGEsYixjLGQpe2lmKG51bGw9PT1ifHxiLnRhZyE9PURlKXJldHVybiBjPXZlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksY1tcInJldHVyblwiXT1hLGM7Yj1mKGIsZCk7Yi5wZW5kaW5nUHJvcHM9YztiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gUyhhLGIsYyxkKXtpZihudWxsPT09Ynx8Yi50YWchPT1FZSlyZXR1cm4gYj13ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGIudHlwZT1jLnZhbHVlLGJbXCJyZXR1cm5cIl09YSxiO2I9ZihiLGQpO2IudHlwZT1jLnZhbHVlO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiBEKGEsYixjLGQpe2lmKG51bGw9PT1ifHxiLnRhZyE9PUNlfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGM9XG54ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGNbXCJyZXR1cm5cIl09YSxjO2I9ZihiLGQpO2IucGVuZGluZ1Byb3BzPWMuY2hpbGRyZW58fFtdO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB5KGEsYixjLGQpe2lmKG51bGw9PT1ifHxiLnRhZyE9PUZlKXJldHVybiBjPXRlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksY1tcInJldHVyblwiXT1hLGM7Yj1mKGIsZCk7Yi5wZW5kaW5nUHJvcHM9YztiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQihhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9dWUoXCJcIitiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIEtlOnJldHVybiBjPXNlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYy5yZWY9TWUobnVsbCxiKSxjW1wicmV0dXJuXCJdPVxuYSxjO2Nhc2Ugb2U6cmV0dXJuIGI9dmUoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYjtjYXNlIHBlOnJldHVybiBjPXdlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYy50eXBlPWIudmFsdWUsY1tcInJldHVyblwiXT1hLGM7Y2FzZSBxZTpyZXR1cm4gYj14ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxifWlmKHllKGIpfHxMZShiKSlyZXR1cm4gYj10ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO05lKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmsoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBLZTpyZXR1cm4gYy5rZXk9PT1lP3AoYSxcbmIsYyxkKTpudWxsO2Nhc2Ugb2U6cmV0dXJuIGMua2V5PT09ZT94KGEsYixjLGQpOm51bGw7Y2FzZSBwZTpyZXR1cm4gbnVsbD09PWU/UyhhLGIsYyxkKTpudWxsO2Nhc2UgcWU6cmV0dXJuIGMua2V5PT09ZT9EKGEsYixjLGQpOm51bGx9aWYoeWUoYyl8fExlKGMpKXJldHVybiBudWxsIT09ZT9udWxsOnkoYSxiLGMsZCk7TmUoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsayhiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIEtlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxwKGIsYSxkLGUpO2Nhc2Ugb2U6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLHgoYixhLGQsZSk7Y2FzZSBwZTpyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLFMoYixhLGQsZSk7Y2FzZSBxZTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsRChiLGEsZCxlKX1pZih5ZShkKXx8TGUoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwseShiLGEsZCxlKTtOZShiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIENhKGEsZixoLGspe2Zvcih2YXIgbT1udWxsLHQ9bnVsbCxxPWYscj1mPTAscD1udWxsO251bGwhPT1xJiZyPGgubGVuZ3RoO3IrKyl7cS5pbmRleD5yPyhwPXEscT1udWxsKTpwPXEuc2libGluZzt2YXIgdj1IKGEscSxoW3JdLGspO2lmKG51bGw9PT12KXtudWxsPT09cSYmKHE9cCk7YnJlYWt9YiYmcSYmbnVsbD09PXYuYWx0ZXJuYXRlJiZjKGEscSk7Zj1nKHYsZixyKTtudWxsPT09dD9tPXY6dC5zaWJsaW5nPXY7dD12O3E9cH1pZihyPT09aC5sZW5ndGgpcmV0dXJuIGQoYSxxKSxtO2lmKG51bGw9PT1xKXtmb3IoO3I8aC5sZW5ndGg7cisrKWlmKHE9QihhLGhbcl0saykpZj1nKHEsZixyKSxudWxsPT09XG50P209cTp0LnNpYmxpbmc9cSx0PXE7cmV0dXJuIG19Zm9yKHE9ZShhLHEpO3I8aC5sZW5ndGg7cisrKWlmKHA9QyhxLGEscixoW3JdLGspKXtpZihiJiZudWxsIT09cC5hbHRlcm5hdGUpcVtcImRlbGV0ZVwiXShudWxsPT09cC5rZXk/cjpwLmtleSk7Zj1nKHAsZixyKTtudWxsPT09dD9tPXA6dC5zaWJsaW5nPXA7dD1wfWImJnEuZm9yRWFjaChmdW5jdGlvbihiKXtyZXR1cm4gYyhhLGIpfSk7cmV0dXJuIG19ZnVuY3Rpb24gcihhLGYsaCxyKXt2YXIgbT1MZShoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbT93KFwiMTUwXCIpOnZvaWQgMDtoPW0uY2FsbChoKTtudWxsPT1oP3coXCIxNTFcIik6dm9pZCAwO2Zvcih2YXIgdD1tPW51bGwscT1mLGs9Zj0wLHA9bnVsbCx2PWgubmV4dCgpO251bGwhPT1xJiYhdi5kb25lO2srKyx2PWgubmV4dCgpKXtxLmluZGV4Pms/KHA9cSxxPW51bGwpOnA9cS5zaWJsaW5nO3ZhciBWPUgoYSxxLHYudmFsdWUscik7aWYobnVsbD09PVYpe3F8fChxPXApO2JyZWFrfWImJlxucSYmbnVsbD09PVYuYWx0ZXJuYXRlJiZjKGEscSk7Zj1nKFYsZixrKTtudWxsPT09dD9tPVY6dC5zaWJsaW5nPVY7dD1WO3E9cH1pZih2LmRvbmUpcmV0dXJuIGQoYSxxKSxtO2lmKG51bGw9PT1xKXtmb3IoOyF2LmRvbmU7aysrLHY9aC5uZXh0KCkpdj1CKGEsdi52YWx1ZSxyKSxudWxsIT09diYmKGY9Zyh2LGYsayksbnVsbD09PXQ/bT12OnQuc2libGluZz12LHQ9dik7cmV0dXJuIG19Zm9yKHE9ZShhLHEpOyF2LmRvbmU7aysrLHY9aC5uZXh0KCkpaWYodj1DKHEsYSxrLHYudmFsdWUsciksbnVsbCE9PXYpe2lmKGImJm51bGwhPT12LmFsdGVybmF0ZSlxW1wiZGVsZXRlXCJdKG51bGw9PT12LmtleT9rOnYua2V5KTtmPWcodixmLGspO251bGw9PT10P209djp0LnNpYmxpbmc9djt0PXZ9YiYmcS5mb3JFYWNoKGZ1bmN0aW9uKGIpe3JldHVybiBjKGEsYil9KTtyZXR1cm4gbX1yZXR1cm4gZnVuY3Rpb24oYSxiLGUsZyl7dmFyIG09XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZTtpZihtKXN3aXRjaChlLiQkdHlwZW9mKXtjYXNlIEtlOmE6e3ZhciBDPVxuZS5rZXk7Zm9yKG09YjtudWxsIT09bTspe2lmKG0ua2V5PT09QylpZihtLnR5cGU9PT1lLnR5cGUpe2QoYSxtLnNpYmxpbmcpO2I9ZihtLGcpO2IucmVmPU1lKG0sZSk7Yi5wZW5kaW5nUHJvcHM9ZS5wcm9wcztiW1wicmV0dXJuXCJdPWE7YT1iO2JyZWFrIGF9ZWxzZXtkKGEsbSk7YnJlYWt9ZWxzZSBjKGEsbSk7bT1tLnNpYmxpbmd9Zz1zZShlLGEuaW50ZXJuYWxDb250ZXh0VGFnLGcpO2cucmVmPU1lKGIsZSk7Z1tcInJldHVyblwiXT1hO2E9Z31yZXR1cm4gaChhKTtjYXNlIG9lOmE6e2ZvcihtPWUua2V5O251bGwhPT1iOyl7aWYoYi5rZXk9PT1tKWlmKGIudGFnPT09RGUpe2QoYSxiLnNpYmxpbmcpO2I9ZihiLGcpO2IucGVuZGluZ1Byb3BzPWU7YltcInJldHVyblwiXT1hO2E9YjticmVhayBhfWVsc2V7ZChhLGIpO2JyZWFrfWVsc2UgYyhhLGIpO2I9Yi5zaWJsaW5nfWU9dmUoZSxhLmludGVybmFsQ29udGV4dFRhZyxnKTtlW1wicmV0dXJuXCJdPWE7YT1lfXJldHVybiBoKGEpO2Nhc2UgcGU6YTp7aWYobnVsbCE9PVxuYilpZihiLnRhZz09PUVlKXtkKGEsYi5zaWJsaW5nKTtiPWYoYixnKTtiLnR5cGU9ZS52YWx1ZTtiW1wicmV0dXJuXCJdPWE7YT1iO2JyZWFrIGF9ZWxzZSBkKGEsYik7Yj13ZShlLGEuaW50ZXJuYWxDb250ZXh0VGFnLGcpO2IudHlwZT1lLnZhbHVlO2JbXCJyZXR1cm5cIl09YTthPWJ9cmV0dXJuIGgoYSk7Y2FzZSBxZTphOntmb3IobT1lLmtleTtudWxsIT09Yjspe2lmKGIua2V5PT09bSlpZihiLnRhZz09PUNlJiZiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09ZS5jb250YWluZXJJbmZvJiZiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWUuaW1wbGVtZW50YXRpb24pe2QoYSxiLnNpYmxpbmcpO2I9ZihiLGcpO2IucGVuZGluZ1Byb3BzPWUuY2hpbGRyZW58fFtdO2JbXCJyZXR1cm5cIl09YTthPWI7YnJlYWsgYX1lbHNle2QoYSxiKTticmVha31lbHNlIGMoYSxiKTtiPWIuc2libGluZ31lPXhlKGUsYS5pbnRlcm5hbENvbnRleHRUYWcsZyk7ZVtcInJldHVyblwiXT1hO2E9ZX1yZXR1cm4gaChhKX1pZihcInN0cmluZ1wiPT09XG50eXBlb2YgZXx8XCJudW1iZXJcIj09PXR5cGVvZiBlKXJldHVybiBlPVwiXCIrZSxudWxsIT09YiYmYi50YWc9PT1CZT8oZChhLGIuc2libGluZyksYj1mKGIsZyksYi5wZW5kaW5nUHJvcHM9ZSxiW1wicmV0dXJuXCJdPWEsYT1iKTooZChhLGIpLGU9dWUoZSxhLmludGVybmFsQ29udGV4dFRhZyxnKSxlW1wicmV0dXJuXCJdPWEsYT1lKSxoKGEpO2lmKHllKGUpKXJldHVybiBDYShhLGIsZSxnKTtpZihMZShlKSlyZXR1cm4gcihhLGIsZSxnKTttJiZOZShhLGUpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZSlzd2l0Y2goYS50YWcpe2Nhc2UgQWU6Y2FzZSB6ZTplPWEudHlwZSx3KFwiMTUyXCIsZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gZChhLGIpfX1cbnZhciBQZT1PZSghMCwhMCksUWU9T2UoITEsITApLFJlPU9lKCExLCExKSxTZT17cmVjb25jaWxlQ2hpbGRGaWJlcnM6UGUscmVjb25jaWxlQ2hpbGRGaWJlcnNJblBsYWNlOlFlLG1vdW50Q2hpbGRGaWJlcnNJblBsYWNlOlJlLGNsb25lQ2hpbGRGaWJlcnM6ZnVuY3Rpb24oYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/dyhcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz1yZShhLGEucGVuZGluZ1dvcmtQcmlvcml0eSk7Yy5wZW5kaW5nUHJvcHM9YS5wZW5kaW5nUHJvcHM7Yi5jaGlsZD1jO2ZvcihjW1wicmV0dXJuXCJdPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9cmUoYSxhLnBlbmRpbmdXb3JrUHJpb3JpdHkpLGMucGVuZGluZ1Byb3BzPWEucGVuZGluZ1Byb3BzLGNbXCJyZXR1cm5cIl09YjtjLnNpYmxpbmc9bnVsbH19fSxUZT1KLlVwZGF0ZSxVZT1QZC5Bc3luY1VwZGF0ZXMsVmU9Ui5jYWNoZUNvbnRleHQsXG5XZT1SLmdldE1hc2tlZENvbnRleHQsWGU9Ui5nZXRVbm1hc2tlZENvbnRleHQsWWU9Ui5pc0NvbnRleHRDb25zdW1lcixaZT11ZC5hZGRVcGRhdGUsJGU9dWQuYWRkUmVwbGFjZVVwZGF0ZSxhZj11ZC5hZGRGb3JjZVVwZGF0ZSxiZj11ZC5iZWdpblVwZGF0ZVF1ZXVlLGNmPVIuaGFzQ29udGV4dENoYW5nZWQsZGY9YmIuaXNNb3VudGVkO1xuZnVuY3Rpb24gZWYoYSxiLGMsZCl7ZnVuY3Rpb24gZShhLGIpe2IudXBkYXRlcj1mO2Euc3RhdGVOb2RlPWI7UGEuc2V0KGIsYSl9dmFyIGY9e2lzTW91bnRlZDpkZixlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYyxkLGUpe2M9UGEuZ2V0KGMpO3ZhciBmPWIoYywhMSk7WmUoYyxkLHZvaWQgMD09PWU/bnVsbDplLGYpO2EoYyxmKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihjLGQsZSl7Yz1QYS5nZXQoYyk7dmFyIGY9YihjLCExKTskZShjLGQsdm9pZCAwPT09ZT9udWxsOmUsZik7YShjLGYpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYyxkKXtjPVBhLmdldChjKTt2YXIgZT1iKGMsITEpO2FmKGMsdm9pZCAwPT09ZD9udWxsOmQsZSk7YShjLGUpfX07cmV0dXJue2Fkb3B0Q2xhc3NJbnN0YW5jZTplLGNvbnN0cnVjdENsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnR5cGUsZD1YZShhKSxmPVllKGEpLGc9Zj9XZShhLGQpOmRhO2I9bmV3IGMoYixnKTtcbmUoYSxiKTtmJiZWZShhLGQsZyk7cmV0dXJuIGJ9LG1vdW50Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5zdGF0ZU5vZGUsZT1kLnN0YXRlfHxudWxsLGc9YS5wZW5kaW5nUHJvcHM7Zz92b2lkIDA6dyhcIjE1OFwiKTt2YXIgaD1YZShhKTtkLnByb3BzPWc7ZC5zdGF0ZT1lO2QucmVmcz1kYTtkLmNvbnRleHQ9V2UoYSxoKTtlZC5lbmFibGVBc3luY1N1YnRyZWVBUEkmJm51bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCYmKGEuaW50ZXJuYWxDb250ZXh0VGFnfD1VZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50JiYoaD1kLnN0YXRlLGQuY29tcG9uZW50V2lsbE1vdW50KCksaCE9PWQuc3RhdGUmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShkLGQuc3RhdGUsbnVsbCksaD1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1cbmgmJihkLnN0YXRlPWJmKGMsYSxoLGQsZSxnLGIpKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9VGUpfSx1cGRhdGVDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYixlKXt2YXIgZz1iLnN0YXRlTm9kZTtnLnByb3BzPWIubWVtb2l6ZWRQcm9wcztnLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTt2YXIgaD1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcztrfHwoaz1oLG51bGw9PWs/dyhcIjE1OVwiKTp2b2lkIDApO3ZhciBEPWcuY29udGV4dCx5PVhlKGIpO3k9V2UoYix5KTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxoPT09ayYmRD09PXl8fChEPWcuc3RhdGUsZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGsseSksZy5zdGF0ZSE9PUQmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShnLGcuc3RhdGUsbnVsbCkpO0Q9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWIudXBkYXRlUXVldWU/YmYoYSxcbmIsYi51cGRhdGVRdWV1ZSxnLEQsayxlKTpEO2lmKCEoaCE9PWt8fEQhPT1lfHxjZigpfHxudWxsIT09Yi51cGRhdGVRdWV1ZSYmYi51cGRhdGVRdWV1ZS5oYXNGb3JjZVVwZGF0ZSkpcmV0dXJuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZEPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PVRlKSwhMTt2YXIgQj1rO2lmKG51bGw9PT1ofHxudWxsIT09Yi51cGRhdGVRdWV1ZSYmYi51cGRhdGVRdWV1ZS5oYXNGb3JjZVVwZGF0ZSlCPSEwO2Vsc2V7dmFyIEg9Yi5zdGF0ZU5vZGUsQz1iLnR5cGU7Qj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgSC5zaG91bGRDb21wb25lbnRVcGRhdGU/SC5zaG91bGRDb21wb25lbnRVcGRhdGUoQixlLHkpOkMucHJvdG90eXBlJiZDLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZWEoaCxCKXx8IWVhKEQsZSk6ITB9Qj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmXG5nLmNvbXBvbmVudFdpbGxVcGRhdGUoayxlLHkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD1UZSkpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJkQ9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9VGUpLGMoYixrKSxkKGIsZSkpO2cucHJvcHM9aztnLnN0YXRlPWU7Zy5jb250ZXh0PXk7cmV0dXJuIEJ9fX1cbnZhciBmZj1TZS5tb3VudENoaWxkRmliZXJzSW5QbGFjZSxnZj1TZS5yZWNvbmNpbGVDaGlsZEZpYmVycyxoZj1TZS5yZWNvbmNpbGVDaGlsZEZpYmVyc0luUGxhY2UsamY9U2UuY2xvbmVDaGlsZEZpYmVycyxrZj11ZC5iZWdpblVwZGF0ZVF1ZXVlLGxmPVIuZ2V0TWFza2VkQ29udGV4dCxtZj1SLmdldFVubWFza2VkQ29udGV4dCxuZj1SLmhhc0NvbnRleHRDaGFuZ2VkLG9mPVIucHVzaENvbnRleHRQcm92aWRlcixwZj1SLnB1c2hUb3BMZXZlbENvbnRleHRPYmplY3QscWY9Ui5pbnZhbGlkYXRlQ29udGV4dFByb3ZpZGVyLHJmPUUuSW5kZXRlcm1pbmF0ZUNvbXBvbmVudCxzZj1FLkZ1bmN0aW9uYWxDb21wb25lbnQsdGY9RS5DbGFzc0NvbXBvbmVudCx1Zj1FLkhvc3RSb290LHdmPUUuSG9zdENvbXBvbmVudCx4Zj1FLkhvc3RUZXh0LHlmPUUuSG9zdFBvcnRhbCx6Zj1FLkNvcm91dGluZUNvbXBvbmVudCxBZj1FLkNvcm91dGluZUhhbmRsZXJQaGFzZSxCZj1FLllpZWxkQ29tcG9uZW50LFxuQ2Y9RS5GcmFnbWVudCxEZj1RLk5vV29yayxFZj1RLk9mZnNjcmVlblByaW9yaXR5LEZmPUouUGVyZm9ybWVkV29yayxHZj1KLlBsYWNlbWVudCxIZj1KLkNvbnRlbnRSZXNldCxJZj1KLkVycixKZj1KLlJlZixLZj1RYS5SZWFjdEN1cnJlbnRPd25lcjtcbmZ1bmN0aW9uIExmKGEsYixjLGQsZSl7ZnVuY3Rpb24gZihhLGIsYyl7ZyhhLGIsYyxiLnBlbmRpbmdXb3JrUHJpb3JpdHkpfWZ1bmN0aW9uIGcoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9mZihiLGIuY2hpbGQsYyxkKTphLmNoaWxkPT09Yi5jaGlsZD9nZihiLGIuY2hpbGQsYyxkKTpoZihiLGIuY2hpbGQsYyxkKX1mdW5jdGlvbiBoKGEsYil7dmFyIGM9Yi5yZWY7bnVsbD09PWN8fGEmJmEucmVmPT09Y3x8KGIuZWZmZWN0VGFnfD1KZil9ZnVuY3Rpb24gayhhLGIsYyxkKXtoKGEsYik7aWYoIWMpcmV0dXJuIGQmJnFmKGIsITEpLHgoYSxiKTtjPWIuc3RhdGVOb2RlO0tmLmN1cnJlbnQ9Yjt2YXIgZT1jLnJlbmRlcigpO2IuZWZmZWN0VGFnfD1GZjtmKGEsYixlKTtiLm1lbW9pemVkU3RhdGU9Yy5zdGF0ZTtiLm1lbW9pemVkUHJvcHM9Yy5wcm9wcztkJiZxZihiLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBwKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/XG5wZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZwZihhLGIuY29udGV4dCwhMSk7QyhhLGIuY29udGFpbmVySW5mbyl9ZnVuY3Rpb24geChhLGIpe2pmKGEsYik7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUyhhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSB1ZjpwKGIpO2JyZWFrO2Nhc2UgdGY6b2YoYik7YnJlYWs7Y2FzZSB5ZjpDKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyl9cmV0dXJuIG51bGx9dmFyIEQ9YS5zaG91bGRTZXRUZXh0Q29udGVudCx5PWEudXNlU3luY1NjaGVkdWxpbmcsQj1hLnNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWUsSD1iLnB1c2hIb3N0Q29udGV4dCxDPWIucHVzaEhvc3RDb250YWluZXIsQ2E9Yy5lbnRlckh5ZHJhdGlvblN0YXRlLHI9Yy5yZXNldEh5ZHJhdGlvblN0YXRlLG09Yy50cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTthPWVmKGQsZSxmdW5jdGlvbihhLGIpe2EubWVtb2l6ZWRQcm9wcz1cbmJ9LGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFN0YXRlPWJ9KTt2YXIgdD1hLmFkb3B0Q2xhc3NJbnN0YW5jZSx2PWEuY29uc3RydWN0Q2xhc3NJbnN0YW5jZSxWPWEubW91bnRDbGFzc0luc3RhbmNlLGxkPWEudXBkYXRlQ2xhc3NJbnN0YW5jZTtyZXR1cm57YmVnaW5Xb3JrOmZ1bmN0aW9uKGEsYixjKXtpZihiLnBlbmRpbmdXb3JrUHJpb3JpdHk9PT1EZnx8Yi5wZW5kaW5nV29ya1ByaW9yaXR5PmMpcmV0dXJuIFMoYSxiKTtzd2l0Y2goYi50YWcpe2Nhc2UgcmY6bnVsbCE9PWE/dyhcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZz1tZihiKTtnPWxmKGIsZyk7ZD1kKGUsZyk7Yi5lZmZlY3RUYWd8PUZmO1wib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnJlbmRlcj8oYi50YWc9dGYsZT1vZihiKSx0KGIsZCksVihiLGMpLGI9ayhhLGIsITAsZSkpOihiLnRhZz1zZixmKGEsYixkKSxiLm1lbW9pemVkUHJvcHM9XG5lLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSBzZjphOntlPWIudHlwZTtjPWIucGVuZGluZ1Byb3BzO2Q9Yi5tZW1vaXplZFByb3BzO2lmKG5mKCkpbnVsbD09PWMmJihjPWQpO2Vsc2UgaWYobnVsbD09PWN8fGQ9PT1jKXtiPXgoYSxiKTticmVhayBhfWQ9bWYoYik7ZD1sZihiLGQpO2U9ZShjLGQpO2IuZWZmZWN0VGFnfD1GZjtmKGEsYixlKTtiLm1lbW9pemVkUHJvcHM9YztiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSB0ZjpyZXR1cm4gZT1vZihiKSxkPXZvaWQgMCxudWxsPT09YT9iLnN0YXRlTm9kZT93KFwiMTUzXCIpOih2KGIsYi5wZW5kaW5nUHJvcHMpLFYoYixjKSxkPSEwKTpkPWxkKGEsYixjKSxrKGEsYixkLGUpO2Nhc2UgdWY6cmV0dXJuIHAoYiksZD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1kPyhlPWIubWVtb2l6ZWRTdGF0ZSxkPWtmKGEsYixkLG51bGwsZSxudWxsLGMpLGU9PT1kPyhyKCksYj14KGEsYikpOihlPWQuZWxlbWVudCxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fFxuIUNhKGIpPyhyKCksZihhLGIsZSkpOihiLmVmZmVjdFRhZ3w9R2YsYi5jaGlsZD1mZihiLGIuY2hpbGQsZSxjKSksYi5tZW1vaXplZFN0YXRlPWQsYj1iLmNoaWxkKSk6KHIoKSxiPXgoYSxiKSksYjtjYXNlIHdmOkgoYik7bnVsbD09PWEmJm0oYik7ZT1iLnR5cGU7dmFyIHE9Yi5tZW1vaXplZFByb3BzO2Q9Yi5wZW5kaW5nUHJvcHM7bnVsbD09PWQmJihkPXEsbnVsbD09PWQ/dyhcIjE1NFwiKTp2b2lkIDApO2c9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7bmYoKXx8bnVsbCE9PWQmJnEhPT1kPyhxPWQuY2hpbGRyZW4sRChlLGQpP3E9bnVsbDpnJiZEKGUsZykmJihiLmVmZmVjdFRhZ3w9SGYpLGgoYSxiKSxjIT09RWYmJiF5JiZCKGUsZCk/KGIucGVuZGluZ1dvcmtQcmlvcml0eT1FZixiPW51bGwpOihmKGEsYixxKSxiLm1lbW9pemVkUHJvcHM9ZCxiPWIuY2hpbGQpKTpiPXgoYSxiKTtyZXR1cm4gYjtjYXNlIHhmOnJldHVybiBudWxsPT09YSYmbShiKSxhPWIucGVuZGluZ1Byb3BzLFxubnVsbD09PWEmJihhPWIubWVtb2l6ZWRQcm9wcyksYi5tZW1vaXplZFByb3BzPWEsbnVsbDtjYXNlIEFmOmIudGFnPXpmO2Nhc2UgemY6Yz1iLnBlbmRpbmdQcm9wcztpZihuZigpKW51bGw9PT1jJiYoYz1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09PWM/dyhcIjE1NFwiKTp2b2lkIDApO2Vsc2UgaWYobnVsbD09PWN8fGIubWVtb2l6ZWRQcm9wcz09PWMpYz1iLm1lbW9pemVkUHJvcHM7ZT1jLmNoaWxkcmVuO2Q9Yi5wZW5kaW5nV29ya1ByaW9yaXR5O2Iuc3RhdGVOb2RlPW51bGw9PT1hP2ZmKGIsYi5zdGF0ZU5vZGUsZSxkKTphLmNoaWxkPT09Yi5jaGlsZD9nZihiLGIuc3RhdGVOb2RlLGUsZCk6aGYoYixiLnN0YXRlTm9kZSxlLGQpO2IubWVtb2l6ZWRQcm9wcz1jO3JldHVybiBiLnN0YXRlTm9kZTtjYXNlIEJmOnJldHVybiBudWxsO2Nhc2UgeWY6YTp7QyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2M9Yi5wZW5kaW5nV29ya1ByaW9yaXR5O2U9Yi5wZW5kaW5nUHJvcHM7aWYobmYoKSludWxsPT09XG5lJiYoZT1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09ZT93KFwiMTU0XCIpOnZvaWQgMCk7ZWxzZSBpZihudWxsPT09ZXx8Yi5tZW1vaXplZFByb3BzPT09ZSl7Yj14KGEsYik7YnJlYWsgYX1udWxsPT09YT9iLmNoaWxkPWhmKGIsYi5jaGlsZCxlLGMpOmYoYSxiLGUpO2IubWVtb2l6ZWRQcm9wcz1lO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIENmOmE6e2M9Yi5wZW5kaW5nUHJvcHM7aWYobmYoKSludWxsPT09YyYmKGM9Yi5tZW1vaXplZFByb3BzKTtlbHNlIGlmKG51bGw9PT1jfHxiLm1lbW9pemVkUHJvcHM9PT1jKXtiPXgoYSxiKTticmVhayBhfWYoYSxiLGMpO2IubWVtb2l6ZWRQcm9wcz1jO2I9Yi5jaGlsZH1yZXR1cm4gYjtkZWZhdWx0OncoXCIxNTZcIil9fSxiZWdpbkZhaWxlZFdvcms6ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiLnRhZyl7Y2FzZSB0ZjpvZihiKTticmVhaztjYXNlIHVmOnAoYik7YnJlYWs7ZGVmYXVsdDp3KFwiMTU3XCIpfWIuZWZmZWN0VGFnfD1JZjtudWxsPT09YT9cbmIuY2hpbGQ9bnVsbDpiLmNoaWxkIT09YS5jaGlsZCYmKGIuY2hpbGQ9YS5jaGlsZCk7aWYoYi5wZW5kaW5nV29ya1ByaW9yaXR5PT09RGZ8fGIucGVuZGluZ1dvcmtQcmlvcml0eT5jKXJldHVybiBTKGEsYik7Yi5maXJzdEVmZmVjdD1udWxsO2IubGFzdEVmZmVjdD1udWxsO2coYSxiLG51bGwsYyk7Yi50YWc9PT10ZiYmKGE9Yi5zdGF0ZU5vZGUsYi5tZW1vaXplZFByb3BzPWEucHJvcHMsYi5tZW1vaXplZFN0YXRlPWEuc3RhdGUpO3JldHVybiBiLmNoaWxkfX19XG52YXIgTWY9U2UucmVjb25jaWxlQ2hpbGRGaWJlcnMsTmY9Ui5wb3BDb250ZXh0UHJvdmlkZXIsT2Y9Ui5wb3BUb3BMZXZlbENvbnRleHRPYmplY3QsUGY9RS5JbmRldGVybWluYXRlQ29tcG9uZW50LFFmPUUuRnVuY3Rpb25hbENvbXBvbmVudCxSZj1FLkNsYXNzQ29tcG9uZW50LFNmPUUuSG9zdFJvb3QsVGY9RS5Ib3N0Q29tcG9uZW50LFVmPUUuSG9zdFRleHQsVmY9RS5Ib3N0UG9ydGFsLFdmPUUuQ29yb3V0aW5lQ29tcG9uZW50LFhmPUUuQ29yb3V0aW5lSGFuZGxlclBoYXNlLFlmPUUuWWllbGRDb21wb25lbnQsWmY9RS5GcmFnbWVudCxhZz1KLlBsYWNlbWVudCxiZz1KLlJlZixjZz1KLlVwZGF0ZSxkZz1RLk9mZnNjcmVlblByaW9yaXR5O1xuZnVuY3Rpb24gZWcoYSxiLGMpe3ZhciBkPWEuY3JlYXRlSW5zdGFuY2UsZT1hLmNyZWF0ZVRleHRJbnN0YW5jZSxmPWEuYXBwZW5kSW5pdGlhbENoaWxkLGc9YS5maW5hbGl6ZUluaXRpYWxDaGlsZHJlbixoPWEucHJlcGFyZVVwZGF0ZSxrPWIuZ2V0Um9vdEhvc3RDb250YWluZXIscD1iLnBvcEhvc3RDb250ZXh0LHg9Yi5nZXRIb3N0Q29udGV4dCxTPWIucG9wSG9zdENvbnRhaW5lcixEPWMucHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZSx5PWMucHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2UsQj1jLnBvcEh5ZHJhdGlvblN0YXRlO3JldHVybntjb21wbGV0ZVdvcms6ZnVuY3Rpb24oYSxiLGMpe3ZhciByPWIucGVuZGluZ1Byb3BzO2lmKG51bGw9PT1yKXI9Yi5tZW1vaXplZFByb3BzO2Vsc2UgaWYoYi5wZW5kaW5nV29ya1ByaW9yaXR5IT09ZGd8fGM9PT1kZyliLnBlbmRpbmdQcm9wcz1udWxsO3N3aXRjaChiLnRhZyl7Y2FzZSBRZjpyZXR1cm4gbnVsbDtjYXNlIFJmOnJldHVybiBOZihiKSxcbm51bGw7Y2FzZSBTZjpTKGIpO09mKGIpO3I9Yi5zdGF0ZU5vZGU7ci5wZW5kaW5nQ29udGV4dCYmKHIuY29udGV4dD1yLnBlbmRpbmdDb250ZXh0LHIucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUIoYiksYi5lZmZlY3RUYWcmPX5hZztyZXR1cm4gbnVsbDtjYXNlIFRmOnAoYik7Yz1rKCk7dmFyIG09Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIHQ9YS5tZW1vaXplZFByb3BzLEM9Yi5zdGF0ZU5vZGUsVj14KCk7cj1oKEMsbSx0LHIsYyxWKTtpZihiLnVwZGF0ZVF1ZXVlPXIpYi5lZmZlY3RUYWd8PWNnO2EucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9YmcpfWVsc2V7aWYoIXIpcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT93KFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9eCgpO2lmKEIoYikpRChiLGMsYSkmJihiLmVmZmVjdFRhZ3w9Y2cpO2Vsc2V7YT1kKG0scixjLGEsYik7YTpmb3IodD1iLmNoaWxkO251bGwhPT1cbnQ7KXtpZih0LnRhZz09PVRmfHx0LnRhZz09PVVmKWYoYSx0LnN0YXRlTm9kZSk7ZWxzZSBpZih0LnRhZyE9PVZmJiZudWxsIT09dC5jaGlsZCl7dD10LmNoaWxkO2NvbnRpbnVlfWlmKHQ9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09dC5zaWJsaW5nOyl7aWYobnVsbD09PXRbXCJyZXR1cm5cIl18fHRbXCJyZXR1cm5cIl09PT1iKWJyZWFrIGE7dD10W1wicmV0dXJuXCJdfXQ9dC5zaWJsaW5nfWcoYSxtLHIsYykmJihiLmVmZmVjdFRhZ3w9Y2cpO2Iuc3RhdGVOb2RlPWF9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PWJnKX1yZXR1cm4gbnVsbDtjYXNlIFVmOmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKWEubWVtb2l6ZWRQcm9wcyE9PXImJihiLmVmZmVjdFRhZ3w9Y2cpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiByKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/dyhcIjE2NlwiKTp2b2lkIDAsbnVsbDthPWsoKTtjPXgoKTtCKGIpP3koYikmJihiLmVmZmVjdFRhZ3w9Y2cpOmIuc3RhdGVOb2RlPVxuZShyLGEsYyxiKX1yZXR1cm4gbnVsbDtjYXNlIFdmOihyPWIubWVtb2l6ZWRQcm9wcyk/dm9pZCAwOncoXCIxNjVcIik7Yi50YWc9WGY7Yz1bXTthOmZvcigobT1iLnN0YXRlTm9kZSkmJihtW1wicmV0dXJuXCJdPWIpO251bGwhPT1tOyl7aWYobS50YWc9PT1UZnx8bS50YWc9PT1VZnx8bS50YWc9PT1WZil3KFwiMTY0XCIpO2Vsc2UgaWYobS50YWc9PT1ZZiljLnB1c2gobS50eXBlKTtlbHNlIGlmKG51bGwhPT1tLmNoaWxkKXttLmNoaWxkW1wicmV0dXJuXCJdPW07bT1tLmNoaWxkO2NvbnRpbnVlfWZvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tW1wicmV0dXJuXCJdfHxtW1wicmV0dXJuXCJdPT09YilicmVhayBhO209bVtcInJldHVyblwiXX1tLnNpYmxpbmdbXCJyZXR1cm5cIl09bVtcInJldHVyblwiXTttPW0uc2libGluZ31tPXIuaGFuZGxlcjtyPW0oci5wcm9wcyxjKTtiLmNoaWxkPU1mKGIsbnVsbCE9PWE/YS5jaGlsZDpudWxsLHIsYi5wZW5kaW5nV29ya1ByaW9yaXR5KTtyZXR1cm4gYi5jaGlsZDtcbmNhc2UgWGY6cmV0dXJuIGIudGFnPVdmLG51bGw7Y2FzZSBZZjpyZXR1cm4gbnVsbDtjYXNlIFpmOnJldHVybiBudWxsO2Nhc2UgVmY6cmV0dXJuIGIuZWZmZWN0VGFnfD1jZyxTKGIpLG51bGw7Y2FzZSBQZjp3KFwiMTY3XCIpO2RlZmF1bHQ6dyhcIjE1NlwiKX19fX12YXIgZmc9bnVsbCxnZz1udWxsO2Z1bmN0aW9uIGhnKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG52YXIgaWc9e2luamVjdEludGVybmFsczpmdW5jdGlvbihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7Zmc9aGcoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO2dnPWhnKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9LG9uQ29tbWl0Um9vdDpmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZmcmJmZnKGEpfSxvbkNvbW1pdFVubW91bnQ6ZnVuY3Rpb24oYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIGdnJiZnZyhhKX19LGpnPUUuQ2xhc3NDb21wb25lbnQsa2c9RS5Ib3N0Um9vdCxsZz1FLkhvc3RDb21wb25lbnQsbWc9RS5Ib3N0VGV4dCxuZz1cbkUuSG9zdFBvcnRhbCxvZz1FLkNvcm91dGluZUNvbXBvbmVudCxwZz11ZC5jb21taXRDYWxsYmFja3MscWc9aWcub25Db21taXRVbm1vdW50LHJnPUouUGxhY2VtZW50LHNnPUouVXBkYXRlLHRnPUouQ2FsbGJhY2ssdWc9Si5Db250ZW50UmVzZXQ7XG5mdW5jdGlvbiB2ZyhhLGIpe2Z1bmN0aW9uIGMoYSl7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpdHJ5e2MobnVsbCl9Y2F0Y2godCl7YihhLHQpfX1mdW5jdGlvbiBkKGEpe3JldHVybiBhLnRhZz09PWxnfHxhLnRhZz09PWtnfHxhLnRhZz09PW5nfWZ1bmN0aW9uIGUoYSl7Zm9yKHZhciBiPWE7OylpZihnKGIpLG51bGwhPT1iLmNoaWxkJiZiLnRhZyE9PW5nKWIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09YltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319ZnVuY3Rpb24gZihhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGY9dm9pZCAwOzspe2lmKCFjKXtjPWJbXCJyZXR1cm5cIl07YTpmb3IoOzspe251bGw9PT1jP3coXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSBsZzpkPVxuYy5zdGF0ZU5vZGU7Zj0hMTticmVhayBhO2Nhc2Uga2c6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIG5nOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9Yz1jW1wicmV0dXJuXCJdfWM9ITB9aWYoYi50YWc9PT1sZ3x8Yi50YWc9PT1tZyllKGIpLGY/QyhkLGIuc3RhdGVOb2RlKTpIKGQsYi5zdGF0ZU5vZGUpO2Vsc2UgaWYoYi50YWc9PT1uZz9kPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86ZyhiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZFtcInJldHVyblwiXT1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09YltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXTtiLnRhZz09PW5nJiYoYz0hMSl9Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fWZ1bmN0aW9uIGcoYSl7XCJmdW5jdGlvblwiPT09XG50eXBlb2YgcWcmJnFnKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSBqZzpjKGEpO3ZhciBkPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtkLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxkLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7YihhLHQpfWJyZWFrO2Nhc2UgbGc6YyhhKTticmVhaztjYXNlIG9nOmUoYS5zdGF0ZU5vZGUpO2JyZWFrO2Nhc2Ugbmc6ZihhKX19dmFyIGg9YS5jb21taXRNb3VudCxrPWEuY29tbWl0VXBkYXRlLHA9YS5yZXNldFRleHRDb250ZW50LHg9YS5jb21taXRUZXh0VXBkYXRlLFM9YS5hcHBlbmRDaGlsZCxEPWEuYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcix5PWEuaW5zZXJ0QmVmb3JlLEI9YS5pbnNlcnRJbkNvbnRhaW5lckJlZm9yZSxIPWEucmVtb3ZlQ2hpbGQsQz1hLnJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcixDYT1hLmdldFB1YmxpY0luc3RhbmNlO1xucmV0dXJue2NvbW1pdFBsYWNlbWVudDpmdW5jdGlvbihhKXthOntmb3IodmFyIGI9YVtcInJldHVyblwiXTtudWxsIT09Yjspe2lmKGQoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWJbXCJyZXR1cm5cIl19dyhcIjE2MFwiKTtjPXZvaWQgMH12YXIgZT1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgbGc6Yj1jLnN0YXRlTm9kZTtlPSExO2JyZWFrO2Nhc2Uga2c6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWs7Y2FzZSBuZzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhaztkZWZhdWx0OncoXCIxNjFcIil9Yy5lZmZlY3RUYWcmdWcmJihwKGIpLGMuZWZmZWN0VGFnJj1+dWcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jW1wicmV0dXJuXCJdfHxkKGNbXCJyZXR1cm5cIl0pKXtjPW51bGw7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yy5zaWJsaW5nW1wicmV0dXJuXCJdPWNbXCJyZXR1cm5cIl07Zm9yKGM9Yy5zaWJsaW5nO2MudGFnIT09XG5sZyYmYy50YWchPT1tZzspe2lmKGMuZWZmZWN0VGFnJnJnKWNvbnRpbnVlIGI7aWYobnVsbD09PWMuY2hpbGR8fGMudGFnPT09bmcpY29udGludWUgYjtlbHNlIGMuY2hpbGRbXCJyZXR1cm5cIl09YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyZyZykpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBmPWE7Oyl7aWYoZi50YWc9PT1sZ3x8Zi50YWc9PT1tZyljP2U/QihiLGYuc3RhdGVOb2RlLGMpOnkoYixmLnN0YXRlTm9kZSxjKTplP0QoYixmLnN0YXRlTm9kZSk6UyhiLGYuc3RhdGVOb2RlKTtlbHNlIGlmKGYudGFnIT09bmcmJm51bGwhPT1mLmNoaWxkKXtmLmNoaWxkW1wicmV0dXJuXCJdPWY7Zj1mLmNoaWxkO2NvbnRpbnVlfWlmKGY9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWYuc2libGluZzspe2lmKG51bGw9PT1mW1wicmV0dXJuXCJdfHxmW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Zj1mW1wicmV0dXJuXCJdfWYuc2libGluZ1tcInJldHVyblwiXT1mW1wicmV0dXJuXCJdO2Y9Zi5zaWJsaW5nfX0sXG5jb21taXREZWxldGlvbjpmdW5jdGlvbihhKXtmKGEpO2FbXCJyZXR1cm5cIl09bnVsbDthLmNoaWxkPW51bGw7YS5hbHRlcm5hdGUmJihhLmFsdGVybmF0ZS5jaGlsZD1udWxsLGEuYWx0ZXJuYXRlW1wicmV0dXJuXCJdPW51bGwpfSxjb21taXRXb3JrOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIGpnOmJyZWFrO2Nhc2UgbGc6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJmsoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgbWc6bnVsbD09PWIuc3RhdGVOb2RlP3coXCIxNjJcIik6dm9pZCAwO2M9Yi5tZW1vaXplZFByb3BzO3goYi5zdGF0ZU5vZGUsbnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmMsYyk7YnJlYWs7Y2FzZSBrZzpicmVhaztjYXNlIG5nOmJyZWFrO2RlZmF1bHQ6dyhcIjE2M1wiKX19LFxuY29tbWl0TGlmZUN5Y2xlczpmdW5jdGlvbihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSBqZzp2YXIgYz1iLnN0YXRlTm9kZTtpZihiLmVmZmVjdFRhZyZzZylpZihudWxsPT09YSljLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1hLm1lbW9pemVkUHJvcHM7YT1hLm1lbW9pemVkU3RhdGU7Yy5wcm9wcz1iLm1lbW9pemVkUHJvcHM7Yy5zdGF0ZT1iLm1lbW9pemVkU3RhdGU7Yy5jb21wb25lbnREaWRVcGRhdGUoZCxhKX1iLmVmZmVjdFRhZyZ0ZyYmbnVsbCE9PWIudXBkYXRlUXVldWUmJnBnKGIsYi51cGRhdGVRdWV1ZSxjKTticmVhaztjYXNlIGtnOmE9Yi51cGRhdGVRdWV1ZTtudWxsIT09YSYmcGcoYixhLGIuY2hpbGQmJmIuY2hpbGQuc3RhdGVOb2RlKTticmVhaztjYXNlIGxnOmM9Yi5zdGF0ZU5vZGU7bnVsbD09PWEmJmIuZWZmZWN0VGFnJnNnJiZoKGMsYi50eXBlLGIubWVtb2l6ZWRQcm9wcyxcbmIpO2JyZWFrO2Nhc2UgbWc6YnJlYWs7Y2FzZSBuZzpicmVhaztkZWZhdWx0OncoXCIxNjNcIil9fSxjb21taXRBdHRhY2hSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpe3ZhciBjPWEuc3RhdGVOb2RlO3N3aXRjaChhLnRhZyl7Y2FzZSBsZzpiKENhKGMpKTticmVhaztkZWZhdWx0OmIoYyl9fX0sY29tbWl0RGV0YWNoUmVmOmZ1bmN0aW9uKGEpe2E9YS5yZWY7bnVsbCE9PWEmJmEobnVsbCl9fX12YXIgd2c9eGQuY3JlYXRlQ3Vyc29yLHhnPXhkLnBvcCx5Zz14ZC5wdXNoLHpnPXt9O1xuZnVuY3Rpb24gQWcoYSl7ZnVuY3Rpb24gYihhKXthPT09emc/dyhcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9dmFyIGM9YS5nZXRDaGlsZEhvc3RDb250ZXh0LGQ9YS5nZXRSb290SG9zdENvbnRleHQsZT13Zyh6ZyksZj13Zyh6ZyksZz13Zyh6Zyk7cmV0dXJue2dldEhvc3RDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIGIoZS5jdXJyZW50KX0sZ2V0Um9vdEhvc3RDb250YWluZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYihnLmN1cnJlbnQpfSxwb3BIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKGEpe3hnKGUsYSk7eGcoZixhKTt4ZyhnLGEpfSxwb3BIb3N0Q29udGV4dDpmdW5jdGlvbihhKXtmLmN1cnJlbnQ9PT1hJiYoeGcoZSxhKSx4ZyhmLGEpKX0scHVzaEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSxiKXt5ZyhnLGIsYSk7Yj1kKGIpO3lnKGYsYSxhKTt5ZyhlLGIsYSl9LHB1c2hIb3N0Q29udGV4dDpmdW5jdGlvbihhKXt2YXIgZD1iKGcuY3VycmVudCksaD1iKGUuY3VycmVudCk7ZD1jKGgsYS50eXBlLFxuZCk7aCE9PWQmJih5ZyhmLGEsYSkseWcoZSxkLGEpKX0scmVzZXRIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKCl7ZS5jdXJyZW50PXpnO2cuY3VycmVudD16Z319fXZhciBCZz1FLkhvc3RDb21wb25lbnQsQ2c9RS5Ib3N0VGV4dCxEZz1FLkhvc3RSb290LEVnPUouRGVsZXRpb24sRmc9Si5QbGFjZW1lbnQsR2c9ZGUuY3JlYXRlRmliZXJGcm9tSG9zdEluc3RhbmNlRm9yRGVsZXRpb247XG5mdW5jdGlvbiBIZyhhKXtmdW5jdGlvbiBiKGEsYil7dmFyIGM9R2coKTtjLnN0YXRlTm9kZT1iO2NbXCJyZXR1cm5cIl09YTtjLmVmZmVjdFRhZz1FZztudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGMoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgQmc6cmV0dXJuIGYoYixhLnR5cGUsYS5wZW5kaW5nUHJvcHMpO2Nhc2UgQ2c6cmV0dXJuIGcoYixhLnBlbmRpbmdQcm9wcyk7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gZChhKXtmb3IoYT1hW1wicmV0dXJuXCJdO251bGwhPT1hJiZhLnRhZyE9PUJnJiZhLnRhZyE9PURnOylhPWFbXCJyZXR1cm5cIl07eT1hfXZhciBlPWEuc2hvdWxkU2V0VGV4dENvbnRlbnQsZj1hLmNhbkh5ZHJhdGVJbnN0YW5jZSxnPWEuY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSxoPWEuZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nLGs9YS5nZXRGaXJzdEh5ZHJhdGFibGVDaGlsZCxcbnA9YS5oeWRyYXRlSW5zdGFuY2UseD1hLmh5ZHJhdGVUZXh0SW5zdGFuY2UsUz1hLmRpZE5vdEh5ZHJhdGVJbnN0YW5jZSxEPWEuZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZTthPWEuZGlkTm90RmluZEh5ZHJhdGFibGVUZXh0SW5zdGFuY2U7aWYoIShmJiZnJiZoJiZrJiZwJiZ4JiZTJiZEJiZhKSlyZXR1cm57ZW50ZXJIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7fSx0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbigpe30scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbigpe3coXCIxNzVcIil9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7dyhcIjE3NlwiKX0scG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4hMX19O3ZhciB5PW51bGwsQj1udWxsLEg9ITE7cmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7Qj1cbmsoYS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7eT1hO3JldHVybiBIPSEwfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7Qj15PW51bGw7SD0hMX0sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oYSl7aWYoSCl7dmFyIGQ9QjtpZihkKXtpZighYyhhLGQpKXtkPWgoZCk7aWYoIWR8fCFjKGEsZCkpe2EuZWZmZWN0VGFnfD1GZztIPSExO3k9YTtyZXR1cm59Yih5LEIpfWEuc3RhdGVOb2RlPWQ7eT1hO0I9ayhkKX1lbHNlIGEuZWZmZWN0VGFnfD1GZyxIPSExLHk9YX19LHByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMpe2I9cChhLnN0YXRlTm9kZSxhLnR5cGUsYS5tZW1vaXplZFByb3BzLGIsYyxhKTthLnVwZGF0ZVF1ZXVlPWI7cmV0dXJuIG51bGwhPT1iPyEwOiExfSxwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4geChhLnN0YXRlTm9kZSxhLm1lbW9pemVkUHJvcHMsYSl9LFxucG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7aWYoYSE9PXkpcmV0dXJuITE7aWYoIUgpcmV0dXJuIGQoYSksSD0hMCwhMTt2YXIgYz1hLnR5cGU7aWYoYS50YWchPT1CZ3x8XCJoZWFkXCIhPT1jJiZcImJvZHlcIiE9PWMmJiFlKGMsYS5tZW1vaXplZFByb3BzKSlmb3IoYz1CO2M7KWIoYSxjKSxjPWgoYyk7ZChhKTtCPXk/aChhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH19fVxudmFyIElnPVIucG9wQ29udGV4dFByb3ZpZGVyLEpnPXhkLnJlc2V0LEtnPVFhLlJlYWN0Q3VycmVudE93bmVyLExnPWRlLmNyZWF0ZVdvcmtJblByb2dyZXNzLE1nPWRlLmxhcmdlclByaW9yaXR5LE5nPWlnLm9uQ29tbWl0Um9vdCxUPVEuTm9Xb3JrLE9nPVEuU3luY2hyb25vdXNQcmlvcml0eSxVPVEuVGFza1ByaW9yaXR5LFBnPVEuSGlnaFByaW9yaXR5LFFnPVEuTG93UHJpb3JpdHksUmc9US5PZmZzY3JlZW5Qcmlvcml0eSxTZz1QZC5Bc3luY1VwZGF0ZXMsVGc9Si5QZXJmb3JtZWRXb3JrLFVnPUouUGxhY2VtZW50LFZnPUouVXBkYXRlLFdnPUouUGxhY2VtZW50QW5kVXBkYXRlLFhnPUouRGVsZXRpb24sWWc9Si5Db250ZW50UmVzZXQsWmc9Si5DYWxsYmFjaywkZz1KLkVycixhaD1KLlJlZixiaD1FLkhvc3RSb290LGNoPUUuSG9zdENvbXBvbmVudCxkaD1FLkhvc3RQb3J0YWwsZWg9RS5DbGFzc0NvbXBvbmVudCxmaD11ZC5nZXRVcGRhdGVQcmlvcml0eSxnaD1SLnJlc2V0Q29udGV4dDtcbmZ1bmN0aW9uIGhoKGEpe2Z1bmN0aW9uIGIoKXtmb3IoO251bGwhPT1tYSYmbWEuY3VycmVudC5wZW5kaW5nV29ya1ByaW9yaXR5PT09VDspe21hLmlzU2NoZWR1bGVkPSExO3ZhciBhPW1hLm5leHRTY2hlZHVsZWRSb290O21hLm5leHRTY2hlZHVsZWRSb290PW51bGw7aWYobWE9PT16YilyZXR1cm4gemI9bWE9bnVsbCx6PVQsbnVsbDttYT1hfWE9bWE7Zm9yKHZhciBiPW51bGwsYz1UO251bGwhPT1hOylhLmN1cnJlbnQucGVuZGluZ1dvcmtQcmlvcml0eSE9PVQmJihjPT09VHx8Yz5hLmN1cnJlbnQucGVuZGluZ1dvcmtQcmlvcml0eSkmJihjPWEuY3VycmVudC5wZW5kaW5nV29ya1ByaW9yaXR5LGI9YSksYT1hLm5leHRTY2hlZHVsZWRSb290O251bGwhPT1iPyh6PWMsSmcoKSxnaCgpLHQoKSxJPUxnKGIuY3VycmVudCxjKSxiIT09bmMmJihvYz0wLG5jPWIpKTooej1ULG5jPUk9bnVsbCl9ZnVuY3Rpb24gYyhjKXtIZD0hMDtuYT1udWxsO3ZhciBkPWMuc3RhdGVOb2RlO2QuY3VycmVudD09PVxuYz93KFwiMTc3XCIpOnZvaWQgMDt6IT09T2cmJnohPT1VfHxvYysrO0tnLmN1cnJlbnQ9bnVsbDtpZihjLmVmZmVjdFRhZz5UZylpZihudWxsIT09Yy5sYXN0RWZmZWN0KXtjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jO3ZhciBlPWMuZmlyc3RFZmZlY3R9ZWxzZSBlPWM7ZWxzZSBlPWMuZmlyc3RFZmZlY3Q7VWkoKTtmb3IodT1lO251bGwhPT11Oyl7dmFyIGY9ITEsZz12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXU7KXt2YXIgaD11LmVmZmVjdFRhZztoJllnJiZhLnJlc2V0VGV4dENvbnRlbnQodS5zdGF0ZU5vZGUpO2lmKGgmYWgpe3ZhciBrPXUuYWx0ZXJuYXRlO251bGwhPT1rJiZQaChrKX1zd2l0Y2goaCZ+KFpnfCRnfFlnfGFofFRnKSl7Y2FzZSBVZzpxKHUpO3UuZWZmZWN0VGFnJj1+VWc7YnJlYWs7Y2FzZSBXZzpxKHUpO3UuZWZmZWN0VGFnJj1+VWc7dmYodS5hbHRlcm5hdGUsdSk7YnJlYWs7Y2FzZSBWZzp2Zih1LmFsdGVybmF0ZSx1KTticmVhaztjYXNlIFhnOklkPSEwLE1oKHUpLFxuSWQ9ITF9dT11Lm5leHRFZmZlY3R9fWNhdGNoKEpkKXtmPSEwLGc9SmR9ZiYmKG51bGw9PT11P3coXCIxNzhcIik6dm9pZCAwLHgodSxnKSxudWxsIT09dSYmKHU9dS5uZXh0RWZmZWN0KSl9VmkoKTtkLmN1cnJlbnQ9Yztmb3IodT1lO251bGwhPT11Oyl7ZD0hMTtlPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dTspe3ZhciBHZD11LmVmZmVjdFRhZztHZCYoVmd8WmcpJiZOaCh1LmFsdGVybmF0ZSx1KTtHZCZhaCYmT2godSk7aWYoR2QmJGcpc3dpdGNoKGY9dSxnPXZvaWQgMCxudWxsIT09UCYmKGc9UC5nZXQoZiksUFtcImRlbGV0ZVwiXShmKSxudWxsPT1nJiZudWxsIT09Zi5hbHRlcm5hdGUmJihmPWYuYWx0ZXJuYXRlLGc9UC5nZXQoZiksUFtcImRlbGV0ZVwiXShmKSkpLG51bGw9PWc/dyhcIjE4NFwiKTp2b2lkIDAsZi50YWcpe2Nhc2UgZWg6Zi5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2goZy5lcnJvcix7Y29tcG9uZW50U3RhY2s6Zy5jb21wb25lbnRTdGFja30pO2JyZWFrO2Nhc2UgYmg6bnVsbD09PVxuSmEmJihKYT1nLmVycm9yKTticmVhaztkZWZhdWx0OncoXCIxNTdcIil9dmFyIG09dS5uZXh0RWZmZWN0O3UubmV4dEVmZmVjdD1udWxsO3U9bX19Y2F0Y2goSmQpe2Q9ITAsZT1KZH1kJiYobnVsbD09PXU/dyhcIjE3OFwiKTp2b2lkIDAseCh1LGUpLG51bGwhPT11JiYodT11Lm5leHRFZmZlY3QpKX1IZD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTmcmJk5nKGMuc3RhdGVOb2RlKTt2YSYmKHZhLmZvckVhY2goSCksdmE9bnVsbCk7YigpfWZ1bmN0aW9uIGQoYSl7Zm9yKDs7KXt2YXIgYj1MaChhLmFsdGVybmF0ZSxhLHopLGM9YVtcInJldHVyblwiXSxkPWEuc2libGluZzt2YXIgZT1hO2lmKCEoZS5wZW5kaW5nV29ya1ByaW9yaXR5IT09VCYmZS5wZW5kaW5nV29ya1ByaW9yaXR5PnopKXtmb3IodmFyIGY9ZmgoZSksZz1lLmNoaWxkO251bGwhPT1nOylmPU1nKGYsZy5wZW5kaW5nV29ya1ByaW9yaXR5KSxnPWcuc2libGluZztlLnBlbmRpbmdXb3JrUHJpb3JpdHk9Zn1pZihudWxsIT09YilyZXR1cm4gYjtcbm51bGwhPT1jJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksYS5lZmZlY3RUYWc+VGcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSk7aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2V7bmE9YTticmVha319cmV0dXJuIG51bGx9ZnVuY3Rpb24gZShhKXt2YXIgYj1WKGEuYWx0ZXJuYXRlLGEseik7bnVsbD09PWImJihiPWQoYSkpO0tnLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1mdW5jdGlvbiBmKGEpe3ZhciBiPWxkKGEuYWx0ZXJuYXRlLGEseik7bnVsbD09PWImJihiPWQoYSkpO0tnLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSl7cChSZyxhKX1mdW5jdGlvbiBoKCl7aWYobnVsbCE9PVAmJjA8UC5zaXplJiZ6PT09VSlmb3IoO251bGwhPT1JOyl7dmFyIGE9STtJPW51bGwhPT1QJiYoUC5oYXMoYSl8fG51bGwhPT1hLmFsdGVybmF0ZSYmUC5oYXMoYS5hbHRlcm5hdGUpKT9mKEkpOmUoSSk7aWYobnVsbD09PUkmJihudWxsPT09bmE/dyhcIjE3OVwiKTp2b2lkIDAsTz1VLGMobmEpLE89eixudWxsPT09UHx8MD09PVAuc2l6ZXx8eiE9PVUpKWJyZWFrfX1mdW5jdGlvbiBrKGEsZCl7bnVsbCE9PW5hPyhPPVUsYyhuYSksaCgpKTpudWxsPT09SSYmYigpO2lmKCEoej09PVR8fHo+YSkpe089ejthOmRve2lmKHo8PVUpZm9yKDtudWxsIT09SSYmIShJPWUoSSksbnVsbD09PUkmJihudWxsPT09bmE/dyhcIjE3OVwiKTp2b2lkIDAsTz1VLGMobmEpLE89eixoKCksej09PVR8fHo+YXx8ej5VKSk7KTtlbHNlIGlmKG51bGwhPT1kKWZvcig7bnVsbCE9PUkmJiFBYjspaWYoMTxkLnRpbWVSZW1haW5pbmcoKSl7aWYoST1cbmUoSSksbnVsbD09PUkpaWYobnVsbD09PW5hP3coXCIxNzlcIik6dm9pZCAwLDE8ZC50aW1lUmVtYWluaW5nKCkpe2lmKE89VSxjKG5hKSxPPXosaCgpLHo9PT1UfHx6PmF8fHo8UGcpYnJlYWt9ZWxzZSBBYj0hMH1lbHNlIEFiPSEwO3N3aXRjaCh6KXtjYXNlIE9nOmNhc2UgVTppZih6PD1hKWNvbnRpbnVlIGE7YnJlYWsgYTtjYXNlIFBnOmNhc2UgUWc6Y2FzZSBSZzppZihudWxsPT09ZClicmVhayBhO2lmKCFBYiYmejw9YSljb250aW51ZSBhO2JyZWFrIGE7Y2FzZSBUOmJyZWFrIGE7ZGVmYXVsdDp3KFwiMTgxXCIpfX13aGlsZSgxKX19ZnVuY3Rpb24gcChhLGIpe0RhP3coXCIxODJcIik6dm9pZCAwO0RhPSEwO3ZhciBjPU8sZD0hMSxlPW51bGw7dHJ5e2soYSxiKX1jYXRjaChLZCl7ZD0hMCxlPUtkfWZvcig7ZDspe2lmKFlhKXtKYT1lO2JyZWFrfXZhciBoPUk7aWYobnVsbD09PWgpWWE9ITA7ZWxzZXt2YXIgcD14KGgsZSk7bnVsbD09PXA/dyhcIjE4M1wiKTp2b2lkIDA7aWYoIVlhKXt0cnl7ZD1cbnA7ZT1hO3A9Yjtmb3IodmFyIHE9ZDtudWxsIT09aDspe3N3aXRjaChoLnRhZyl7Y2FzZSBlaDpJZyhoKTticmVhaztjYXNlIGNoOm0oaCk7YnJlYWs7Y2FzZSBiaDpyKGgpO2JyZWFrO2Nhc2UgZGg6cihoKX1pZihoPT09cXx8aC5hbHRlcm5hdGU9PT1xKWJyZWFrO2g9aFtcInJldHVyblwiXX1JPWYoZCk7ayhlLHApfWNhdGNoKEtkKXtkPSEwO2U9S2Q7Y29udGludWV9YnJlYWt9fX1PPWM7bnVsbCE9PWImJihCYj0hMSk7ej5VJiYhQmImJigkZihnKSxCYj0hMCk7YT1KYTtZYT1BYj1EYT0hMTtuYz1LYT1QPUphPW51bGw7b2M9MDtpZihudWxsIT09YSl0aHJvdyBhO31mdW5jdGlvbiB4KGEsYil7dmFyIGM9S2cuY3VycmVudD1udWxsLGQ9ITEsZT0hMSxmPW51bGw7aWYoYS50YWc9PT1iaCljPWEsUyhhKSYmKFlhPSEwKTtlbHNlIGZvcih2YXIgZz1hW1wicmV0dXJuXCJdO251bGwhPT1nJiZudWxsPT09Yzspe2cudGFnPT09ZWg/XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuc3RhdGVOb2RlLmNvbXBvbmVudERpZENhdGNoJiZcbihkPSEwLGY9UmEoZyksYz1nLGU9ITApOmcudGFnPT09YmgmJihjPWcpO2lmKFMoZykpe2lmKElkfHxudWxsIT09dmEmJih2YS5oYXMoZyl8fG51bGwhPT1nLmFsdGVybmF0ZSYmdmEuaGFzKGcuYWx0ZXJuYXRlKSkpcmV0dXJuIG51bGw7Yz1udWxsO2U9ITF9Zz1nW1wicmV0dXJuXCJdfWlmKG51bGwhPT1jKXtudWxsPT09S2EmJihLYT1uZXcgU2V0KTtLYS5hZGQoYyk7dmFyIGg9XCJcIjtnPWE7ZG97YTpzd2l0Y2goZy50YWcpe2Nhc2UgZmU6Y2FzZSBnZTpjYXNlIGhlOmNhc2UgaWU6dmFyIGs9Zy5fZGVidWdPd25lcixtPWcuX2RlYnVnU291cmNlO3ZhciBwPVJhKGcpO3ZhciBxPW51bGw7ayYmKHE9UmEoaykpO2s9bTtwPVwiXFxuICAgIGluIFwiKyhwfHxcIlVua25vd25cIikrKGs/XCIgKGF0IFwiK2suZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLyxcIlwiKStcIjpcIitrLmxpbmVOdW1iZXIrXCIpXCI6cT9cIiAoY3JlYXRlZCBieSBcIitxK1wiKVwiOlwiXCIpO2JyZWFrIGE7ZGVmYXVsdDpwPVwiXCJ9aCs9cDtnPWdbXCJyZXR1cm5cIl19d2hpbGUoZyk7XG5nPWg7YT1SYShhKTtudWxsPT09UCYmKFA9bmV3IE1hcCk7Yj17Y29tcG9uZW50TmFtZTphLGNvbXBvbmVudFN0YWNrOmcsZXJyb3I6YixlcnJvckJvdW5kYXJ5OmQ/Yy5zdGF0ZU5vZGU6bnVsbCxlcnJvckJvdW5kYXJ5Rm91bmQ6ZCxlcnJvckJvdW5kYXJ5TmFtZTpmLHdpbGxSZXRyeTplfTtQLnNldChjLGIpO3RyeXtjb25zb2xlLmVycm9yKGIuZXJyb3IpfWNhdGNoKFdpKXtjb25zb2xlLmVycm9yKFdpKX1IZD8obnVsbD09PXZhJiYodmE9bmV3IFNldCksdmEuYWRkKGMpKTpIKGMpO3JldHVybiBjfW51bGw9PT1KYSYmKEphPWIpO3JldHVybiBudWxsfWZ1bmN0aW9uIFMoYSl7cmV0dXJuIG51bGwhPT1LYSYmKEthLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZLYS5oYXMoYS5hbHRlcm5hdGUpKX1mdW5jdGlvbiBEKGEsYil7cmV0dXJuIHkoYSxiLCExKX1mdW5jdGlvbiB5KGEsYil7b2M+WGkmJihZYT0hMCx3KFwiMTg1XCIpKTshRGEmJmI8PXomJihJPW51bGwpO2Zvcih2YXIgYz1cbiEwO251bGwhPT1hJiZjOyl7Yz0hMTtpZihhLnBlbmRpbmdXb3JrUHJpb3JpdHk9PT1UfHxhLnBlbmRpbmdXb3JrUHJpb3JpdHk+YiljPSEwLGEucGVuZGluZ1dvcmtQcmlvcml0eT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKGEuYWx0ZXJuYXRlLnBlbmRpbmdXb3JrUHJpb3JpdHk9PT1UfHxhLmFsdGVybmF0ZS5wZW5kaW5nV29ya1ByaW9yaXR5PmIpJiYoYz0hMCxhLmFsdGVybmF0ZS5wZW5kaW5nV29ya1ByaW9yaXR5PWIpO2lmKG51bGw9PT1hW1wicmV0dXJuXCJdKWlmKGEudGFnPT09Ymgpe3ZhciBkPWEuc3RhdGVOb2RlO2I9PT1UfHxkLmlzU2NoZWR1bGVkfHwoZC5pc1NjaGVkdWxlZD0hMCx6Yj96Yi5uZXh0U2NoZWR1bGVkUm9vdD1kOm1hPWQsemI9ZCk7aWYoIURhKXN3aXRjaChiKXtjYXNlIE9nOnBjP3AoT2csbnVsbCk6cChVLG51bGwpO2JyZWFrO2Nhc2UgVTpXP3ZvaWQgMDp3KFwiMTg2XCIpO2JyZWFrO2RlZmF1bHQ6QmJ8fCgkZihnKSxCYj0hMCl9fWVsc2UgYnJlYWs7YT1hW1wicmV0dXJuXCJdfX1cbmZ1bmN0aW9uIEIoYSxiKXt2YXIgYz1PO2M9PT1UJiYoYz0hWWl8fGEuaW50ZXJuYWxDb250ZXh0VGFnJlNnfHxiP1FnOk9nKTtyZXR1cm4gYz09PU9nJiYoRGF8fFcpP1U6Y31mdW5jdGlvbiBIKGEpe3koYSxVLCEwKX12YXIgQz1BZyhhKSxDYT1IZyhhKSxyPUMucG9wSG9zdENvbnRhaW5lcixtPUMucG9wSG9zdENvbnRleHQsdD1DLnJlc2V0SG9zdENvbnRhaW5lcix2PUxmKGEsQyxDYSxELEIpLFY9di5iZWdpbldvcmssbGQ9di5iZWdpbkZhaWxlZFdvcmssTGg9ZWcoYSxDLENhKS5jb21wbGV0ZVdvcms7Qz12ZyhhLHgpO3ZhciBxPUMuY29tbWl0UGxhY2VtZW50LE1oPUMuY29tbWl0RGVsZXRpb24sdmY9Qy5jb21taXRXb3JrLE5oPUMuY29tbWl0TGlmZUN5Y2xlcyxPaD1DLmNvbW1pdEF0dGFjaFJlZixQaD1DLmNvbW1pdERldGFjaFJlZiwkZj1hLnNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjayxZaT1hLnVzZVN5bmNTY2hlZHVsaW5nLFVpPWEucHJlcGFyZUZvckNvbW1pdCxWaT1hLnJlc2V0QWZ0ZXJDb21taXQsXG5PPVQsRGE9ITEsQWI9ITEsVz0hMSxwYz0hMSxJPW51bGwsej1ULHU9bnVsbCxuYT1udWxsLG1hPW51bGwsemI9bnVsbCxCYj0hMSxQPW51bGwsS2E9bnVsbCx2YT1udWxsLEphPW51bGwsWWE9ITEsSGQ9ITEsSWQ9ITEsWGk9MUUzLG9jPTAsbmM9bnVsbDtyZXR1cm57c2NoZWR1bGVVcGRhdGU6RCxnZXRQcmlvcml0eUNvbnRleHQ6QixiYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhLGIpe3ZhciBjPVc7Vz0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsRGF8fFd8fHAoVSxudWxsKX19LHVuYmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7dmFyIGI9cGMsYz1XO3BjPVc7Vz0hMTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1c9YyxwYz1ifX0sZmx1c2hTeW5jOmZ1bmN0aW9uKGEpe3ZhciBiPVcsYz1PO1c9ITA7Tz1PZzt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1c9YixPPWMsRGE/dyhcIjE4N1wiKTp2b2lkIDAscChVLG51bGwpfX0sZGVmZXJyZWRVcGRhdGVzOmZ1bmN0aW9uKGEpe3ZhciBiPVxuTztPPVFnO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Tz1ifX19fWZ1bmN0aW9uIGloKCl7dyhcIjE5NlwiKX1mdW5jdGlvbiBqaChhKXtpZighYSlyZXR1cm4gZGE7YT1QYS5nZXQoYSk7cmV0dXJuXCJudW1iZXJcIj09PXR5cGVvZiBhLnRhZz9paChhKTphLl9wcm9jZXNzQ2hpbGRDb250ZXh0KGEuX2NvbnRleHQpfWpoLl9pbmplY3RGaWJlcj1mdW5jdGlvbihhKXtpaD1hfTt2YXIga2g9dWQuYWRkVG9wTGV2ZWxVcGRhdGUsbGg9Ui5maW5kQ3VycmVudFVubWFza2VkQ29udGV4dCxtaD1SLmlzQ29udGV4dFByb3ZpZGVyLG5oPVIucHJvY2Vzc0NoaWxkQ29udGV4dCxvaD1FLkhvc3RDb21wb25lbnQscGg9YmIuZmluZEN1cnJlbnRIb3N0RmliZXIscWg9YmIuZmluZEN1cnJlbnRIb3N0RmliZXJXaXRoTm9Qb3J0YWxzO2poLl9pbmplY3RGaWJlcihmdW5jdGlvbihhKXt2YXIgYj1saChhKTtyZXR1cm4gbWgoYSk/bmgoYSxiLCExKTpifSk7dmFyIHJoPUYuVEVYVF9OT0RFO1xuZnVuY3Rpb24gc2goYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHRoKGEsYil7dmFyIGM9c2goYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoYy5ub2RlVHlwZT09PXJoKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXNoKGMpfX12YXIgdWg9bnVsbDtmdW5jdGlvbiB2aCgpeyF1aCYmbC5jYW5Vc2VET00mJih1aD1cInRleHRDb250ZW50XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ/XCJ0ZXh0Q29udGVudFwiOlwiaW5uZXJUZXh0XCIpO3JldHVybiB1aH1cbnZhciB3aD17Z2V0T2Zmc2V0czpmdW5jdGlvbihhKXt2YXIgYj13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7aWYoIWJ8fDA9PT1iLnJhbmdlQ291bnQpcmV0dXJuIG51bGw7dmFyIGM9Yi5hbmNob3JOb2RlLGQ9Yi5hbmNob3JPZmZzZXQsZT1iLmZvY3VzTm9kZSxmPWIuZm9jdXNPZmZzZXQsZz1iLmdldFJhbmdlQXQoMCk7dHJ5e2cuc3RhcnRDb250YWluZXIubm9kZVR5cGUsZy5lbmRDb250YWluZXIubm9kZVR5cGV9Y2F0Y2goayl7cmV0dXJuIG51bGx9Yj1iLmFuY2hvck5vZGU9PT1iLmZvY3VzTm9kZSYmYi5hbmNob3JPZmZzZXQ9PT1iLmZvY3VzT2Zmc2V0PzA6Zy50b1N0cmluZygpLmxlbmd0aDt2YXIgaD1nLmNsb25lUmFuZ2UoKTtoLnNlbGVjdE5vZGVDb250ZW50cyhhKTtoLnNldEVuZChnLnN0YXJ0Q29udGFpbmVyLGcuc3RhcnRPZmZzZXQpO2E9aC5zdGFydENvbnRhaW5lcj09PWguZW5kQ29udGFpbmVyJiZoLnN0YXJ0T2Zmc2V0PT09aC5lbmRPZmZzZXQ/XG4wOmgudG9TdHJpbmcoKS5sZW5ndGg7Zz1hK2I7Yj1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO2Iuc2V0U3RhcnQoYyxkKTtiLnNldEVuZChlLGYpO2M9Yi5jb2xsYXBzZWQ7cmV0dXJue3N0YXJ0OmM/ZzphLGVuZDpjP2E6Z319LHNldE9mZnNldHM6ZnVuY3Rpb24oYSxiKXtpZih3aW5kb3cuZ2V0U2VsZWN0aW9uKXt2YXIgYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksZD1hW3ZoKCldLmxlbmd0aCxlPU1hdGgubWluKGIuc3RhcnQsZCk7Yj12b2lkIDA9PT1iLmVuZD9lOk1hdGgubWluKGIuZW5kLGQpOyFjLmV4dGVuZCYmZT5iJiYoZD1iLGI9ZSxlPWQpO2Q9dGgoYSxlKTthPXRoKGEsYik7aWYoZCYmYSl7dmFyIGY9ZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtmLnNldFN0YXJ0KGQubm9kZSxkLm9mZnNldCk7Yy5yZW1vdmVBbGxSYW5nZXMoKTtlPmI/KGMuYWRkUmFuZ2UoZiksYy5leHRlbmQoYS5ub2RlLGEub2Zmc2V0KSk6KGYuc2V0RW5kKGEubm9kZSxhLm9mZnNldCksYy5hZGRSYW5nZShmKSl9fX19LFxueGg9Ri5FTEVNRU5UX05PREUseWg9e2hhc1NlbGVjdGlvbkNhcGFiaWxpdGllczpmdW5jdGlvbihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiZcInRleHRcIj09PWEudHlwZXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9LGdldFNlbGVjdGlvbkluZm9ybWF0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9aWEoKTtyZXR1cm57Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTp5aC5oYXNTZWxlY3Rpb25DYXBhYmlsaXRpZXMoYSk/eWguZ2V0U2VsZWN0aW9uKGEpOm51bGx9fSxyZXN0b3JlU2VsZWN0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPWlhKCksYz1hLmZvY3VzZWRFbGVtO2E9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmZmEoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXt5aC5oYXNTZWxlY3Rpb25DYXBhYmlsaXRpZXMoYykmJnloLnNldFNlbGVjdGlvbihjLGEpO2I9XG5bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOylhLm5vZGVUeXBlPT09eGgmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO2hhKGMpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX0sZ2V0U2VsZWN0aW9uOmZ1bmN0aW9uKGEpe3JldHVybihcInNlbGVjdGlvblN0YXJ0XCJpbiBhP3tzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH06d2guZ2V0T2Zmc2V0cyhhKSl8fHtzdGFydDowLGVuZDowfX0sc2V0U2VsZWN0aW9uOmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5zdGFydCxkPWIuZW5kO3ZvaWQgMD09PWQmJihkPWMpO1wic2VsZWN0aW9uU3RhcnRcImluIGE/KGEuc2VsZWN0aW9uU3RhcnQ9YyxhLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihkLGEudmFsdWUubGVuZ3RoKSk6d2guc2V0T2Zmc2V0cyhhLGIpfX0semg9eWgsXG5BaD1GLkVMRU1FTlRfTk9ERTtmdW5jdGlvbiBCaCgpe3coXCIyMTFcIil9ZnVuY3Rpb24gQ2goKXt3KFwiMjEyXCIpfWZ1bmN0aW9uIERoKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoYS5ub2RlVHlwZT09PUFoKXJldHVybiBhO3ZhciBiPVBhLmdldChhKTtpZihiKXJldHVyblwibnVtYmVyXCI9PT10eXBlb2YgYi50YWc/QmgoYik6Q2goYik7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP3coXCIxODhcIik6dyhcIjIxM1wiLE9iamVjdC5rZXlzKGEpKX1EaC5faW5qZWN0RmliZXI9ZnVuY3Rpb24oYSl7Qmg9YX07RGguX2luamVjdFN0YWNrPWZ1bmN0aW9uKGEpe0NoPWF9O3ZhciBFaD1FLkhvc3RDb21wb25lbnQ7ZnVuY3Rpb24gRmgoYSl7aWYodm9pZCAwIT09YS5faG9zdFBhcmVudClyZXR1cm4gYS5faG9zdFBhcmVudDtpZihcIm51bWJlclwiPT09dHlwZW9mIGEudGFnKXtkbyBhPWFbXCJyZXR1cm5cIl07d2hpbGUoYSYmYS50YWchPT1FaCk7aWYoYSlyZXR1cm4gYX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIEdoKGEsYil7Zm9yKHZhciBjPTAsZD1hO2Q7ZD1GaChkKSljKys7ZD0wO2Zvcih2YXIgZT1iO2U7ZT1GaChlKSlkKys7Zm9yKDswPGMtZDspYT1GaChhKSxjLS07Zm9yKDswPGQtYzspYj1GaChiKSxkLS07Zm9yKDtjLS07KXtpZihhPT09Ynx8YT09PWIuYWx0ZXJuYXRlKXJldHVybiBhO2E9RmgoYSk7Yj1GaChiKX1yZXR1cm4gbnVsbH1cbnZhciBIaD17aXNBbmNlc3RvcjpmdW5jdGlvbihhLGIpe2Zvcig7Yjspe2lmKGE9PT1ifHxhPT09Yi5hbHRlcm5hdGUpcmV0dXJuITA7Yj1GaChiKX1yZXR1cm4hMX0sZ2V0TG93ZXN0Q29tbW9uQW5jZXN0b3I6R2gsZ2V0UGFyZW50SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIEZoKGEpfSx0cmF2ZXJzZVR3b1BoYXNlOmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9W107YTspZC5wdXNoKGEpLGE9RmgoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9LHRyYXZlcnNlRW50ZXJMZWF2ZTpmdW5jdGlvbihhLGIsYyxkLGUpe2Zvcih2YXIgZj1hJiZiP0doKGEsYik6bnVsbCxnPVtdO2EmJmEhPT1mOylnLnB1c2goYSksYT1GaChhKTtmb3IoYT1bXTtiJiZiIT09ZjspYS5wdXNoKGIpLGI9RmgoYik7Zm9yKGI9MDtiPGcubGVuZ3RoO2IrKyljKGdbYl0sXCJidWJibGVkXCIsZCk7Zm9yKGI9XG5hLmxlbmd0aDswPGItLTspYyhhW2JdLFwiY2FwdHVyZWRcIixlKX19LEloPUpiLmdldExpc3RlbmVyO2Z1bmN0aW9uIEpoKGEsYixjKXtpZihiPUloKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9Q2IoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9Q2IoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gS2goYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyYmSGgudHJhdmVyc2VUd29QaGFzZShhLl90YXJnZXRJbnN0LEpoLGEpfWZ1bmN0aW9uIFFoKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe3ZhciBiPWEuX3RhcmdldEluc3Q7Yj1iP0hoLmdldFBhcmVudEluc3RhbmNlKGIpOm51bGw7SGgudHJhdmVyc2VUd29QaGFzZShiLEpoLGEpfX1cbmZ1bmN0aW9uIFJoKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUloKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1DYihjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1DYihjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gU2goYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZSaChhLl90YXJnZXRJbnN0LG51bGwsYSl9XG52YXIgVGg9e2FjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXM6ZnVuY3Rpb24oYSl7RGIoYSxLaCl9LGFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0OmZ1bmN0aW9uKGEpe0RiKGEsUWgpfSxhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlczpmdW5jdGlvbihhKXtEYihhLFNoKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOmZ1bmN0aW9uKGEsYixjLGQpe0hoLnRyYXZlcnNlRW50ZXJMZWF2ZShjLGQsUmgsYSxiKX19LFg9e19yb290Om51bGwsX3N0YXJ0VGV4dDpudWxsLF9mYWxsYmFja1RleHQ6bnVsbH0sVWg9e2luaXRpYWxpemU6ZnVuY3Rpb24oYSl7WC5fcm9vdD1hO1guX3N0YXJ0VGV4dD1VaC5nZXRUZXh0KCk7cmV0dXJuITB9LHJlc2V0OmZ1bmN0aW9uKCl7WC5fcm9vdD1udWxsO1guX3N0YXJ0VGV4dD1udWxsO1guX2ZhbGxiYWNrVGV4dD1udWxsfSxnZXREYXRhOmZ1bmN0aW9uKCl7aWYoWC5fZmFsbGJhY2tUZXh0KXJldHVybiBYLl9mYWxsYmFja1RleHQ7XG52YXIgYSxiPVguX3N0YXJ0VGV4dCxjPWIubGVuZ3RoLGQsZT1VaC5nZXRUZXh0KCksZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtYLl9mYWxsYmFja1RleHQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKTtyZXR1cm4gWC5fZmFsbGJhY2tUZXh0fSxnZXRUZXh0OmZ1bmN0aW9uKCl7cmV0dXJuXCJ2YWx1ZVwiaW4gWC5fcm9vdD9YLl9yb290LnZhbHVlOlguX3Jvb3RbdmgoKV19fSxWaD1VaCxXaD1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLFhoPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpjYS50aGF0UmV0dXJuc051bGwsZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxcbmNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gWShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/Y2EudGhhdFJldHVybnNUcnVlOmNhLnRoYXRSZXR1cm5zRmFsc2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jYS50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxubihZLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNhLnRoYXRSZXR1cm5zVHJ1ZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jYS50aGF0UmV0dXJuc1RydWUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9Y2EudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6Y2EudGhhdFJldHVybnNGYWxzZSxcbmRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxiO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO2ZvcihhPTA7YTxXaC5sZW5ndGg7YSsrKXRoaXNbV2hbYV1dPW51bGx9fSk7WS5JbnRlcmZhY2U9WGg7WS5hdWdtZW50Q2xhc3M9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKCl7fWMucHJvdG90eXBlPXRoaXMucHJvdG90eXBlO3ZhciBkPW5ldyBjO24oZCxhLnByb3RvdHlwZSk7YS5wcm90b3R5cGU9ZDthLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hO2EuSW50ZXJmYWNlPW4oe30sdGhpcy5JbnRlcmZhY2UsYik7YS5hdWdtZW50Q2xhc3M9dGhpcy5hdWdtZW50Q2xhc3M7WWgoYSl9O1loKFkpO2Z1bmN0aW9uIFpoKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gJGgoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOncoXCIyMjNcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIFloKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPVpoO2EucmVsZWFzZT0kaH1mdW5jdGlvbiBhaShhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9WS5hdWdtZW50Q2xhc3MoYWkse2RhdGE6bnVsbH0pO2Z1bmN0aW9uIGJpKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1ZLmF1Z21lbnRDbGFzcyhiaSx7ZGF0YTpudWxsfSk7dmFyIGNpPVs5LDEzLDI3LDMyXSxkaT1sLmNhblVzZURPTSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csZWk9bnVsbDtsLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoZWk9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgZmk7XG5pZihmaT1sLmNhblVzZURPTSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWVpKXt2YXIgZ2k9d2luZG93Lm9wZXJhO2ZpPSEoXCJvYmplY3RcIj09PXR5cGVvZiBnaSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGdpLnZlcnNpb24mJjEyPj1wYXJzZUludChnaS52ZXJzaW9uKCksMTApKX1cbnZhciBoaT1maSxpaT1sLmNhblVzZURPTSYmKCFkaXx8ZWkmJjg8ZWkmJjExPj1laSksamk9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksa2k9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJ0b3BDb21wb3NpdGlvbkVuZFwiLFwidG9wS2V5UHJlc3NcIixcInRvcFRleHRJbnB1dFwiLFwidG9wUGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25FbmQgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblN0YXJ0IHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uVXBkYXRlIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfX0sbGk9ITE7XG5mdW5jdGlvbiBtaShhLGIpe3N3aXRjaChhKXtjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4tMSE9PWNpLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwidG9wS2V5RG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcInRvcEtleVByZXNzXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BCbHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gbmkoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgb2k9ITE7ZnVuY3Rpb24gcGkoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6cmV0dXJuIG5pKGIpO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtsaT0hMDtyZXR1cm4gamk7Y2FzZSBcInRvcFRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09amkmJmxpP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHFpKGEsYil7aWYob2kpcmV0dXJuXCJ0b3BDb21wb3NpdGlvbkVuZFwiPT09YXx8IWRpJiZtaShhLGIpPyhhPVZoLmdldERhdGEoKSxWaC5yZXNldCgpLG9pPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BQYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiBpaT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciByaT17ZXZlbnRUeXBlczpraSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGRpKWI6e3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25TdGFydFwiOnZhciBmPWtpLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpmPWtpLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcInRvcENvbXBvc2l0aW9uVXBkYXRlXCI6Zj1raS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugb2k/bWkoYSxjKSYmKGY9a2kuY29tcG9zaXRpb25FbmQpOlwidG9wS2V5RG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1raS5jb21wb3NpdGlvblN0YXJ0KTtmPyhpaSYmKG9pfHxmIT09a2kuY29tcG9zaXRpb25TdGFydD9mPT09a2kuY29tcG9zaXRpb25FbmQmJm9pJiYoZT1WaC5nZXREYXRhKCkpOm9pPVZoLmluaXRpYWxpemUoZCkpLGY9YWkuZ2V0UG9vbGVkKGYsYixjLGQpLGU/Zi5kYXRhPWU6KGU9bmkoYyksXG5udWxsIT09ZSYmKGYuZGF0YT1lKSksVGguYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhmKSxlPWYpOmU9bnVsbDsoYT1oaT9waShhLGMpOnFpKGEsYykpPyhiPWJpLmdldFBvb2xlZChraS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsVGguYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhiKSk6Yj1udWxsO3JldHVybltlLGJdfX0sc2k9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gdGkoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFzaVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgdWk9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ2hhbmdlIHRvcENsaWNrIHRvcEZvY3VzIHRvcElucHV0IHRvcEtleURvd24gdG9wS2V5VXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gdmkoYSxiLGMpe2E9WS5nZXRQb29sZWQodWkuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtuYi5lbnF1ZXVlU3RhdGVSZXN0b3JlKGMpO1RoLmFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMoYSk7cmV0dXJuIGF9dmFyIHdpPW51bGwseGk9bnVsbDtmdW5jdGlvbiB5aShhKXtKYi5lbnF1ZXVlRXZlbnRzKGEpO0piLnByb2Nlc3NFdmVudFF1ZXVlKCExKX1cbmZ1bmN0aW9uIHppKGEpe3ZhciBiPUcuZ2V0Tm9kZUZyb21JbnN0YW5jZShhKTtpZihCYy51cGRhdGVWYWx1ZUlmQ2hhbmdlZChiKSlyZXR1cm4gYX1mdW5jdGlvbiBBaShhLGIpe2lmKFwidG9wQ2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBCaT0hMTtsLmNhblVzZURPTSYmKEJpPUxiKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIENpKCl7d2kmJih3aS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixEaSkseGk9d2k9bnVsbCl9ZnVuY3Rpb24gRGkoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnppKHhpKSYmKGE9dmkoeGksYSx1YihhKSksc2IuYmF0Y2hlZFVwZGF0ZXMoeWksYSkpfWZ1bmN0aW9uIEVpKGEsYixjKXtcInRvcEZvY3VzXCI9PT1hPyhDaSgpLHdpPWIseGk9Yyx3aS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixEaSkpOlwidG9wQmx1clwiPT09YSYmQ2koKX1cbmZ1bmN0aW9uIEZpKGEpe2lmKFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI9PT1hfHxcInRvcEtleVVwXCI9PT1hfHxcInRvcEtleURvd25cIj09PWEpcmV0dXJuIHppKHhpKX1mdW5jdGlvbiBHaShhLGIpe2lmKFwidG9wQ2xpY2tcIj09PWEpcmV0dXJuIHppKGIpfWZ1bmN0aW9uIEhpKGEsYil7aWYoXCJ0b3BJbnB1dFwiPT09YXx8XCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIHppKGIpfVxudmFyIElpPXtldmVudFR5cGVzOnVpLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6QmksZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0cuZ2V0Tm9kZUZyb21JbnN0YW5jZShiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUFpO2Vsc2UgaWYodGkoZSkpaWYoQmkpZz1IaTtlbHNle2c9Rmk7dmFyIGg9RWl9ZWxzZSBmPWUubm9kZU5hbWUsIWZ8fFwiaW5wdXRcIiE9PWYudG9Mb3dlckNhc2UoKXx8XCJjaGVja2JveFwiIT09ZS50eXBlJiZcInJhZGlvXCIhPT1lLnR5cGV8fChnPUdpKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB2aShnLGMsZCk7aCYmaChhLGUsYik7XCJ0b3BCbHVyXCI9PT1hJiZudWxsIT1iJiYoYT1iLl93cmFwcGVyU3RhdGV8fGUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmKGE9XCJcIitlLnZhbHVlLFxuZS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKSE9PWEmJmUuc2V0QXR0cmlidXRlKFwidmFsdWVcIixhKSl9fTtmdW5jdGlvbiBKaShhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9WS5hdWdtZW50Q2xhc3MoSmkse3ZpZXc6ZnVuY3Rpb24oYSl7aWYoYS52aWV3KXJldHVybiBhLnZpZXc7YT11YihhKTtyZXR1cm4gYS53aW5kb3c9PT1hP2E6KGE9YS5vd25lckRvY3VtZW50KT9hLmRlZmF1bHRWaWV3fHxhLnBhcmVudFdpbmRvdzp3aW5kb3d9LGRldGFpbDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kZXRhaWx8fDB9fSk7dmFyIEtpPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBMaShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPUtpW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gTWkoKXtyZXR1cm4gTGl9XG5mdW5jdGlvbiBOaShhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9SmkuYXVnbWVudENsYXNzKE5pLHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOk1pLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfX0pO1xudmFyIE9pPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcInRvcE1vdXNlT3V0XCIsXCJ0b3BNb3VzZU92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX19LFBpPXtldmVudFR5cGVzOk9pLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoXCJ0b3BNb3VzZU92ZXJcIj09PWEmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHxcInRvcE1vdXNlT3V0XCIhPT1hJiZcInRvcE1vdXNlT3ZlclwiIT09YSlyZXR1cm4gbnVsbDt2YXIgZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztcInRvcE1vdXNlT3V0XCI9PT1hPyhhPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9HLmdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlKGIpOlxubnVsbCk6YT1udWxsO2lmKGE9PT1iKXJldHVybiBudWxsO3ZhciBmPW51bGw9PWE/ZTpHLmdldE5vZGVGcm9tSW5zdGFuY2UoYSk7ZT1udWxsPT1iP2U6Ry5nZXROb2RlRnJvbUluc3RhbmNlKGIpO3ZhciBnPU5pLmdldFBvb2xlZChPaS5tb3VzZUxlYXZlLGEsYyxkKTtnLnR5cGU9XCJtb3VzZWxlYXZlXCI7Zy50YXJnZXQ9ZjtnLnJlbGF0ZWRUYXJnZXQ9ZTtjPU5pLmdldFBvb2xlZChPaS5tb3VzZUVudGVyLGIsYyxkKTtjLnR5cGU9XCJtb3VzZWVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9ZjtUaC5hY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXMoZyxjLGEsYik7cmV0dXJuW2csY119fSxRaT1GLkRPQ1VNRU5UX05PREUsUmk9bC5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxTaT17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sXG5kZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbnRleHRNZW51IHRvcEZvY3VzIHRvcEtleURvd24gdG9wS2V5VXAgdG9wTW91c2VEb3duIHRvcE1vdXNlVXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sVGk9bnVsbCxaaT1udWxsLCRpPW51bGwsYWo9ITEsYmo9TS5pc0xpc3RlbmluZ1RvQWxsRGVwZW5kZW5jaWVzO1xuZnVuY3Rpb24gY2ooYSxiKXtpZihhanx8bnVsbD09VGl8fFRpIT09aWEoKSlyZXR1cm4gbnVsbDt2YXIgYz1UaTtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ6aC5oYXNTZWxlY3Rpb25DYXBhYmlsaXRpZXMoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OndpbmRvdy5nZXRTZWxlY3Rpb24/KGM9d2luZG93LmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pOmM9dm9pZCAwO3JldHVybiAkaSYmZWEoJGksYyk/bnVsbDooJGk9YyxhPVkuZ2V0UG9vbGVkKFNpLnNlbGVjdCxaaSxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVRpLFRoLmFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMoYSksYSl9XG52YXIgZGo9e2V2ZW50VHlwZXM6U2ksZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDpkLm5vZGVUeXBlPT09UWk/ZDpkLm93bmVyRG9jdW1lbnQ7aWYoIWV8fCFiaihcIm9uU2VsZWN0XCIsZSkpcmV0dXJuIG51bGw7ZT1iP0cuZ2V0Tm9kZUZyb21JbnN0YW5jZShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BGb2N1c1wiOmlmKHRpKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVRpPWUsWmk9YiwkaT1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6JGk9Wmk9VGk9bnVsbDticmVhaztjYXNlIFwidG9wTW91c2VEb3duXCI6YWo9ITA7YnJlYWs7Y2FzZSBcInRvcENvbnRleHRNZW51XCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpyZXR1cm4gYWo9ITEsY2ooYyxkKTtjYXNlIFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI6aWYoUmkpYnJlYWs7Y2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4gY2ooYyxkKX1yZXR1cm4gbnVsbH19O1xuZnVuY3Rpb24gZWooYSxiLGMsZCl7cmV0dXJuIFkuY2FsbCh0aGlzLGEsYixjLGQpfVkuYXVnbWVudENsYXNzKGVqLHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtmdW5jdGlvbiBmaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9WS5hdWdtZW50Q2xhc3MoZmose2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KTtmdW5jdGlvbiBnaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9SmkuYXVnbWVudENsYXNzKGdqLHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBoaihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBpaj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0samo9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9O2Z1bmN0aW9uIGtqKGEsYixjLGQpe3JldHVybiBZLmNhbGwodGhpcyxhLGIsYyxkKX1cbkppLmF1Z21lbnRDbGFzcyhraix7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1palthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1oaihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/ampbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOk1pLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9oaihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2hqKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSk7ZnVuY3Rpb24gbGooYSxiLGMsZCl7cmV0dXJuIFkuY2FsbCh0aGlzLGEsYixjLGQpfU5pLmF1Z21lbnRDbGFzcyhsaix7ZGF0YVRyYW5zZmVyOm51bGx9KTtmdW5jdGlvbiBtaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9SmkuYXVnbWVudENsYXNzKG1qLHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6TWl9KTtmdW5jdGlvbiBuaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9WS5hdWdtZW50Q2xhc3Mobmose3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSk7XG5mdW5jdGlvbiBvaihhLGIsYyxkKXtyZXR1cm4gWS5jYWxsKHRoaXMsYSxiLGMsZCl9TmkuYXVnbWVudENsYXNzKG9qLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pO3ZhciBwaj17fSxxaj17fTtcblwiYWJvcnQgYW5pbWF0aW9uRW5kIGFuaW1hdGlvbkl0ZXJhdGlvbiBhbmltYXRpb25TdGFydCBibHVyIGNhbmNlbCBjYW5QbGF5IGNhblBsYXlUaHJvdWdoIGNsaWNrIGNsb3NlIGNvbnRleHRNZW51IGNvcHkgY3V0IGRvdWJsZUNsaWNrIGRyYWcgZHJhZ0VuZCBkcmFnRW50ZXIgZHJhZ0V4aXQgZHJhZ0xlYXZlIGRyYWdPdmVyIGRyYWdTdGFydCBkcm9wIGR1cmF0aW9uQ2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGZvY3VzIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBsb2FkIGxvYWRlZERhdGEgbG9hZGVkTWV0YWRhdGEgbG9hZFN0YXJ0IG1vdXNlRG93biBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIG1vdXNlVXAgcGFzdGUgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVDaGFuZ2UgcmVzZXQgc2Nyb2xsIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VibWl0IHN1c3BlbmQgdGltZVVwZGF0ZSB0b2dnbGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hNb3ZlIHRvdWNoU3RhcnQgdHJhbnNpdGlvbkVuZCB2b2x1bWVDaGFuZ2Ugd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF0udG9VcHBlckNhc2UoKStcbmEuc2xpY2UoMSksYz1cIm9uXCIrYjtiPVwidG9wXCIrYjtjPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpjLGNhcHR1cmVkOmMrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbYl19O3BqW2FdPWM7cWpbYl09Y30pO1xudmFyIHJqPXtldmVudFR5cGVzOnBqLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9cWpbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BBYm9ydFwiOmNhc2UgXCJ0b3BDYW5jZWxcIjpjYXNlIFwidG9wQ2FuUGxheVwiOmNhc2UgXCJ0b3BDYW5QbGF5VGhyb3VnaFwiOmNhc2UgXCJ0b3BDbG9zZVwiOmNhc2UgXCJ0b3BEdXJhdGlvbkNoYW5nZVwiOmNhc2UgXCJ0b3BFbXB0aWVkXCI6Y2FzZSBcInRvcEVuY3J5cHRlZFwiOmNhc2UgXCJ0b3BFbmRlZFwiOmNhc2UgXCJ0b3BFcnJvclwiOmNhc2UgXCJ0b3BJbnB1dFwiOmNhc2UgXCJ0b3BJbnZhbGlkXCI6Y2FzZSBcInRvcExvYWRcIjpjYXNlIFwidG9wTG9hZGVkRGF0YVwiOmNhc2UgXCJ0b3BMb2FkZWRNZXRhZGF0YVwiOmNhc2UgXCJ0b3BMb2FkU3RhcnRcIjpjYXNlIFwidG9wUGF1c2VcIjpjYXNlIFwidG9wUGxheVwiOmNhc2UgXCJ0b3BQbGF5aW5nXCI6Y2FzZSBcInRvcFByb2dyZXNzXCI6Y2FzZSBcInRvcFJhdGVDaGFuZ2VcIjpjYXNlIFwidG9wUmVzZXRcIjpjYXNlIFwidG9wU2Vla2VkXCI6Y2FzZSBcInRvcFNlZWtpbmdcIjpjYXNlIFwidG9wU3RhbGxlZFwiOmNhc2UgXCJ0b3BTdWJtaXRcIjpjYXNlIFwidG9wU3VzcGVuZFwiOmNhc2UgXCJ0b3BUaW1lVXBkYXRlXCI6Y2FzZSBcInRvcFRvZ2dsZVwiOmNhc2UgXCJ0b3BWb2x1bWVDaGFuZ2VcIjpjYXNlIFwidG9wV2FpdGluZ1wiOnZhciBmPVk7XG5icmVhaztjYXNlIFwidG9wS2V5UHJlc3NcIjppZigwPT09aGooYykpcmV0dXJuIG51bGw7Y2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjpmPWtqO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6Y2FzZSBcInRvcEZvY3VzXCI6Zj1najticmVhaztjYXNlIFwidG9wQ2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcInRvcERvdWJsZUNsaWNrXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BNb3VzZU1vdmVcIjpjYXNlIFwidG9wTW91c2VVcFwiOmNhc2UgXCJ0b3BNb3VzZU91dFwiOmNhc2UgXCJ0b3BNb3VzZU92ZXJcIjpjYXNlIFwidG9wQ29udGV4dE1lbnVcIjpmPU5pO2JyZWFrO2Nhc2UgXCJ0b3BEcmFnXCI6Y2FzZSBcInRvcERyYWdFbmRcIjpjYXNlIFwidG9wRHJhZ0VudGVyXCI6Y2FzZSBcInRvcERyYWdFeGl0XCI6Y2FzZSBcInRvcERyYWdMZWF2ZVwiOmNhc2UgXCJ0b3BEcmFnT3ZlclwiOmNhc2UgXCJ0b3BEcmFnU3RhcnRcIjpjYXNlIFwidG9wRHJvcFwiOmY9bGo7YnJlYWs7Y2FzZSBcInRvcFRvdWNoQ2FuY2VsXCI6Y2FzZSBcInRvcFRvdWNoRW5kXCI6Y2FzZSBcInRvcFRvdWNoTW92ZVwiOmNhc2UgXCJ0b3BUb3VjaFN0YXJ0XCI6Zj1cbm1qO2JyZWFrO2Nhc2UgXCJ0b3BBbmltYXRpb25FbmRcIjpjYXNlIFwidG9wQW5pbWF0aW9uSXRlcmF0aW9uXCI6Y2FzZSBcInRvcEFuaW1hdGlvblN0YXJ0XCI6Zj1lajticmVhaztjYXNlIFwidG9wVHJhbnNpdGlvbkVuZFwiOmY9bmo7YnJlYWs7Y2FzZSBcInRvcFNjcm9sbFwiOmY9Smk7YnJlYWs7Y2FzZSBcInRvcFdoZWVsXCI6Zj1vajticmVhaztjYXNlIFwidG9wQ29weVwiOmNhc2UgXCJ0b3BDdXRcIjpjYXNlIFwidG9wUGFzdGVcIjpmPWZqfWY/dm9pZCAwOncoXCI4NlwiLGEpO2E9Zi5nZXRQb29sZWQoZSxiLGMsZCk7VGguYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhhKTtyZXR1cm4gYX19O0wuc2V0SGFuZGxlVG9wTGV2ZWwoTS5oYW5kbGVUb3BMZXZlbCk7SmIuaW5qZWN0aW9uLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBUYXBFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7XG5pYi5pbmplY3Rpb24uaW5qZWN0Q29tcG9uZW50VHJlZShHKTtKYi5pbmplY3Rpb24uaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpyaixFbnRlckxlYXZlRXZlbnRQbHVnaW46UGksQ2hhbmdlRXZlbnRQbHVnaW46SWksU2VsZWN0RXZlbnRQbHVnaW46ZGosQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpyaX0pO1xudmFyIHNqPUEuaW5qZWN0aW9uLk1VU1RfVVNFX1BST1BFUlRZLFo9QS5pbmplY3Rpb24uSEFTX0JPT0xFQU5fVkFMVUUsdGo9QS5pbmplY3Rpb24uSEFTX05VTUVSSUNfVkFMVUUsdWo9QS5pbmplY3Rpb24uSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUsdmo9QS5pbmplY3Rpb24uSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFLHdqPXtQcm9wZXJ0aWVzOnthbGxvd0Z1bGxTY3JlZW46WixhbGxvd1RyYW5zcGFyZW5jeTp2aixhc3luYzpaLGF1dG9QbGF5OlosY2FwdHVyZTpaLGNoZWNrZWQ6c2p8Wixjb2xzOnVqLGNvbnRlbnRFZGl0YWJsZTp2aixjb250cm9sczpaLFwiZGVmYXVsdFwiOlosZGVmZXI6WixkaXNhYmxlZDpaLGRvd25sb2FkOkEuaW5qZWN0aW9uLkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUsZHJhZ2dhYmxlOnZqLGZvcm1Ob1ZhbGlkYXRlOlosaGlkZGVuOlosbG9vcDpaLG11bHRpcGxlOnNqfFosbXV0ZWQ6c2p8Wixub1ZhbGlkYXRlOlosb3BlbjpaLHBsYXlzSW5saW5lOlosXG5yZWFkT25seTpaLHJlcXVpcmVkOloscmV2ZXJzZWQ6Wixyb3dzOnVqLHJvd1NwYW46dGosc2NvcGVkOlosc2VhbWxlc3M6WixzZWxlY3RlZDpzanxaLHNpemU6dWosc3RhcnQ6dGosc3Bhbjp1aixzcGVsbENoZWNrOnZqLHN0eWxlOjAsaXRlbVNjb3BlOlosYWNjZXB0Q2hhcnNldDowLGNsYXNzTmFtZTowLGh0bWxGb3I6MCxodHRwRXF1aXY6MCx2YWx1ZTp2an0sRE9NQXR0cmlidXRlTmFtZXM6e2FjY2VwdENoYXJzZXQ6XCJhY2NlcHQtY2hhcnNldFwiLGNsYXNzTmFtZTpcImNsYXNzXCIsaHRtbEZvcjpcImZvclwiLGh0dHBFcXVpdjpcImh0dHAtZXF1aXZcIn0sRE9NTXV0YXRpb25NZXRob2RzOnt2YWx1ZTpmdW5jdGlvbihhLGIpe2lmKG51bGw9PWIpcmV0dXJuIGEucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7XCJudW1iZXJcIiE9PWEudHlwZXx8ITE9PT1hLmhhc0F0dHJpYnV0ZShcInZhbHVlXCIpP2Euc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK2IpOmEudmFsaWRpdHkmJiFhLnZhbGlkaXR5LmJhZElucHV0JiZcbmEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYil9fX0seGo9QS5pbmplY3Rpb24uSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFLHlqPXt4bGluazpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIix4bWw6XCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIn0semo9e1Byb3BlcnRpZXM6e2F1dG9SZXZlcnNlOnhqLGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQ6eGoscHJlc2VydmVBbHBoYTp4an0sRE9NQXR0cmlidXRlTmFtZXM6e2F1dG9SZXZlcnNlOlwiYXV0b1JldmVyc2VcIixleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkOlwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLHByZXNlcnZlQWxwaGE6XCJwcmVzZXJ2ZUFscGhhXCJ9LERPTUF0dHJpYnV0ZU5hbWVzcGFjZXM6e3hsaW5rQWN0dWF0ZTp5ai54bGluayx4bGlua0FyY3JvbGU6eWoueGxpbmsseGxpbmtIcmVmOnlqLnhsaW5rLHhsaW5rUm9sZTp5ai54bGluayxcbnhsaW5rU2hvdzp5ai54bGluayx4bGlua1RpdGxlOnlqLnhsaW5rLHhsaW5rVHlwZTp5ai54bGluayx4bWxCYXNlOnlqLnhtbCx4bWxMYW5nOnlqLnhtbCx4bWxTcGFjZTp5ai54bWx9fSxBaj0vW1xcLVxcOl0oW2Etel0pL2c7ZnVuY3Rpb24gQmooYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeC1oZWlnaHQgeGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGUgeG1sOmJhc2UgeG1sbnM6eGxpbmsgeG1sOmxhbmcgeG1sOnNwYWNlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEFqLFxuQmopO3pqLlByb3BlcnRpZXNbYl09MDt6ai5ET01BdHRyaWJ1dGVOYW1lc1tiXT1hfSk7QS5pbmplY3Rpb24uaW5qZWN0RE9NUHJvcGVydHlDb25maWcod2opO0EuaW5qZWN0aW9uLmluamVjdERPTVByb3BlcnR5Q29uZmlnKHpqKTtcbnZhciBDaj1pZy5pbmplY3RJbnRlcm5hbHMsRGo9Ri5FTEVNRU5UX05PREUsRWo9Ri5URVhUX05PREUsRmo9Ri5DT01NRU5UX05PREUsR2o9Ri5ET0NVTUVOVF9OT0RFLEhqPUYuRE9DVU1FTlRfRlJBR01FTlRfTk9ERSxJaj1BLlJPT1RfQVRUUklCVVRFX05BTUUsSmo9a2EuZ2V0Q2hpbGROYW1lc3BhY2UsS2o9Ti5jcmVhdGVFbGVtZW50LExqPU4uY3JlYXRlVGV4dE5vZGUsTWo9Ti5zZXRJbml0aWFsUHJvcGVydGllcyxOaj1OLmRpZmZQcm9wZXJ0aWVzLE9qPU4udXBkYXRlUHJvcGVydGllcyxQaj1OLmRpZmZIeWRyYXRlZFByb3BlcnRpZXMsUWo9Ti5kaWZmSHlkcmF0ZWRUZXh0LFJqPU4ud2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudCxTaj1OLndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQsVGo9Ti53YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQsVWo9Ti53YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQsVmo9Ry5wcmVjYWNoZUZpYmVyTm9kZSxXaj1HLnVwZGF0ZUZpYmVyUHJvcHM7XG5uYi5pbmplY3Rpb24uaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudChOKTtEaC5faW5qZWN0RmliZXIoZnVuY3Rpb24oYSl7cmV0dXJuIFhqLmZpbmRIb3N0SW5zdGFuY2UoYSl9KTt2YXIgWWo9bnVsbCxaaj1udWxsO2Z1bmN0aW9uIGFrKGEpe3JldHVybiEoIWF8fGEubm9kZVR5cGUhPT1EaiYmYS5ub2RlVHlwZSE9PUdqJiZhLm5vZGVUeXBlIT09SGomJihhLm5vZGVUeXBlIT09Rmp8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBiayhhKXthPWE/YS5ub2RlVHlwZT09PUdqP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsO3JldHVybiEoIWF8fGEubm9kZVR5cGUhPT1Eanx8IWEuaGFzQXR0cmlidXRlKElqKSl9XG52YXIgWGo9ZnVuY3Rpb24oYSl7dmFyIGI9YS5nZXRQdWJsaWNJbnN0YW5jZTthPWhoKGEpO3ZhciBjPWEuc2NoZWR1bGVVcGRhdGUsZD1hLmdldFByaW9yaXR5Q29udGV4dDtyZXR1cm57Y3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEpe3ZhciBiPWVlKCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxpc1NjaGVkdWxlZDohMSxuZXh0U2NoZWR1bGVkUm9vdDpudWxsLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsfTtyZXR1cm4gYi5zdGF0ZU5vZGU9YX0sdXBkYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixnLGgpe3ZhciBlPWIuY3VycmVudDtnPWpoKGcpO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWc6Yi5wZW5kaW5nQ29udGV4dD1nO2I9aDtoPWQoZSxlZC5lbmFibGVBc3luY1N1YnRyZWVBUEkmJm51bGwhPWEmJm51bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCk7XG5hPXtlbGVtZW50OmF9O2toKGUsYSx2b2lkIDA9PT1iP251bGw6YixoKTtjKGUsaCl9LGJhdGNoZWRVcGRhdGVzOmEuYmF0Y2hlZFVwZGF0ZXMsdW5iYXRjaGVkVXBkYXRlczphLnVuYmF0Y2hlZFVwZGF0ZXMsZGVmZXJyZWRVcGRhdGVzOmEuZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzphLmZsdXNoU3luYyxnZXRQdWJsaWNSb290SW5zdGFuY2U6ZnVuY3Rpb24oYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIG9oOnJldHVybiBiKGEuY2hpbGQuc3RhdGVOb2RlKTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19LGZpbmRIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7YT1waChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1xaChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX19fSh7Z2V0Um9vdEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe2lmKGEubm9kZVR5cGU9PT1cbkdqKWE9KGE9YS5kb2N1bWVudEVsZW1lbnQpP2EubmFtZXNwYWNlVVJJOkpqKG51bGwsXCJcIik7ZWxzZXt2YXIgYj1hLm5vZGVUeXBlPT09Rmo/YS5wYXJlbnROb2RlOmE7YT1iLm5hbWVzcGFjZVVSSXx8bnVsbDtiPWIudGFnTmFtZTthPUpqKGEsYil9cmV0dXJuIGF9LGdldENoaWxkSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gSmooYSxiKX0sZ2V0UHVibGljSW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LHByZXBhcmVGb3JDb21taXQ6ZnVuY3Rpb24oKXtZaj1NLmlzRW5hYmxlZCgpO1pqPXpoLmdldFNlbGVjdGlvbkluZm9ybWF0aW9uKCk7TS5zZXRFbmFibGVkKCExKX0scmVzZXRBZnRlckNvbW1pdDpmdW5jdGlvbigpe3poLnJlc3RvcmVTZWxlY3Rpb24oWmopO1pqPW51bGw7TS5zZXRFbmFibGVkKFlqKTtZaj1udWxsfSxjcmVhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUpe2E9S2ooYSxiLGMsZCk7VmooZSxhKTtXaihhLGIpO3JldHVybiBhfSxhcHBlbmRJbml0aWFsQ2hpbGQ6ZnVuY3Rpb24oYSxcbmIpe2EuYXBwZW5kQ2hpbGQoYil9LGZpbmFsaXplSW5pdGlhbENoaWxkcmVuOmZ1bmN0aW9uKGEsYixjLGQpe01qKGEsYixjLGQpO2E6e3N3aXRjaChiKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmE9ISFjLmF1dG9Gb2N1czticmVhayBhfWE9ITF9cmV0dXJuIGF9LHByZXBhcmVVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gTmooYSxiLGMsZCxlKX0sY29tbWl0TW91bnQ6ZnVuY3Rpb24oYSl7YS5mb2N1cygpfSxjb21taXRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXtXaihhLGUpO09qKGEsYixjLGQsZSl9LHNob3VsZFNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlxuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH0scmVzZXRUZXh0Q29udGVudDpmdW5jdGlvbihhKXthLnRleHRDb250ZW50PVwiXCJ9LHNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4hIWIuaGlkZGVufSxjcmVhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCl7YT1MaihhLGIpO1ZqKGQsYSk7cmV0dXJuIGF9LGNvbW1pdFRleHRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMpe2Eubm9kZVZhbHVlPWN9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGEsYil7YS5hcHBlbmRDaGlsZChiKX0sYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcjpmdW5jdGlvbihhLGIpe2Eubm9kZVR5cGU9PT1Gaj9hLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYSk6YS5hcHBlbmRDaGlsZChiKX0saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGEsYixjKXthLmluc2VydEJlZm9yZShiLGMpfSxpbnNlcnRJbkNvbnRhaW5lckJlZm9yZTpmdW5jdGlvbihhLFxuYixjKXthLm5vZGVUeXBlPT09Rmo/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGMpOmEuaW5zZXJ0QmVmb3JlKGIsYyl9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKGEsYil7YS5yZW1vdmVDaGlsZChiKX0scmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7YS5ub2RlVHlwZT09PUZqP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKTphLnJlbW92ZUNoaWxkKGIpfSxjYW5IeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5ub2RlVHlwZT09PURqJiZiPT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfSxjYW5IeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYil7cmV0dXJuXCJcIj09PWI/ITE6YS5ub2RlVHlwZT09PUVqfSxnZXROZXh0SHlkcmF0YWJsZVNpYmxpbmc6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiZhLm5vZGVUeXBlIT09RGomJmEubm9kZVR5cGUhPT1FajspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxnZXRGaXJzdEh5ZHJhdGFibGVDaGlsZDpmdW5jdGlvbihhKXtmb3IoYT1cbmEuZmlyc3RDaGlsZDthJiZhLm5vZGVUeXBlIT09RGomJmEubm9kZVR5cGUhPT1FajspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxoeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe1ZqKGYsYSk7V2ooYSxjKTtyZXR1cm4gUGooYSxiLGMsZSxkKX0saHlkcmF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7VmooYyxhKTtyZXR1cm4gUWooYSxiKX0sZGlkTm90SHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYil7MT09PWIubm9kZVR5cGU/UmooYSxiKTpTaihhLGIpfSxkaWROb3RGaW5kSHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXtUaihhLGIsYyl9LGRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYil7VWooYSxiKX0sc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrOmRkLnJJQyx1c2VTeW5jU2NoZWR1bGluZzohMH0pO3NiLmluamVjdGlvbi5pbmplY3RGaWJlckJhdGNoZWRVcGRhdGVzKFhqLmJhdGNoZWRVcGRhdGVzKTtcbmZ1bmN0aW9uIGNrKGEsYixjLGQsZSl7YWsoYyk/dm9pZCAwOncoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpWGoudXBkYXRlQ29udGFpbmVyKGIsZixhLGUpO2Vsc2V7aWYoIWQmJiFiayhjKSlmb3IoZD12b2lkIDA7ZD1jLmxhc3RDaGlsZDspYy5yZW1vdmVDaGlsZChkKTt2YXIgZz1Yai5jcmVhdGVDb250YWluZXIoYyk7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9ZztYai51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7WGoudXBkYXRlQ29udGFpbmVyKGIsZyxhLGUpfSl9cmV0dXJuIFhqLmdldFB1YmxpY1Jvb3RJbnN0YW5jZShmKX1mdW5jdGlvbiBkayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2FrKGIpP3ZvaWQgMDp3KFwiMjAwXCIpO3JldHVybiBuZS5jcmVhdGVQb3J0YWwoYSxiLG51bGwsYyl9XG52YXIgZWs9e2NyZWF0ZVBvcnRhbDpkayxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gY2sobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGNrKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsIT1hJiZQYS5oYXMoYSk/dm9pZCAwOncoXCIzOFwiKTtyZXR1cm4gY2soYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7YWsoYSk/dm9pZCAwOncoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYai51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7Y2sobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSxmaW5kRE9NTm9kZTpEaCx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZGssdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6c2IuYmF0Y2hlZFVwZGF0ZXMsXG51bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXM6WGouZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzpYai5mbHVzaFN5bmMsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50UGx1Z2luSHViOkpiLEV2ZW50UGx1Z2luUmVnaXN0cnk6c2EsRXZlbnRQcm9wYWdhdG9yczpUaCxSZWFjdENvbnRyb2xsZWRDb21wb25lbnQ6bmIsUmVhY3RET01Db21wb25lbnRUcmVlOkcsUmVhY3RET01FdmVudExpc3RlbmVyOkx9fTtDaih7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6Ry5nZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSxmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpYai5maW5kSG9zdEluc3RhbmNlLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMC4wXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7bW9kdWxlLmV4cG9ydHM9ZWs7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudC5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJy4vZW1wdHlGdW5jdGlvbicpO1xuXG4vKipcbiAqIFVwc3RyZWFtIHZlcnNpb24gb2YgZXZlbnQgbGlzdGVuZXIuIERvZXMgbm90IHRha2UgaW50byBhY2NvdW50IHNwZWNpZmljXG4gKiBuYXR1cmUgb2YgcGxhdGZvcm0uXG4gKi9cbnZhciBFdmVudExpc3RlbmVyID0ge1xuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBidWJibGUgcGhhc2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRXZlbnRUYXJnZXR9IHRhcmdldCBET00gZWxlbWVudCB0byByZWdpc3RlciBsaXN0ZW5lciBvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSBFdmVudCB0eXBlLCBlLmcuICdjbGljaycgb3IgJ21vdXNlb3ZlcicuXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJuIHtvYmplY3R9IE9iamVjdCB3aXRoIGEgYHJlbW92ZWAgbWV0aG9kLlxuICAgKi9cbiAgbGlzdGVuOiBmdW5jdGlvbiBsaXN0ZW4odGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRhcmdldC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICh0YXJnZXQuYXR0YWNoRXZlbnQpIHtcbiAgICAgIHRhcmdldC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnRUeXBlLCBjYWxsYmFjayk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGNhcHR1cmU6IGZ1bmN0aW9uIGNhcHR1cmUodGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRhcmdldC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdBdHRlbXB0ZWQgdG8gbGlzdGVuIHRvIGV2ZW50cyBkdXJpbmcgdGhlIGNhcHR1cmUgcGhhc2Ugb24gYSAnICsgJ2Jyb3dzZXIgdGhhdCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjYXB0dXJlIHBoYXNlLiBZb3VyIGFwcGxpY2F0aW9uICcgKyAnd2lsbCBub3QgcmVjZWl2ZSBzb21lIGV2ZW50cy4nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZW1wdHlGdW5jdGlvblxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgcmVnaXN0ZXJEZWZhdWx0OiBmdW5jdGlvbiByZWdpc3RlckRlZmF1bHQoKSB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudExpc3RlbmVyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXZlbnRMaXN0ZW5lci5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqIFxuICovXG5cbi8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBTYW1lVmFsdWUgYWxnb3JpdGhtXG4gIGlmICh4ID09PSB5KSB7XG4gICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgLy8gU3RlcHMgNi5iLTYuZTogKzAgIT0gLTBcbiAgICAvLyBBZGRlZCB0aGUgbm9uemVybyB5IGNoZWNrIHRvIG1ha2UgRmxvdyBoYXBweSwgYnV0IGl0IGlzIHJlZHVuZGFudFxuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIC8vIFN0ZXAgNi5hOiBOYU4gPT0gTmFOXG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hhbGxvd0VxdWFsO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IHJlcXVpcmUoJy4vaXNUZXh0Tm9kZScpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vaXNOb2RlJyk7XG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gdGV4dCBub2RlLlxuICovXG5mdW5jdGlvbiBpc1RleHROb2RlKG9iamVjdCkge1xuICByZXR1cm4gaXNOb2RlKG9iamVjdCkgJiYgb2JqZWN0Lm5vZGVUeXBlID09IDM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUZXh0Tm9kZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBpc05vZGUob2JqZWN0KSB7XG4gIHZhciBkb2MgPSBvYmplY3QgPyBvYmplY3Qub3duZXJEb2N1bWVudCB8fCBvYmplY3QgOiBkb2N1bWVudDtcbiAgdmFyIGRlZmF1bHRWaWV3ID0gZG9jLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgcmV0dXJuICEhKG9iamVjdCAmJiAodHlwZW9mIGRlZmF1bHRWaWV3Lk5vZGUgPT09ICdmdW5jdGlvbicgPyBvYmplY3QgaW5zdGFuY2VvZiBkZWZhdWx0Vmlldy5Ob2RlIDogdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5ub2RlVHlwZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gJ3N0cmluZycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc05vZGU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc05vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gbm9kZSBpbnB1dC90ZXh0YXJlYSB0byBmb2N1c1xuICovXG5cbmZ1bmN0aW9uIGZvY3VzTm9kZShub2RlKSB7XG4gIC8vIElFOCBjYW4gdGhyb3cgXCJDYW4ndCBtb3ZlIGZvY3VzIHRvIHRoZSBjb250cm9sIGJlY2F1c2UgaXQgaXMgaW52aXNpYmxlLFxuICAvLyBub3QgZW5hYmxlZCwgb3Igb2YgYSB0eXBlIHRoYXQgZG9lcyBub3QgYWNjZXB0IHRoZSBmb2N1cy5cIiBmb3IgYWxsIGtpbmRzIG9mXG4gIC8vIHJlYXNvbnMgdGhhdCBhcmUgdG9vIGV4cGVuc2l2ZSBhbmQgZnJhZ2lsZSB0byB0ZXN0LlxuICB0cnkge1xuICAgIG5vZGUuZm9jdXMoKTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmb2N1c05vZGU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9mb2N1c05vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgZmItd3d3L3R5cGVvZi11bmRlZmluZWQgKi9cblxuLyoqXG4gKiBTYW1lIGFzIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYnV0IHdyYXBzIGluIGEgdHJ5LWNhdGNoIGJsb2NrLiBJbiBJRSBpdCBpc1xuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cbiAqXG4gKiBUaGUgYWN0aXZlRWxlbWVudCB3aWxsIGJlIG51bGwgb25seSBpZiB0aGUgZG9jdW1lbnQgb3IgZG9jdW1lbnQgYm9keSBpcyBub3RcbiAqIHlldCBkZWZpbmVkLlxuICpcbiAqIEBwYXJhbSB7P0RPTURvY3VtZW50fSBkb2MgRGVmYXVsdHMgdG8gY3VycmVudCBkb2N1bWVudC5cbiAqIEByZXR1cm4gez9ET01FbGVtZW50fVxuICovXG5mdW5jdGlvbiBnZXRBY3RpdmVFbGVtZW50KGRvYykgLyo/RE9NRWxlbWVudCove1xuICBkb2MgPSBkb2MgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHVuZGVmaW5lZCk7XG4gIGlmICh0eXBlb2YgZG9jID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldEFjdGl2ZUVsZW1lbnQuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgQ2hpbGRyZW4gfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGZpbmRET01Ob2RlIH0gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IFNsaWRlIGZyb20gJy4vc2xpZGUnXG5pbXBvcnQge1xuICBhbmltYXRlLFxuICBub29wLFxuICBvbixcbiAgb25Td2lwZSxcbiAgb25TY3JvbGxFbmQsXG4gIG9uU2Nyb2xsU3RhcnQsXG4gIGhhc09uZ29pbmdJbnRlcmFjdGlvbixcbiAgdmFsdWVzLFxuICBpbmNsdWRlcyxcbiAgaXNXaG9sbHlJblZpZXdcbn0gZnJvbSAnLi91dGlscydcbmltcG9ydCB7IGJvb2wsIG51bWJlciwgc3RyaW5nLCBmdW5jLCBhcnJheSwgb25lT2ZUeXBlLCBvYmplY3QsIG5vZGUgfSBmcm9tICdwcm9wLXR5cGVzJ1xuLy8gY29uc3QgdGFwID0gKG1zZykgPT4gKHRoaW5nKSA9PiB7IGNvbnNvbGUubG9nKG1zZywgdGhpbmcpOyByZXR1cm4gdGhpbmcgfVxuY29uc3Qgd3JhcEFyb3VuZFZhbHVlID0gKHZhbCwgbWF4KSA9PiAoKHZhbCAlIG1heCkgKyBtYXgpICUgbWF4XG5jb25zdCBoYXJkQm91bmRlZFZhbHVlID0gKHZhbCwgbWF4KSA9PiBNYXRoLm1heCgwLCBNYXRoLm1pbihtYXgsIHZhbCkpXG5jb25zdCBub3JtYWxpemVJbmRleCA9IChpZHgsIGxlbiwgd3JhcCA9IGZhbHNlKSA9PiB3cmFwID8gd3JhcEFyb3VuZFZhbHVlKGlkeCwgbGVuKSA6IGhhcmRCb3VuZGVkVmFsdWUoaWR4LCBsZW4gLSAxKVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXaGlybGlnaWcgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGFmdGVyU2xpZGU6IGZ1bmMsXG4gICAgYW5pbWF0aW9uRHVyYXRpb246IG51bWJlcixcbiAgICBiZWZvcmVTbGlkZTogZnVuYyxcbiAgICBjaGlsZHJlbjogb25lT2ZUeXBlKFtub2RlLCBhcnJheSwgc3RyaW5nXSksXG4gICAgY2xhc3NOYW1lOiBzdHJpbmcsXG4gICAgZWFzaW5nOiBmdW5jLFxuICAgIGluZmluaXRlOiBib29sLFxuICAgIGlubmVyUmVmOiBmdW5jLFxuICAgIG5leHRLZXlzOiBhcnJheSxcbiAgICBwcmV2S2V5czogYXJyYXksXG4gICAgcHJldmVudEF1dG9Db3JyZWN0OiBib29sLFxuICAgIHByZXZlbnRTY3JvbGw6IGJvb2wsXG4gICAgcHJldmVudFN3aXBlOiBib29sLFxuICAgIG9uU2xpZGVDbGljazogZnVuYyxcbiAgICBzbmFwVG9TbGlkZTogYm9vbCxcbiAgICBzbGlkZVRvOiBudW1iZXIsXG4gICAgc2xpZGVCeTogbnVtYmVyLFxuICAgIHNsaWRlQ2xhc3M6IG9uZU9mVHlwZShbYXJyYXksIHN0cmluZywgb2JqZWN0XSksXG4gICAgc3RhcnRBdDogbnVtYmVyLFxuICAgIHN0eWxlOiBvYmplY3QsXG4gICAgZ3V0dGVyOiAocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSA9PiB7XG4gICAgICBjb25zdCBwcm9wID0gcHJvcHNbcHJvcE5hbWVdXG4gICAgICBpZiAoXG4gICAgICAgIHR5cGVvZiBwYXJzZUludChwcm9wLCAxMCkgPT09ICdudW1iZXInICYmXG4gICAgICAgICFpc05hTihOdW1iZXIocHJvcCkpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihgSW52YWxpZCB2YWx1ZSAoJHtwcm9wfSkgb2YgcHJvcCAnJHtwcm9wTmFtZX0nIHN1cHBsaWVkIHRvICR7Y29tcG9uZW50TmFtZX0uXG4gICAgICAgIFRoZSB2YWx1ZSBvZiAke3Byb3BOYW1lfSBzaG91bGQgYmUgYSB2YWxpZCBjc3MgbGVuZ3RoIHVuaXRcbiAgICAgICAgKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9sZW5ndGgpLmApXG4gICAgICB9XG4gICAgfSxcbiAgICB2aXNpYmxlU2xpZGVzOiBudW1iZXJcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYWZ0ZXJTbGlkZTogKCkgPT4ge30sXG4gICAgYW5pbWF0aW9uRHVyYXRpb246IDUwMCxcbiAgICBiZWZvcmVTbGlkZTogKCkgPT4ge30sXG4gICAgZ3V0dGVyOiAnMWVtJyxcbiAgICBuZXh0S2V5czogWydBcnJvd1JpZ2h0J10sXG4gICAgcHJldktleXM6IFsnQXJyb3dMZWZ0J10sXG4gICAgcHJldmVudEF1dG9Db3JyZWN0OiBmYWxzZSxcbiAgICBwcmV2ZW50U2Nyb2xsOiBmYWxzZSxcbiAgICBwcmV2ZW50U3dpcGU6IGZhbHNlLFxuICAgIHNuYXBUb1NsaWRlOiBmYWxzZSxcbiAgICBzdGFydEF0OiAwLFxuICAgIHN0eWxlOiB7fVxuICB9XG5cbiAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgYWN0aXZlSW5kZXg6IHByb3BzLnN0YXJ0QXQsXG4gICAgICBpc0FuaW1hdGluZzogZmFsc2UsXG4gICAgICB2aXNpYmxlU2xpZGVzOiB0aGlzLnByb3BzLnZpc2libGVTbGlkZXMgfHwgMCxcbiAgICAgIHNsaWRlQnk6IHRoaXMucHJvcHMuc2xpZGVCeSB8fCB0aGlzLnByb3BzLnZpc2libGVTbGlkZXMgfHwgMCB9XG5cbiAgICAvLyBXZSBjYW4ndCBkbyBhcnJvdyBmdW5jdGlvbiBwcm9wZXJ0aWVzIGZvciB0aGVzZSBzaW5jZVxuICAgIC8vIHdlIGFyZSBwYXNzaW5nIHRoZW0gdG8gdGhlIGNvbnN1bWluZyBjb21wb25lbnQgYW5kIHdlXG4gICAgLy8gcmVxdWlyZSB0aGUgcHJvcGVyIGNvbnRleHRcbiAgICB0aGlzLm5leHQgPSB0aGlzLm5leHQuYmluZCh0aGlzKVxuICAgIHRoaXMucHJldiA9IHRoaXMucHJldi5iaW5kKHRoaXMpXG4gICAgdGhpcy5zbGlkZVRvID0gdGhpcy5zbGlkZVRvLmJpbmQodGhpcylcbiAgfVxuXG4gIGV2ZW50TGlzdGVuZXJzID0gW11cbiAgaXNTY3JvbGxpbmcgPSBmYWxzZVxuICBjYW5TZWxmQ29ycmVjdCA9ICgpID0+XG4gICAgIXRoaXMucHJvcHMucHJldmVudEF1dG9Db3JyZWN0ICYmXG4gICAgIXRoaXMuc3RhdGUuaXNBbmltYXRpbmcgJiZcbiAgICAhdGhpcy5pc1Njcm9sbGluZyAmJlxuICAgICF0aGlzLmlzSW50ZXJhY3RpbmcoKVxuXG4gIHNob3VsZFNlbGZDb3JyZWN0ID0gKCkgPT4gdGhpcy5wcm9wcy5zbmFwVG9TbGlkZSAmJiB0aGlzLmNhblNlbGZDb3JyZWN0KClcblxuICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgdGhpcy5ET01Ob2RlID0gZmluZERPTU5vZGUodGhpcy53aGlybGlnaWcpXG4gICAgdGhpcy5pc0ludGVyYWN0aW5nID0gaGFzT25nb2luZ0ludGVyYWN0aW9uKHRoaXMuRE9NTm9kZSlcblxuICAgIC8vIFRoZXNlIGFyZSBub3QgYSBwYXJ0IG9mIGNvbXBvbmVudCBzdGF0ZSBzaW5jZSB3ZSBkb24ndCB3YW50XG4gICAgLy8gaW5jdXJlIHRoZSBvdmVyaGVhZCBvZiBjYWxsaW5nIHNldFN0YXRlLiBUaGV5IGFyZSBlaXRoZXIgY2FjaGVkXG4gICAgLy8gdmFsdWVzIG9yIHN0YXRlIG9ubHkgdGhlIG9uU2Nyb2xsRW5kIGNhbGxiYWNrIGNhcmVzIGFib3V0IGFuZFxuICAgIC8vIGFyZSBub3QgaW1wb3J0YW50IHRvIHRoZSByZW5kZXJpbmcgb2YgdGhlIGNvbXBvbmVudC5cbiAgICB0aGlzLmNoaWxkQ291bnQgPSAodGhpcy53aGlybGlnaWcgJiYgdGhpcy53aGlybGlnaWcuY2hpbGRyZW4pID8gdGhpcy53aGlybGlnaWcuY2hpbGRyZW4ubGVuZ3RoIDogMFxuXG4gICAgY29uc3Qgc2xpZGVCeSA9IHtcbiAgICAgIGxlZnQ6ICgpID0+IC10aGlzLnN0YXRlLnNsaWRlQnksXG4gICAgICByaWdodDogKCkgPT4gdGhpcy5zdGF0ZS5zbGlkZUJ5LFxuICAgICAgdXA6ICgpID0+IDAsXG4gICAgICBkb3duOiAoKSA9PiAwXG4gICAgfVxuXG4gICAgdGhpcy5ldmVudExpc3RlbmVycyA9IFtcbiAgICAgIC4uLnRoaXMuZXZlbnRMaXN0ZW5lcnMsXG5cbiAgICAgIG9uU2Nyb2xsU3RhcnQoKCkgPT4geyB0aGlzLmlzU2Nyb2xsaW5nID0gdHJ1ZSB9KSxcblxuICAgICAgb24oJ3RvdWNoc3RhcnQnKSgoKSA9PiB7IHRoaXMuaXNTY3JvbGxpbmcgPSB0cnVlIH0pKHRoaXMud2hpcmxpZ2lnKSxcblxuICAgICAgb25TY3JvbGxFbmQoKCkgPT4ge1xuICAgICAgICB0aGlzLmlzU2Nyb2xsaW5nID0gZmFsc2VcbiAgICAgICAgaWYgKHRoaXMuY2FuU2VsZkNvcnJlY3QoKSkge1xuICAgICAgICAgIGlmICh0aGlzLnByb3BzLnNuYXBUb1NsaWRlKSB7XG4gICAgICAgICAgICB0aGlzLnNsaWRlVG8odGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKS5jYXRjaChub29wKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmFmdGVyU2xpZGUodGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgeyB0YXJnZXQ6IHRoaXMuRE9NTm9kZSB9KSxcblxuICAgICAgb24oJ3RvdWNoZW5kJykoKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5jYW5TZWxmQ29ycmVjdCgpKSB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5zbmFwVG9TbGlkZVxuICAgICAgICAgICAgPyB0aGlzLnNsaWRlVG8odGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKS5jYXRjaChub29wKVxuICAgICAgICAgICAgOiB0aGlzLnByb3BzLmFmdGVyU2xpZGUodGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKVxuICAgICAgICB9XG4gICAgICB9KSh0aGlzLndoaXJsaWdpZyksXG5cbiAgICAgIG9uU3dpcGUoKGRpcmVjdGlvbikgPT4ge1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMucHJldmVudFN3aXBlICYmIHRoaXMucHJvcHMuc25hcFRvU2xpZGUpIHtcbiAgICAgICAgICB0aGlzLnNsaWRlVG8odGhpcy5zdGF0ZS5hY3RpdmVJbmRleCArIChzbGlkZUJ5W2RpcmVjdGlvbl0oKSkpLmNhdGNoKG5vb3ApXG4gICAgICAgIH1cbiAgICAgIH0pKHRoaXMud2hpcmxpZ2lnKVxuXG4gICAgXVxuXG4gICAgdGhpcy5zbGlkZVRvKHRoaXMucHJvcHMuc3RhcnRBdCwgeyBpbW1lZGlhdGU6IHRydWUgfSkuY2F0Y2gobm9vcClcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50ICgpIHsgdGhpcy5ldmVudExpc3RlbmVycy5mb3JFYWNoKChmbikgPT4gZm4oKSkgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgKHsgc2xpZGVCeSwgdmlzaWJsZVNsaWRlcyB9KSB7XG4gICAgaWYgKHNsaWRlQnkgIT09IHRoaXMucHJvcHMuc2xpZGVCeSB8fCB2aXNpYmxlU2xpZGVzICE9PSB0aGlzLnByb3BzLnZpc2libGVTbGlkZXMpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBzbGlkZUJ5OiBzbGlkZUJ5IHx8IHZpc2libGVTbGlkZXMgfHwgMSB9KVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSAocHJldlByb3BzKSB7XG4gICAgdGhpcy5jaGlsZENvdW50ID0gKHRoaXMud2hpcmxpZ2lnICYmIHRoaXMud2hpcmxpZ2lnLmNoaWxkcmVuKSA/IHRoaXMud2hpcmxpZ2lnLmNoaWxkcmVuLmxlbmd0aCA6IDBcblxuICAgIGlmICh0aGlzLnNob3VsZFNlbGZDb3JyZWN0KCkpIHtcbiAgICAgIGNvbnN0IG5lYXJlc3RTbGlkZUluZGV4ID0gdGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpXG4gICAgICBuZWFyZXN0U2xpZGVJbmRleCAhPT0gdGhpcy5zdGF0ZS5hY3RpdmVJbmRleCAmJiB0aGlzLnNsaWRlVG8odGhpcy5nZXROZWFyZXN0U2xpZGVJbmRleCgpKS5jYXRjaChub29wKVxuICAgIH1cblxuICAgIGlmIChwcmV2UHJvcHMuc2xpZGVUbyAhPT0gdGhpcy5wcm9wcy5zbGlkZVRvKSB7XG4gICAgICB0aGlzLnNsaWRlVG8odGhpcy5wcm9wcy5zbGlkZVRvKS5jYXRjaChub29wKVxuICAgIH1cbiAgfVxuXG4gIGhhbmRsZUtleVVwID0gKChuZXh0S2V5cywgcHJldktleXMpID0+ICh7IGtleSB9KSA9PiB7XG4gICAgY29uc3QgaXNOZXh0ID0gaW5jbHVkZXMoa2V5LCBuZXh0S2V5cylcbiAgICBjb25zdCBpc1ByZXYgPSBpbmNsdWRlcyhrZXksIHByZXZLZXlzKVxuICAgIHRoaXMuc2V0U3RhdGUoeyBpc0FuaW1hdGluZzogdHJ1ZSB9KVxuICAgIGlmIChpc05leHQpIHRoaXMubmV4dCgpLmNhdGNoKG5vb3ApXG4gICAgaWYgKGlzUHJldikgdGhpcy5wcmV2KCkuY2F0Y2gobm9vcClcbiAgICByZXR1cm4gZmFsc2VcbiAgfSkodGhpcy5wcm9wcy5uZXh0S2V5cywgdGhpcy5wcm9wcy5wcmV2S2V5cylcblxuICAvLyBpc0FuaW1hdGluZyBzdGF0ZSBpcyB0aGUgb25seSBpbXBvcnRhbnQgc3RhdGUgdmFsdWUgdG8gdGhlIHJlbmRlcmluZyBvZiB0aGlzIGNvbXBvbmVudFxuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgeyBpc0FuaW1hdGluZyB9KSB7XG4gICAgY29uc3QgcHJvcFZhbHVlcyA9IFsuLi52YWx1ZXModGhpcy5wcm9wcyksIHRoaXMuc3RhdGUuaXNBbmltYXRpbmddXG4gICAgY29uc3QgbmV4dFByb3BWYWx1ZXMgPSBbLi4udmFsdWVzKG5leHRQcm9wcyksIGlzQW5pbWF0aW5nXVxuICAgIHJldHVybiAhbmV4dFByb3BWYWx1ZXMuZXZlcnkoKHZhbCwgaSkgPT4gdmFsID09PSBwcm9wVmFsdWVzW2ldKVxuICB9XG5cbiAgZ2V0UGFydGlhbGx5T2JzY3VyZWRTbGlkZXMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyB3aGlybGlnaWcgfSA9IHRoaXNcbiAgICBjb25zdCBmaW5kRmlyc3RPYnNjdXJlZENoaWxkSW5kZXggPSBbIC4uLndoaXJsaWdpZy5jaGlsZHJlbiBdXG4gICAgICAuZmluZEluZGV4KChjaGlsZCwgaSwgY2hpbGRyZW4pID0+XG4gICAgICAgICFpc1dob2xseUluVmlldyh3aGlybGlnaWcpKGNoaWxkKSAmJiBpc1dob2xseUluVmlldyh3aGlybGlnaWcpKGNoaWxkcmVuW2kgKyAxXSkpXG5cbiAgICBjb25zdCBmaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCA9IE1hdGgubWF4KGZpbmRGaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCwgMClcblxuICAgIGNvbnN0IGZpbmRMYXN0T2JzY3VyZWRDaGlsZEluZGV4ID0gWyAuLi53aGlybGlnaWcuY2hpbGRyZW4gXVxuICAgICAgLmZpbmRJbmRleCgoY2hpbGQsIGksIGNoaWxkcmVuKSA9PlxuICAgICAgICAhaXNXaG9sbHlJblZpZXcod2hpcmxpZ2lnKShjaGlsZCkgJiYgaXNXaG9sbHlJblZpZXcod2hpcmxpZ2lnKShjaGlsZHJlbltpIC0gMV0pKVxuXG4gICAgY29uc3QgbGFzdE9ic2N1cmVkQ2hpbGRJbmRleCA9IE1hdGgubWF4KGZpbmRMYXN0T2JzY3VyZWRDaGlsZEluZGV4LCAwKSB8fCB3aGlybGlnaWcuY2hpbGRyZW4ubGVuZ3RoIC0gMVxuXG4gICAgcmV0dXJuIFtmaXJzdE9ic2N1cmVkQ2hpbGRJbmRleCwgbGFzdE9ic2N1cmVkQ2hpbGRJbmRleF1cbiAgfVxuXG4gIG5leHQgKCkge1xuICAgIGNvbnN0IHsgY2hpbGRDb3VudCwgcHJvcHMsIHN0YXRlIH0gPSB0aGlzXG4gICAgY29uc3QgeyBhY3RpdmVJbmRleCwgc2xpZGVCeSB9ID0gc3RhdGVcbiAgICBjb25zdCB7IGluZmluaXRlIH0gPSBwcm9wc1xuICAgIGNvbnN0IGZpcnN0SW5kZXggPSAwXG4gICAgY29uc3QgbGFzdEluZGV4ID0gY2hpbGRDb3VudCAtIHNsaWRlQnlcblxuICAgIGlmICghc2xpZGVCeSkge1xuICAgICAgY29uc3QgW18sIG5leHRTbGlkZV0gPSB0aGlzLmdldFBhcnRpYWxseU9ic2N1cmVkU2xpZGVzKClcbiAgICAgIGNvbnN0IG5leHRJbmZpbnRlU2xpZGUgPSAobmV4dFNsaWRlID09PSBjaGlsZENvdW50IC0gMSkgPyAwIDogbmV4dFNsaWRlXG4gICAgICByZXR1cm4gdGhpcy5zbGlkZVRvKGluZmluaXRlID8gbmV4dEluZmludGVTbGlkZSA6IG5leHRTbGlkZSlcbiAgICB9XG5cbiAgICBjb25zdCBuZXh0QWN0aXZlQ2FuZGlkYXRlID0gYWN0aXZlSW5kZXggKyBzbGlkZUJ5XG4gICAgY29uc3QgbmV4dEFjdGl2ZSA9IE1hdGgubWluKG5leHRBY3RpdmVDYW5kaWRhdGUsIGxhc3RJbmRleClcbiAgICBjb25zdCBuZXh0QWN0aXZlSW5maW5pdGUgPSAoYWN0aXZlSW5kZXggPT09IGxhc3RJbmRleCkgPyBmaXJzdEluZGV4IDogbmV4dEFjdGl2ZVxuICAgIHJldHVybiB0aGlzLnNsaWRlVG8oaW5maW5pdGUgPyBuZXh0QWN0aXZlSW5maW5pdGUgOiBuZXh0QWN0aXZlKVxuICB9XG5cbiAgcHJldiAoKSB7XG4gICAgY29uc3QgeyBjaGlsZENvdW50LCBzdGF0ZSwgcHJvcHMgfSA9IHRoaXNcbiAgICBjb25zdCB7IGFjdGl2ZUluZGV4LCBzbGlkZUJ5IH0gPSBzdGF0ZVxuICAgIGNvbnN0IHsgaW5maW5pdGUgfSA9IHByb3BzXG4gICAgY29uc3QgZmlyc3RJbmRleCA9IDBcbiAgICBjb25zdCBsYXN0SW5kZXggPSBjaGlsZENvdW50IC0gc2xpZGVCeVxuXG4gICAgaWYgKCFzbGlkZUJ5KSB7XG4gICAgICBjb25zdCBwcmV2U2xpZGUgPSBNYXRoLm1heChhY3RpdmVJbmRleCAtIDEsIGZpcnN0SW5kZXgpXG4gICAgICBjb25zdCBwcmV2SW5maW50ZVNsaWRlID0gKHByZXZTbGlkZSA9PT0gYWN0aXZlSW5kZXgpID8gY2hpbGRDb3VudCAtIDEgOiBwcmV2U2xpZGVcbiAgICAgIHJldHVybiB0aGlzLnNsaWRlVG8oaW5maW5pdGUgPyBwcmV2SW5maW50ZVNsaWRlIDogcHJldlNsaWRlKVxuICAgIH1cblxuICAgIGNvbnN0IG5leHRBY3RpdmUgPSBNYXRoLm1heChhY3RpdmVJbmRleCAtIHNsaWRlQnksIGZpcnN0SW5kZXgpXG4gICAgY29uc3QgbmV4dEFjdGl2ZUluZmluaXRlID0gKGFjdGl2ZUluZGV4ID09PSBmaXJzdEluZGV4KSA/IGxhc3RJbmRleCA6IG5leHRBY3RpdmVcbiAgICByZXR1cm4gdGhpcy5zbGlkZVRvKGluZmluaXRlID8gbmV4dEFjdGl2ZUluZmluaXRlIDogbmV4dEFjdGl2ZSlcbiAgfVxuXG4gIHNsaWRlVG8gKGluZGV4LCB7IGltbWVkaWF0ZSA9IGZhbHNlIH0gPSB7fSkge1xuICAgIGlmICh0aGlzLmNoaWxkQ291bnQgPT09IDApIHJldHVybiBQcm9taXNlLnJlamVjdCgnTm8gY2hpbGRyZW4gdG8gc2xpZGUgdG8nKVxuICAgIGlmICghdGhpcy53aGlybGlnaWcpIHJldHVybiBQcm9taXNlLnJlamVjdCgnVGhlIFdoaXJsaWdpZyBpcyBub3QgbW91bnRlZCcpXG4gICAgY29uc3QgeyBhZnRlclNsaWRlLCBiZWZvcmVTbGlkZSwgZWFzaW5nLCBhbmltYXRpb25EdXJhdGlvbjogZHVyYXRpb24sIGluZmluaXRlLCBwcmV2ZW50U2Nyb2xsIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgeyBjaGlsZHJlbiwgc2Nyb2xsTGVmdCB9ID0gdGhpcy53aGlybGlnaWdcbiAgICBjb25zdCBzbGlkZUluZGV4ID0gbm9ybWFsaXplSW5kZXgoaW5kZXgsIHRoaXMuY2hpbGRDb3VudCwgaW5maW5pdGUpXG4gICAgY29uc3Qgc3RhcnRpbmdJbmRleCA9IHRoaXMuc3RhdGUuYWN0aXZlSW5kZXhcbiAgICBjb25zdCBkZWx0YSA9IGNoaWxkcmVuW3NsaWRlSW5kZXhdLm9mZnNldExlZnQgLSBzY3JvbGxMZWZ0XG4gICAgaWYgKHN0YXJ0aW5nSW5kZXggIT09IHNsaWRlSW5kZXgpIHtcbiAgICAgIGJlZm9yZVNsaWRlKGluZGV4KVxuICAgIH1cbiAgICB0aGlzLnNldFN0YXRlKHsgaXNBbmltYXRpbmc6IHRydWUsIGFjdGl2ZUluZGV4OiBzbGlkZUluZGV4IH0pXG4gICAgcmV0dXJuIChuZXcgUHJvbWlzZSgocmVzLCBfKSA9PiB7XG4gICAgICBpZiAoaW1tZWRpYXRlKSB7XG4gICAgICAgIHRoaXMud2hpcmxpZ2lnLnNjcm9sbExlZnQgPSBjaGlsZHJlbltzbGlkZUluZGV4XS5vZmZzZXRMZWZ0XG4gICAgICAgIHJldHVybiByZXMoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxPdmVyZmxvd1ggPSBwcmV2ZW50U2Nyb2xsID8gJ2hpZGRlbicgOiAnYXV0bydcbiAgICAgICAgcmV0dXJuIHJlcyhhbmltYXRlKHRoaXMud2hpcmxpZ2lnLCB7IHByb3A6ICdzY3JvbGxMZWZ0JywgZGVsdGEsIGVhc2luZywgZHVyYXRpb24sIG9yaWdpbmFsT3ZlcmZsb3dYIH0pKVxuICAgICAgfVxuICAgIH0pKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNBbmltYXRpbmc6IGZhbHNlIH0pXG4gICAgICAgIGlmIChzdGFydGluZ0luZGV4ICE9PSBzbGlkZUluZGV4KSB7XG4gICAgICAgICAgcmV0dXJuIGFmdGVyU2xpZGUoc2xpZGVJbmRleClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoXykgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNBbmltYXRpbmc6IGZhbHNlIH0pXG4gICAgICB9KVxuICB9XG5cbiAgZ2V0TmVhcmVzdFNsaWRlSW5kZXggPSAoKSA9PiB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgc2Nyb2xsTGVmdCB9ID0gdGhpcy53aGlybGlnaWdcbiAgICBjb25zdCBvZmZzZXRzID0gW10uc2xpY2UuY2FsbChjaGlsZHJlbikubWFwKCh7IG9mZnNldExlZnQgfSkgPT4gTWF0aC5hYnMob2Zmc2V0TGVmdCAtIHNjcm9sbExlZnQpKVxuICAgIHJldHVybiBvZmZzZXRzLmluZGV4T2YoTWF0aC5taW4oLi4ub2Zmc2V0cykpXG4gIH1cblxuICBzZXRSZWYgPSAobmFtZSkgPT4gKHJlZikgPT4geyB0aGlzW25hbWVdID0gcmVmIH1cblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGFmdGVyU2xpZGUsXG4gICAgICBhbmltYXRpb25EdXJhdGlvbixcbiAgICAgIGJlZm9yZVNsaWRlLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBlYXNpbmcsXG4gICAgICBpbmZpbml0ZSxcbiAgICAgIGlubmVyUmVmLFxuICAgICAgZ3V0dGVyLFxuICAgICAgbmV4dEtleXMsXG4gICAgICBwcmV2S2V5cyxcbiAgICAgIHByZXZlbnRTY3JvbGwsXG4gICAgICBwcmV2ZW50QXV0b0NvcnJlY3QsXG4gICAgICBwcmV2ZW50U3dpcGUsXG4gICAgICBzbmFwVG9TbGlkZSxcbiAgICAgIG9uU2xpZGVDbGljayxcbiAgICAgIHNsaWRlQ2xhc3MsXG4gICAgICBzbGlkZVRvLFxuICAgICAgc2xpZGVCeSxcbiAgICAgIHN0YXJ0QXQsXG4gICAgICBzdHlsZSxcbiAgICAgIHZpc2libGVTbGlkZXMsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBwcmV2ZW50U2Nyb2xsaW5nID0gcHJldmVudFNjcm9sbCA/ICdoaWRkZW4nIDogJ2F1dG8nXG4gICAgY29uc3Qgc3R5bGVzID0ge1xuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleEZsb3c6ICdyb3cgbm93cmFwJyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICBvdmVyZmxvd1g6IHByZXZlbnRTY3JvbGxpbmcsXG4gICAgICBtc092ZXJmbG93U3R5bGU6ICctbXMtYXV0b2hpZGluZy1zY3JvbGxiYXInLCAvKiBjaHJvbWUgbGlrZSBzY3JvbGxiYXIgZXhwZXJpZW5jZSBmb3IgSUUvRWRnZSAqL1xuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsIC8qIG1ha2VzIC53aGlybGlnaWcgYW4gb2Zmc2V0IHBhcmVudCAqL1xuICAgICAgdHJhbnNpdGlvbjogJ2FsbCAuMjVzIGVhc2UtaW4tcXVpbnQnLFxuICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgV2Via2l0T3ZlcmZsb3dTY3JvbGxpbmc6ICd0b3VjaCdcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgc3R5bGU9e3sgLi4uc3R5bGUsIC4uLnN0eWxlcyB9fVxuICAgICAgICByZWY9e3RoaXMuc2V0UmVmKCd3aGlybGlnaWcnKX1cbiAgICAgICAgdGFiSW5kZXg9XCIwXCJcbiAgICAgICAgb25LZXlVcD17dGhpcy5oYW5kbGVLZXlVcH1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgPlxuICAgICAgICB7XG4gICAgICAgICAgLy8gV2UgZmlyc3QgcGFzcyB0aGUgc2xpZGUgY29udHJvbCBmdW5jdGlvbnMgdG8gdGhlIGZ1bmN0aW9uIGNoaWxkLlxuICAgICAgICAgIC8vIHRoaXMgd2lsbCByZXR1cm4gdGhlIGBjaGlsZHJlbmAgdGhhdCB3aWxsIGJlIHRoZSBjb250ZW50IG9mIHRoZSBpbmRpdmlkYXVsIHNsaWRlcy5cbiAgICAgICAgICAvLyBUaGVuIHdlIHdyYXAgdGhlIHNsaWRlIGNvbnRlbnQgaW4gYSBzbGlkZSBjb21wb25lbnQgdG8gYWRkIHRoZSBmdWNudGlvbmFsaXR5IHdlIG5lZWRcbiAgICAgICAgfVxuICAgICAgICB7Q2hpbGRyZW4ubWFwKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMubmV4dCwgdGhpcy5wcmV2KSA6IGNoaWxkcmVuLCAoY2hpbGQsIGkpID0+IChcbiAgICAgICAgICA8U2xpZGVcbiAgICAgICAgICAgIGNsYXNzTmFtZT17c2xpZGVDbGFzc31cbiAgICAgICAgICAgIGtleT17YHNsaWRlLSR7aX1gfVxuICAgICAgICAgICAgYmFzaXM9e3Zpc2libGVTbGlkZXMgPyBgY2FsYygoMTAwJSAtICgke2d1dHRlcn0gKiAke3Zpc2libGVTbGlkZXMgLSAxfSkpIC8gJHt2aXNpYmxlU2xpZGVzfSlgIDogJ2F1dG8nfVxuICAgICAgICAgICAgZ3V0dGVyPXtpID4gMCA/IGd1dHRlciA6ICcnfVxuICAgICAgICAgICAgb25DbGljaz17b25TbGlkZUNsaWNrfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjaGlsZH1cbiAgICAgICAgICA8L1NsaWRlPlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3doaXJsaWdpZy5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHN0cmluZywgbm9kZSB9IGZyb20gJ3Byb3AtdHlwZXMnXG5cbmNvbnN0IFNsaWRlID0gKHtcbiAgYmFzaXMgPSAnMTAwJScsXG4gIGd1dHRlciA9ICcxZW0nLFxuICBjbGFzc05hbWUgPSAnJyxcbiAgY2hpbGRyZW4sXG4gIC4uLnByb3BzXG59KSA9PiAoXG4gIDxkaXZcbiAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICBzdHlsZT17e1xuICAgICAgZmxleDogJzAgMCBhdXRvJyxcbiAgICAgIHdpZHRoOiBiYXNpcyxcbiAgICAgIG1hcmdpbkxlZnQ6IGd1dHRlclxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L2Rpdj5cbilcblxuU2xpZGUucHJvcFR5cGVzID0ge1xuICBiYXNpczogc3RyaW5nLFxuICBndXR0ZXI6IHN0cmluZyxcbiAgY2hpbGRyZW46IG5vZGUsXG4gIGNsYXNzTmFtZTogc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNsaWRlXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc2xpZGUuanMiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgeyBpbmNsdWRlcyB9IGZyb20gJy4vc3JjL3V0aWxzJ1xuaW1wb3J0IFcgZnJvbSAnLi9zcmMvd2hpcmxpZ2lnJ1xuaW1wb3J0IHsgYXJyYXksIGJvb2wsIG51bWJlciwgc3RyaW5nLCBmdW5jIH0gZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBtYXJrZWQgZnJvbSAnbWFya2VkJ1xuXG5jb25zdCBpc0NoZWNrYWJsZSA9ICh0eXBlKSA9PiBpbmNsdWRlcyh0eXBlLCBbJ2NoZWNrYm94JywgJ3JhZGlvJ10pXG5jb25zdCBjb2VyY2VUYWJsZSA9IHtcbiAgbnVtYmVyOiBOdW1iZXIsXG4gIGZ1bmM6IChmbikgPT4gRnVuY3Rpb24oZm4pKCksIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgY2hlY2tib3g6IEJvb2xlYW4sXG4gIHJhZGlvOiBCb29sZWFuXG59XG5jb25zdCBjb2VyY2VWYWx1ZVRvVHlwZSA9ICh7IHR5cGUsIHZhbHVlIH0pID0+IHtcbiAgY29uc3QgY29lcmNlciA9IHR5cGUgaW4gY29lcmNlVGFibGUgPyBjb2VyY2VUYWJsZVt0eXBlXSA6IChpZGVudCkgPT4gaWRlbnRcbiAgcmV0dXJuIGNvZXJjZXIodmFsdWUpXG59XG5cbmNsYXNzIFNsaWRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgYWZ0ZXJTbGlkZTogZnVuYyxcbiAgICBhbmltYXRpb25EdXJhdGlvbjogbnVtYmVyLFxuICAgIGJlZm9yZVNsaWRlOiBmdW5jLFxuICAgIGNoaWxkcmVuOiBhcnJheSxcbiAgICBjbGFzc05hbWU6IHN0cmluZyxcbiAgICBlYXNpbmc6IGZ1bmMsXG4gICAgZ3V0dGVyOiBzdHJpbmcsXG4gICAgaW5maW5pdGU6IGJvb2wsXG4gICAgb25TbGlkZUNsaWNrOiBmdW5jLFxuICAgIHByZXZlbnRTY3JvbGw6IGJvb2wsXG4gICAgc2xpZGVCeTogbnVtYmVyLFxuICAgIHNsaWRlQ2xhc3M6IHN0cmluZyxcbiAgICBzbGlkZVRvOiBudW1iZXIsXG4gICAgc25hcFRvU2xpZGU6IGJvb2wsXG4gICAgc3RhcnRBdDogbnVtYmVyLFxuICAgIHZpc2libGVTbGlkZXM6IG51bWJlclxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBhZnRlclNsaWRlOiAobmV3SW5kZXgpID0+IGNvbnNvbGUubG9nKGBzbGlkIHRvIGluZGV4ICR7bmV3SW5kZXh9YCksXG4gICAgYW5pbWF0aW9uRHVyYXRpb246IDMwMCxcbiAgICBiZWZvcmVTbGlkZTogKG5ld0luZGV4KSA9PiBjb25zb2xlLmxvZyhgYWJvdXQgdG8gc2xpZGUgdG8gaW5kZXggJHtuZXdJbmRleH1gKSxcbiAgICBjbGFzc05hbWU6ICd3aGlybGlnaWcnLFxuICAgIGd1dHRlcjogJzFlbScsXG4gICAgb25TbGlkZUNsaWNrOiAoKSA9PiB7IGNvbnNvbGUubG9nKCdZb3UgY2xpY2tlZCBvbiBhIHNsaWRlIScpIH0sXG4gICAgZWFzaW5nOiAodCkgPT4gdCxcbiAgICBpbmZpbml0ZTogZmFsc2UsXG4gICAgcHJldmVudFNjcm9sbDogZmFsc2UsXG4gICAgc2xpZGVDbGFzczogJ3NsaWRlQ2xhc3NOYW1lJyxcbiAgICBzbGlkZUJ5OiAwLFxuICAgIHNsaWRlVG86IDAsXG4gICAgc25hcFRvU2xpZGU6IGZhbHNlLFxuICAgIHN0YXJ0QXQ6IDAsXG4gICAgdmlzaWJsZVNsaWRlczogMFxuICB9XG5cbiAgc3RhdGUgPSB7XG4gICAgYWZ0ZXJTbGlkZTogdGhpcy5wcm9wcy5hZnRlclNsaWRlLFxuICAgIGFuaW1hdGlvbkR1cmF0aW9uOiB0aGlzLnByb3BzLmFuaW1hdGlvbkR1cmF0aW9uLFxuICAgIGJlZm9yZVNsaWRlOiB0aGlzLnByb3BzLmJlZm9yZVNsaWRlLFxuICAgIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUsXG4gICAgZWFzaW5nOiB0aGlzLnByb3BzLmVhc2luZyxcbiAgICBpbmZpbml0ZTogdGhpcy5wcm9wcy5pbmZpbml0ZSxcbiAgICBndXR0ZXI6IHRoaXMucHJvcHMuZ3V0dGVyLFxuICAgIG9uU2xpZGVDbGljazogdGhpcy5wcm9wcy5vblNsaWRlQ2xpY2ssXG4gICAgcHJldmVudFNjcm9sbDogdGhpcy5wcm9wcy5wcmV2ZW50U2Nyb2xsLFxuICAgIHNuYXBUb1NsaWRlOiB0aGlzLnByb3BzLnNuYXBUb1NsaWRlLFxuICAgIHNsaWRlQnk6IHRoaXMucHJvcHMuc2xpZGVCeSxcbiAgICBzbGlkZUNsYXNzOiB0aGlzLnByb3BzLnNsaWRlQ2xhc3MsXG4gICAgc2xpZGVUbzogdGhpcy5wcm9wcy5zbGlkZVRvLFxuICAgIHN0YXJ0QXQ6IHRoaXMucHJvcHMuc3RhcnRBdCxcbiAgICB2aXNpYmxlU2xpZGVzOiB0aGlzLnByb3BzLnZpc2libGVTbGlkZXNcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgKG5leHRQcm9wcykge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYWZ0ZXJTbGlkZTogbmV4dFByb3BzLmFmdGVyU2xpZGUsXG4gICAgICBhbmltYXRpb25EdXJhdGlvbjogbmV4dFByb3BzLmFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgYmVmb3JlU2xpZGU6IG5leHRQcm9wcy5iZWZvcmVTbGlkZSxcbiAgICAgIGNsYXNzTmFtZTogbmV4dFByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGVhc2luZzogbmV4dFByb3BzLmVhc2luZyxcbiAgICAgIGluZmluaXRlOiBuZXh0UHJvcHMuaW5maW5pdGUsXG4gICAgICBndXR0ZXI6IG5leHRQcm9wcy5ndXR0ZXIsXG4gICAgICBvblNsaWRlQ2xpY2s6IG5leHRQcm9wcy5vblNsaWRlQ2xpY2ssXG4gICAgICBwcmV2ZW50U2Nyb2xsOiBuZXh0UHJvcHMucHJldmVudFNjcm9sbCxcbiAgICAgIHNuYXBUb1NsaWRlOiBuZXh0UHJvcHMuc25hcFRvU2xpZGUsXG4gICAgICBzbGlkZUJ5OiBuZXh0UHJvcHMuc2xpZGVCeSxcbiAgICAgIHNsaWRlQ2xhc3M6IG5leHRQcm9wcy5zbGlkZUNsYXNzLFxuICAgICAgc2xpZGVUbzogbmV4dFByb3BzLnNsaWRlVG8sXG4gICAgICBzdGFydEF0OiBuZXh0UHJvcHMuc3RhcnRBdCxcbiAgICAgIHZpc2libGVTbGlkZXM6IG5leHRQcm9wcy52aXNpYmxlU2xpZGVzXG4gICAgfSlcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGVyc2lzdGVkU3RhdGUgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JlYWN0LXdoaXJsaWdpZycpXG4gICAgICBpZiAocGVyc2lzdGVkU3RhdGUpIHtcbiAgICAgICAgY29uc3Qgc3RhdGUgPSBKU09OLnBhcnNlKHBlcnNpc3RlZFN0YXRlKVxuICAgICAgICB0aGlzLnNldFN0YXRlKHN0YXRlKVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKF8pIHsgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlICgpIHtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3JlYWN0LXdoaXJsaWdpZycsIEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKVxuICB9XG5cbiAgaGFuZGxlQWZ0ZXJTbGlkZSA9IChjdXJyZW50U2xpZGUpID0+IHsgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnRTbGlkZSB9KSB9XG5cbiAgc2V0UmVmID0gKG5hbWUpID0+IChyZWYpID0+IHsgdGhpc1tuYW1lXSA9IHJlZiB9XG5cbiAgc2V0U3RhdGVGcm9tSW5wdXQgPSAocHJvcE5hbWUpID0+ICh7IHRhcmdldCB9KSA9PiB7XG4gICAgY29uc3QgeyBjaGVja2VkLCB0eXBlIH0gPSB0YXJnZXRcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIFtwcm9wTmFtZV06IGlzQ2hlY2thYmxlKHR5cGUpID8gY2hlY2tlZCA6IGNvZXJjZVZhbHVlVG9UeXBlKHRhcmdldClcbiAgICB9KVxuICB9XG5cbiAgQ29udHJvbCA9ICh7IGxhYmVsLCB0eXBlLCBuYW1lIH0pID0+IChcbiAgICA8bGFiZWwgaHRtbEZvcj17bmFtZX0gY2xhc3NOYW1lPVwib3B0aW9uXCI+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJsYWJlbFwiPntsYWJlbH08L3NwYW4+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgbmFtZT17bmFtZX1cbiAgICAgICAgaWQ9e25hbWV9XG4gICAgICAgIGNoZWNrZWQ9e2lzQ2hlY2thYmxlKHR5cGUpICYmIHRoaXMuc3RhdGVbbmFtZV19XG4gICAgICAgIHZhbHVlPXtpc0NoZWNrYWJsZSh0eXBlKSA/IG5hbWUgOiB0aGlzLnN0YXRlW25hbWVdfVxuICAgICAgICBvbkNoYW5nZT17dGhpcy5zZXRTdGF0ZUZyb21JbnB1dChuYW1lKX1cbiAgICAgIC8+XG4gICAgPC9sYWJlbD5cbiAgKVxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHtcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgYmVmb3JlU2xpZGUsXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBlYXNpbmcsXG4gICAgICBpbmZpbml0ZSxcbiAgICAgIGd1dHRlcixcbiAgICAgIG9uU2xpZGVDbGljayxcbiAgICAgIHByZXZlbnRTY3JvbGwsXG4gICAgICBzbmFwVG9TbGlkZSxcbiAgICAgIHNsaWRlQnksXG4gICAgICBzbGlkZUNsYXNzLFxuICAgICAgc2xpZGVUbyxcbiAgICAgIHN0YXJ0QXQsXG4gICAgICB2aXNpYmxlU2xpZGVzXG4gICAgfSA9IHRoaXMuc3RhdGVcbiAgICBjb25zdCBuZXh0ID0gKCkgPT4gdGhpcy53aGlybGlnaWcubmV4dCgpLmNhdGNoKCgpID0+IHt9KVxuICAgIGNvbnN0IHByZXYgPSAoKSA9PiB0aGlzLndoaXJsaWdpZy5wcmV2KCkuY2F0Y2goKCkgPT4ge30pXG4gICAgY29uc3QgYWZ0ZXIgPSAoaWR4KSA9PiB0aGlzLmhhbmRsZUFmdGVyU2xpZGUoaWR4KVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNsaWRlclwiPlxuICAgICAgICAgIDxXXG4gICAgICAgICAgICBhZnRlclNsaWRlPXthZnRlcn1cbiAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uPXthbmltYXRpb25EdXJhdGlvbn1cbiAgICAgICAgICAgIGJlZm9yZVNsaWRlPXtiZWZvcmVTbGlkZX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lfVxuICAgICAgICAgICAgZWFzaW5nPXtlYXNpbmd9XG4gICAgICAgICAgICBpbmZpbml0ZT17aW5maW5pdGV9XG4gICAgICAgICAgICBndXR0ZXI9e2d1dHRlcn1cbiAgICAgICAgICAgIG9uU2xpZGVDbGljaz17b25TbGlkZUNsaWNrfVxuICAgICAgICAgICAgcHJldmVudFNjcm9sbD17cHJldmVudFNjcm9sbH1cbiAgICAgICAgICAgIHNuYXBUb1NsaWRlPXtzbmFwVG9TbGlkZX1cbiAgICAgICAgICAgIHJlZj17dGhpcy5zZXRSZWYoJ3doaXJsaWdpZycpfVxuICAgICAgICAgICAgc2xpZGVCeT17c2xpZGVCeX1cbiAgICAgICAgICAgIHNsaWRlQ2xhc3M9e3NsaWRlQ2xhc3N9XG4gICAgICAgICAgICBzbGlkZVRvPXtzbGlkZVRvfVxuICAgICAgICAgICAgc3RhcnRBdD17c3RhcnRBdH1cbiAgICAgICAgICAgIHZpc2libGVTbGlkZXM9e3Zpc2libGVTbGlkZXN9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvVz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2xzXCI+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInByZXZCdXR0b25cIiBvbkNsaWNrPXtwcmV2fSAvPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJuZXh0QnV0dG9uXCIgb25DbGljaz17bmV4dH0gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3B0aW9uc1wiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm9wdGlvbiBjdXJyZW50U2xpZGVcIj5DdXJyZW50IHNsaWRlIGlzIHt0aGlzLnN0YXRlLmN1cnJlbnRTbGlkZX08L3NwYW4+XG4gICAgICAgICAgPHRoaXMuQ29udHJvbCBsYWJlbD1cImFmdGVyU2xpZGVcIiB0eXBlPVwiZnVuY1wiIG5hbWU9XCJhZnRlclNsaWRlXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwiYW5pbWF0aW9uRHVyYXRpb25cIiB0eXBlPVwibnVtYmVyXCIgbmFtZT1cImFuaW1hdGlvbkR1cmF0aW9uXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwiYmVmb3JlU2xpZGVcIiB0eXBlPVwiZnVuY1wiIG5hbWU9XCJiZWZvcmVTbGlkZVwiIC8+XG4gICAgICAgICAgPHRoaXMuQ29udHJvbCBsYWJlbD1cImNsYXNzTmFtZVwiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImNsYXNzTmFtZVwiIC8+XG4gICAgICAgICAgPHRoaXMuQ29udHJvbCBsYWJlbD1cImVhc2luZ1wiIHR5cGU9XCJmdW5jXCIgbmFtZT1cImVhc2luZ1wiIC8+XG4gICAgICAgICAgPHRoaXMuQ29udHJvbCBsYWJlbD1cImluZmluaXRlXCIgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImluZmluaXRlXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwiZ3V0dGVyXCIgdHlwZT1cInRleHRcIiBuYW1lPVwiZ3V0dGVyXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwib25TbGlkZUNsaWNrXCIgdHlwZT1cImZ1bmNcIiBuYW1lPVwib25TbGlkZUNsaWNrXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwicHJldmVudFNjcm9sbFwiIHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJwcmV2ZW50U2Nyb2xsXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwic25hcFRvU2xpZGVcIiB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwic25hcFRvU2xpZGVcIiAvPlxuICAgICAgICAgIDx0aGlzLkNvbnRyb2wgbGFiZWw9XCJzbGlkZUJ5XCIgdHlwZT1cIm51bWJlclwiIG5hbWU9XCJzbGlkZUJ5XCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwic2xpZGVDbGFzc1wiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInNsaWRlQ2xhc3NcIiAvPlxuICAgICAgICAgIDx0aGlzLkNvbnRyb2wgbGFiZWw9XCJzbGlkZVRvXCIgdHlwZT1cIm51bWJlclwiIG5hbWU9XCJzbGlkZVRvXCIgLz5cbiAgICAgICAgICA8dGhpcy5Db250cm9sIGxhYmVsPVwic3RhcnRBdFwiIHR5cGU9XCJudW1iZXJcIiBuYW1lPVwic3RhcnRBdFwiIC8+XG4gICAgICAgICAgPHRoaXMuQ29udHJvbCBsYWJlbD1cInZpc2libGVTbGlkZXNcIiB0eXBlPVwibnVtYmVyXCIgbmFtZT1cInZpc2libGVTbGlkZXNcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5jb25zdCBzbGlkZXMgPSBbXG4gIC4uLkFycmF5KDcpLmZpbGwoKS5tYXAoKCkgPT4gKHtcbiAgICBzcmM6ICdodHRwczovL3BsYWNlYmVhcmQuaXQnLFxuICAgIGhlaWdodDogMzAwLFxuICAgIHdpZHRoOiAzMDAsXG4gICAgam9pbmVyOiAneCdcbiAgfSkpLFxuICB7XG4gICAgdGV4dDogPGgzPlxuICAgICAge1sgJ2l0JywgJ25lZWQnLCAnbm90JywgJ29ubHknLCAnYmUnLCAnYmVhcmRzIScgXS5tYXAoKHQpID0+XG4gICAgICAgIDxzcGFuIGtleT17dH0gY2xhc3NOYW1lPVwibGluZSBhbGlnbi1yaWdodFwiPnt0fTwvc3Bhbj5cbiAgICAgICl9XG4gICAgPC9oMz5cbiAgfSwge1xuICAgIHNyYzogJ2h0dHBzOi8vZmlsbG11cnJheS5jb20nLFxuICAgIGhlaWdodDogMzAwLFxuICAgIHdpZHRoOiAzMDAsXG4gICAgam9pbmVyOiAnLydcbiAgfSwge1xuICAgIHRleHQ6IDxoMz5cbiAgICAgIHtbICdpdCcsICdjYW4nLCAnYmUnLCAnYW55dGhpbmcnLCAneW91JywgJ3dhbnQhJyBdLm1hcCgodCkgPT5cbiAgICAgICAgPHNwYW4ga2V5PXt0fSBjbGFzc05hbWU9XCJsaW5lIGFsaWduLWxlZnRcIj57dH08L3NwYW4+XG4gICAgICApfVxuICAgIDwvaDM+XG4gIH0sXG4gIHsgdGV4dDogPGgzPkZlYXR1cmluZzo8L2gzPiB9LFxuICB7IHRleHQ6IDxwPkEgbmF0aXZlIHNjcm9sbGluZyBcIndoaXJsaWdpZ1wiPC9wPiB9LFxuICB7IHRleHQ6IDxwPnNuYXAtdG8tc2xpZGUgb3B0aW9uPC9wPiB9LFxuICB7IHRleHQ6IDxwPnNldCB0aGUgbnVtYmVyIG9mIHNsaWRlIHZpc2libGUgYXQgYSB0aW1lPC9wPiB9LFxuICB7IHRleHQ6IDxwPnN0YXJ0IGF0IGFueSBzbGlkZSB5b3Ugd2FudDwvcD4gfSxcbiAgeyB0ZXh0OiA8cD5zbGlkZSBpbmRlY2llcyBhcmUgbm9ybWFsaXplZCB0byBzdGF5IHdpdGhpbiB0aGUgc2xpZGUgY291bnQgcmFuZ2U8L3A+IH1cbl1cblxuY2xhc3MgRGVtbyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRlID0geyBkb2NzOiAnJyB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50ICgpIHtcbiAgICB3aW5kb3cuZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qYW5lL3JlYWN0LXdoaXJsaWdpZy9tYXN0ZXIvUkVBRE1FLm1kJylcbiAgICAgIC50aGVuKChhKSA9PiBhLnRleHQoKSlcbiAgICAgIC50aGVuKCh0KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBkb2NzOiBtYXJrZWQodCkgfSlcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwid3JhcHBlclwiPlxuICAgICAgICA8ZGl2IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogdGhpcy5zdGF0ZS5kb2NzIH19IGNsYXNzTmFtZT1cIm1kXCIgLz5cbiAgICAgICAgPFNsaWRlcj5cbiAgICAgICAgICB7c2xpZGVzLm1hcCgoeyBzcmMsIGhlaWdodCwgd2lkdGgsIGpvaW5lciwgdGV4dCB9LCBpKSA9PiAoXG4gICAgICAgICAgICA8ZmlndXJlIGNsYXNzTmFtZT1cIm15U2xpZGVcIiBrZXk9e2Ake3NyY30tJHtpfWB9PlxuICAgICAgICAgICAgICA8ZmlnY2FwdGlvbiBjbGFzc05hbWU9XCJjYXB0aW9uXCI+U2xpZGUgaW5kZXgge2l9PC9maWdjYXB0aW9uPlxuICAgICAgICAgICAgICB7c3JjICYmIDxpbWcgYWx0PVwiUGxhY2UgWm9tYmllXCIgc3JjPXtgJHtzcmN9LyR7d2lkdGh9JHtqb2luZXJ9JHtoZWlnaHR9PyR7aX1gfSAvPn1cbiAgICAgICAgICAgICAge3RleHQgJiYgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0XCI+e3RleHR9PC9kaXY+fVxuICAgICAgICAgICAgPC9maWd1cmU+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU2xpZGVyPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbnJlbmRlcig8RGVtbyAvPiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbicpKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vZGV2LmpzIiwiLyoqXG4gKiBtYXJrZWQgLSBhIG1hcmtkb3duIHBhcnNlclxuICogQ29weXJpZ2h0IChjKSAyMDExLTIwMTQsIENocmlzdG9waGVyIEplZmZyZXkuIChNSVQgTGljZW5zZWQpXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY2hqai9tYXJrZWRcbiAqL1xuXG47KGZ1bmN0aW9uKCkge1xuXG4vKipcbiAqIEJsb2NrLUxldmVsIEdyYW1tYXJcbiAqL1xuXG52YXIgYmxvY2sgPSB7XG4gIG5ld2xpbmU6IC9eXFxuKy8sXG4gIGNvZGU6IC9eKCB7NH1bXlxcbl0rXFxuKikrLyxcbiAgZmVuY2VzOiBub29wLFxuICBocjogL14oICpbLSpfXSl7Myx9ICooPzpcXG4rfCQpLyxcbiAgaGVhZGluZzogL14gKigjezEsNn0pICooW15cXG5dKz8pICojKiAqKD86XFxuK3wkKS8sXG4gIG5wdGFibGU6IG5vb3AsXG4gIGxoZWFkaW5nOiAvXihbXlxcbl0rKVxcbiAqKD18LSl7Mix9ICooPzpcXG4rfCQpLyxcbiAgYmxvY2txdW90ZTogL14oICo+W15cXG5dKyhcXG4oPyFkZWYpW15cXG5dKykqXFxuKikrLyxcbiAgbGlzdDogL14oICopKGJ1bGwpIFtcXHNcXFNdKz8oPzpocnxkZWZ8XFxuezIsfSg/ISApKD8hXFwxYnVsbCApXFxuKnxcXHMqJCkvLFxuICBodG1sOiAvXiAqKD86Y29tbWVudCAqKD86XFxufFxccyokKXxjbG9zZWQgKig/OlxcbnsyLH18XFxzKiQpfGNsb3NpbmcgKig/OlxcbnsyLH18XFxzKiQpKS8sXG4gIGRlZjogL14gKlxcWyhbXlxcXV0rKVxcXTogKjw/KFteXFxzPl0rKT4/KD86ICtbXCIoXShbXlxcbl0rKVtcIildKT8gKig/Olxcbit8JCkvLFxuICB0YWJsZTogbm9vcCxcbiAgcGFyYWdyYXBoOiAvXigoPzpbXlxcbl0rXFxuPyg/IWhyfGhlYWRpbmd8bGhlYWRpbmd8YmxvY2txdW90ZXx0YWd8ZGVmKSkrKVxcbiovLFxuICB0ZXh0OiAvXlteXFxuXSsvXG59O1xuXG5ibG9jay5idWxsZXQgPSAvKD86WyorLV18XFxkK1xcLikvO1xuYmxvY2suaXRlbSA9IC9eKCAqKShidWxsKSBbXlxcbl0qKD86XFxuKD8hXFwxYnVsbCApW15cXG5dKikqLztcbmJsb2NrLml0ZW0gPSByZXBsYWNlKGJsb2NrLml0ZW0sICdnbScpXG4gICgvYnVsbC9nLCBibG9jay5idWxsZXQpXG4gICgpO1xuXG5ibG9jay5saXN0ID0gcmVwbGFjZShibG9jay5saXN0KVxuICAoL2J1bGwvZywgYmxvY2suYnVsbGV0KVxuICAoJ2hyJywgJ1xcXFxuKyg/PVxcXFwxPyg/OlstKl9dICopezMsfSg/OlxcXFxuK3wkKSknKVxuICAoJ2RlZicsICdcXFxcbisoPz0nICsgYmxvY2suZGVmLnNvdXJjZSArICcpJylcbiAgKCk7XG5cbmJsb2NrLmJsb2NrcXVvdGUgPSByZXBsYWNlKGJsb2NrLmJsb2NrcXVvdGUpXG4gICgnZGVmJywgYmxvY2suZGVmKVxuICAoKTtcblxuYmxvY2suX3RhZyA9ICcoPyEoPzonXG4gICsgJ2F8ZW18c3Ryb25nfHNtYWxsfHN8Y2l0ZXxxfGRmbnxhYmJyfGRhdGF8dGltZXxjb2RlJ1xuICArICd8dmFyfHNhbXB8a2JkfHN1YnxzdXB8aXxifHV8bWFya3xydWJ5fHJ0fHJwfGJkaXxiZG8nXG4gICsgJ3xzcGFufGJyfHdicnxpbnN8ZGVsfGltZylcXFxcYilcXFxcdysoPyE6L3xbXlxcXFx3XFxcXHNAXSpAKVxcXFxiJztcblxuYmxvY2suaHRtbCA9IHJlcGxhY2UoYmxvY2suaHRtbClcbiAgKCdjb21tZW50JywgLzwhLS1bXFxzXFxTXSo/LS0+LylcbiAgKCdjbG9zZWQnLCAvPCh0YWcpW1xcc1xcU10rPzxcXC9cXDE+LylcbiAgKCdjbG9zaW5nJywgLzx0YWcoPzpcIlteXCJdKlwifCdbXiddKid8W14nXCI+XSkqPz4vKVxuICAoL3RhZy9nLCBibG9jay5fdGFnKVxuICAoKTtcblxuYmxvY2sucGFyYWdyYXBoID0gcmVwbGFjZShibG9jay5wYXJhZ3JhcGgpXG4gICgnaHInLCBibG9jay5ocilcbiAgKCdoZWFkaW5nJywgYmxvY2suaGVhZGluZylcbiAgKCdsaGVhZGluZycsIGJsb2NrLmxoZWFkaW5nKVxuICAoJ2Jsb2NrcXVvdGUnLCBibG9jay5ibG9ja3F1b3RlKVxuICAoJ3RhZycsICc8JyArIGJsb2NrLl90YWcpXG4gICgnZGVmJywgYmxvY2suZGVmKVxuICAoKTtcblxuLyoqXG4gKiBOb3JtYWwgQmxvY2sgR3JhbW1hclxuICovXG5cbmJsb2NrLm5vcm1hbCA9IG1lcmdlKHt9LCBibG9jayk7XG5cbi8qKlxuICogR0ZNIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay5nZm0gPSBtZXJnZSh7fSwgYmxvY2subm9ybWFsLCB7XG4gIGZlbmNlczogL14gKihgezMsfXx+ezMsfSlbIFxcLl0qKFxcUyspPyAqXFxuKFtcXHNcXFNdKj8pXFxzKlxcMSAqKD86XFxuK3wkKS8sXG4gIHBhcmFncmFwaDogL14vLFxuICBoZWFkaW5nOiAvXiAqKCN7MSw2fSkgKyhbXlxcbl0rPykgKiMqICooPzpcXG4rfCQpL1xufSk7XG5cbmJsb2NrLmdmbS5wYXJhZ3JhcGggPSByZXBsYWNlKGJsb2NrLnBhcmFncmFwaClcbiAgKCcoPyEnLCAnKD8hJ1xuICAgICsgYmxvY2suZ2ZtLmZlbmNlcy5zb3VyY2UucmVwbGFjZSgnXFxcXDEnLCAnXFxcXDInKSArICd8J1xuICAgICsgYmxvY2subGlzdC5zb3VyY2UucmVwbGFjZSgnXFxcXDEnLCAnXFxcXDMnKSArICd8JylcbiAgKCk7XG5cbi8qKlxuICogR0ZNICsgVGFibGVzIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay50YWJsZXMgPSBtZXJnZSh7fSwgYmxvY2suZ2ZtLCB7XG4gIG5wdGFibGU6IC9eICooXFxTLipcXHwuKilcXG4gKihbLTpdKyAqXFx8Wy18IDpdKilcXG4oKD86LipcXHwuKig/OlxcbnwkKSkqKVxcbiovLFxuICB0YWJsZTogL14gKlxcfCguKylcXG4gKlxcfCggKlstOl0rWy18IDpdKilcXG4oKD86ICpcXHwuKig/OlxcbnwkKSkqKVxcbiovXG59KTtcblxuLyoqXG4gKiBCbG9jayBMZXhlclxuICovXG5cbmZ1bmN0aW9uIExleGVyKG9wdGlvbnMpIHtcbiAgdGhpcy50b2tlbnMgPSBbXTtcbiAgdGhpcy50b2tlbnMubGlua3MgPSB7fTtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMucnVsZXMgPSBibG9jay5ub3JtYWw7XG5cbiAgaWYgKHRoaXMub3B0aW9ucy5nZm0pIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnRhYmxlcykge1xuICAgICAgdGhpcy5ydWxlcyA9IGJsb2NrLnRhYmxlcztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ydWxlcyA9IGJsb2NrLmdmbTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBFeHBvc2UgQmxvY2sgUnVsZXNcbiAqL1xuXG5MZXhlci5ydWxlcyA9IGJsb2NrO1xuXG4vKipcbiAqIFN0YXRpYyBMZXggTWV0aG9kXG4gKi9cblxuTGV4ZXIubGV4ID0gZnVuY3Rpb24oc3JjLCBvcHRpb25zKSB7XG4gIHZhciBsZXhlciA9IG5ldyBMZXhlcihvcHRpb25zKTtcbiAgcmV0dXJuIGxleGVyLmxleChzcmMpO1xufTtcblxuLyoqXG4gKiBQcmVwcm9jZXNzaW5nXG4gKi9cblxuTGV4ZXIucHJvdG90eXBlLmxleCA9IGZ1bmN0aW9uKHNyYykge1xuICBzcmMgPSBzcmNcbiAgICAucmVwbGFjZSgvXFxyXFxufFxcci9nLCAnXFxuJylcbiAgICAucmVwbGFjZSgvXFx0L2csICcgICAgJylcbiAgICAucmVwbGFjZSgvXFx1MDBhMC9nLCAnICcpXG4gICAgLnJlcGxhY2UoL1xcdTI0MjQvZywgJ1xcbicpO1xuXG4gIHJldHVybiB0aGlzLnRva2VuKHNyYywgdHJ1ZSk7XG59O1xuXG4vKipcbiAqIExleGluZ1xuICovXG5cbkxleGVyLnByb3RvdHlwZS50b2tlbiA9IGZ1bmN0aW9uKHNyYywgdG9wLCBicSkge1xuICB2YXIgc3JjID0gc3JjLnJlcGxhY2UoL14gKyQvZ20sICcnKVxuICAgICwgbmV4dFxuICAgICwgbG9vc2VcbiAgICAsIGNhcFxuICAgICwgYnVsbFxuICAgICwgYlxuICAgICwgaXRlbVxuICAgICwgc3BhY2VcbiAgICAsIGlcbiAgICAsIGw7XG5cbiAgd2hpbGUgKHNyYykge1xuICAgIC8vIG5ld2xpbmVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5uZXdsaW5lLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMF0ubGVuZ3RoID4gMSkge1xuICAgICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnc3BhY2UnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvZGVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5jb2RlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGNhcCA9IGNhcFswXS5yZXBsYWNlKC9eIHs0fS9nbSwgJycpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdjb2RlJyxcbiAgICAgICAgdGV4dDogIXRoaXMub3B0aW9ucy5wZWRhbnRpY1xuICAgICAgICAgID8gY2FwLnJlcGxhY2UoL1xcbiskLywgJycpXG4gICAgICAgICAgOiBjYXBcbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gZmVuY2VzIChnZm0pXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZmVuY2VzLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnY29kZScsXG4gICAgICAgIGxhbmc6IGNhcFsyXSxcbiAgICAgICAgdGV4dDogY2FwWzNdIHx8ICcnXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGhlYWRpbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5oZWFkaW5nLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaGVhZGluZycsXG4gICAgICAgIGRlcHRoOiBjYXBbMV0ubGVuZ3RoLFxuICAgICAgICB0ZXh0OiBjYXBbMl1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFibGUgbm8gbGVhZGluZyBwaXBlIChnZm0pXG4gICAgaWYgKHRvcCAmJiAoY2FwID0gdGhpcy5ydWxlcy5ucHRhYmxlLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG5cbiAgICAgIGl0ZW0gPSB7XG4gICAgICAgIHR5cGU6ICd0YWJsZScsXG4gICAgICAgIGhlYWRlcjogY2FwWzFdLnJlcGxhY2UoL14gKnwgKlxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgYWxpZ246IGNhcFsyXS5yZXBsYWNlKC9eICp8XFx8ICokL2csICcnKS5zcGxpdCgvICpcXHwgKi8pLFxuICAgICAgICBjZWxsczogY2FwWzNdLnJlcGxhY2UoL1xcbiQvLCAnJykuc3BsaXQoJ1xcbicpXG4gICAgICB9O1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5hbGlnbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoL14gKi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAncmlnaHQnO1xuICAgICAgICB9IGVsc2UgaWYgKC9eICo6LSs6ICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdjZW50ZXInO1xuICAgICAgICB9IGVsc2UgaWYgKC9eICo6LSsgKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ2xlZnQnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtLmNlbGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGl0ZW0uY2VsbHNbaV0gPSBpdGVtLmNlbGxzW2ldLnNwbGl0KC8gKlxcfCAqLyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goaXRlbSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxoZWFkaW5nXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMubGhlYWRpbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdoZWFkaW5nJyxcbiAgICAgICAgZGVwdGg6IGNhcFsyXSA9PT0gJz0nID8gMSA6IDIsXG4gICAgICAgIHRleHQ6IGNhcFsxXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBoclxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmhyLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaHInXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGJsb2NrcXVvdGVcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5ibG9ja3F1b3RlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcblxuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdibG9ja3F1b3RlX3N0YXJ0J1xuICAgICAgfSk7XG5cbiAgICAgIGNhcCA9IGNhcFswXS5yZXBsYWNlKC9eICo+ID8vZ20sICcnKTtcblxuICAgICAgLy8gUGFzcyBgdG9wYCB0byBrZWVwIHRoZSBjdXJyZW50XG4gICAgICAvLyBcInRvcGxldmVsXCIgc3RhdGUuIFRoaXMgaXMgZXhhY3RseVxuICAgICAgLy8gaG93IG1hcmtkb3duLnBsIHdvcmtzLlxuICAgICAgdGhpcy50b2tlbihjYXAsIHRvcCwgdHJ1ZSk7XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnYmxvY2txdW90ZV9lbmQnXG4gICAgICB9KTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gbGlzdFxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmxpc3QuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgYnVsbCA9IGNhcFsyXTtcblxuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdsaXN0X3N0YXJ0JyxcbiAgICAgICAgb3JkZXJlZDogYnVsbC5sZW5ndGggPiAxXG4gICAgICB9KTtcblxuICAgICAgLy8gR2V0IGVhY2ggdG9wLWxldmVsIGl0ZW0uXG4gICAgICBjYXAgPSBjYXBbMF0ubWF0Y2godGhpcy5ydWxlcy5pdGVtKTtcblxuICAgICAgbmV4dCA9IGZhbHNlO1xuICAgICAgbCA9IGNhcC5sZW5ndGg7XG4gICAgICBpID0gMDtcblxuICAgICAgZm9yICg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaXRlbSA9IGNhcFtpXTtcblxuICAgICAgICAvLyBSZW1vdmUgdGhlIGxpc3QgaXRlbSdzIGJ1bGxldFxuICAgICAgICAvLyBzbyBpdCBpcyBzZWVuIGFzIHRoZSBuZXh0IHRva2VuLlxuICAgICAgICBzcGFjZSA9IGl0ZW0ubGVuZ3RoO1xuICAgICAgICBpdGVtID0gaXRlbS5yZXBsYWNlKC9eICooWyorLV18XFxkK1xcLikgKy8sICcnKTtcblxuICAgICAgICAvLyBPdXRkZW50IHdoYXRldmVyIHRoZVxuICAgICAgICAvLyBsaXN0IGl0ZW0gY29udGFpbnMuIEhhY2t5LlxuICAgICAgICBpZiAofml0ZW0uaW5kZXhPZignXFxuICcpKSB7XG4gICAgICAgICAgc3BhY2UgLT0gaXRlbS5sZW5ndGg7XG4gICAgICAgICAgaXRlbSA9ICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgICAgID8gaXRlbS5yZXBsYWNlKG5ldyBSZWdFeHAoJ14gezEsJyArIHNwYWNlICsgJ30nLCAnZ20nKSwgJycpXG4gICAgICAgICAgICA6IGl0ZW0ucmVwbGFjZSgvXiB7MSw0fS9nbSwgJycpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgdGhlIG5leHQgbGlzdCBpdGVtIGJlbG9uZ3MgaGVyZS5cbiAgICAgICAgLy8gQmFja3BlZGFsIGlmIGl0IGRvZXMgbm90IGJlbG9uZyBpbiB0aGlzIGxpc3QuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc21hcnRMaXN0cyAmJiBpICE9PSBsIC0gMSkge1xuICAgICAgICAgIGIgPSBibG9jay5idWxsZXQuZXhlYyhjYXBbaSArIDFdKVswXTtcbiAgICAgICAgICBpZiAoYnVsbCAhPT0gYiAmJiAhKGJ1bGwubGVuZ3RoID4gMSAmJiBiLmxlbmd0aCA+IDEpKSB7XG4gICAgICAgICAgICBzcmMgPSBjYXAuc2xpY2UoaSArIDEpLmpvaW4oJ1xcbicpICsgc3JjO1xuICAgICAgICAgICAgaSA9IGwgLSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERldGVybWluZSB3aGV0aGVyIGl0ZW0gaXMgbG9vc2Ugb3Igbm90LlxuICAgICAgICAvLyBVc2U6IC8oXnxcXG4pKD8hIClbXlxcbl0rXFxuXFxuKD8hXFxzKiQpL1xuICAgICAgICAvLyBmb3IgZGlzY291bnQgYmVoYXZpb3IuXG4gICAgICAgIGxvb3NlID0gbmV4dCB8fCAvXFxuXFxuKD8hXFxzKiQpLy50ZXN0KGl0ZW0pO1xuICAgICAgICBpZiAoaSAhPT0gbCAtIDEpIHtcbiAgICAgICAgICBuZXh0ID0gaXRlbS5jaGFyQXQoaXRlbS5sZW5ndGggLSAxKSA9PT0gJ1xcbic7XG4gICAgICAgICAgaWYgKCFsb29zZSkgbG9vc2UgPSBuZXh0O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogbG9vc2VcbiAgICAgICAgICAgID8gJ2xvb3NlX2l0ZW1fc3RhcnQnXG4gICAgICAgICAgICA6ICdsaXN0X2l0ZW1fc3RhcnQnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFJlY3Vyc2UuXG4gICAgICAgIHRoaXMudG9rZW4oaXRlbSwgZmFsc2UsIGJxKTtcblxuICAgICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnbGlzdF9pdGVtX2VuZCdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnbGlzdF9lbmQnXG4gICAgICB9KTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gaHRtbFxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmh0bWwuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICAgID8gJ3BhcmFncmFwaCdcbiAgICAgICAgICA6ICdodG1sJyxcbiAgICAgICAgcHJlOiAhdGhpcy5vcHRpb25zLnNhbml0aXplclxuICAgICAgICAgICYmIChjYXBbMV0gPT09ICdwcmUnIHx8IGNhcFsxXSA9PT0gJ3NjcmlwdCcgfHwgY2FwWzFdID09PSAnc3R5bGUnKSxcbiAgICAgICAgdGV4dDogY2FwWzBdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGRlZlxuICAgIGlmICgoIWJxICYmIHRvcCkgJiYgKGNhcCA9IHRoaXMucnVsZXMuZGVmLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5saW5rc1tjYXBbMV0udG9Mb3dlckNhc2UoKV0gPSB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRhYmxlIChnZm0pXG4gICAgaWYgKHRvcCAmJiAoY2FwID0gdGhpcy5ydWxlcy50YWJsZS5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuXG4gICAgICBpdGVtID0ge1xuICAgICAgICB0eXBlOiAndGFibGUnLFxuICAgICAgICBoZWFkZXI6IGNhcFsxXS5yZXBsYWNlKC9eICp8ICpcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGFsaWduOiBjYXBbMl0ucmVwbGFjZSgvXiAqfFxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgY2VsbHM6IGNhcFszXS5yZXBsYWNlKC8oPzogKlxcfCAqKT9cXG4kLywgJycpLnNwbGl0KCdcXG4nKVxuICAgICAgfTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uYWxpZ24ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKC9eICotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ3JpZ2h0JztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnY2VudGVyJztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdsZWZ0JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpdGVtLmNlbGxzW2ldID0gaXRlbS5jZWxsc1tpXVxuICAgICAgICAgIC5yZXBsYWNlKC9eICpcXHwgKnwgKlxcfCAqJC9nLCAnJylcbiAgICAgICAgICAuc3BsaXQoLyAqXFx8ICovKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy50b2tlbnMucHVzaChpdGVtKTtcblxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdG9wLWxldmVsIHBhcmFncmFwaFxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMucGFyYWdyYXBoLmV4ZWMoc3JjKSkpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3BhcmFncmFwaCcsXG4gICAgICAgIHRleHQ6IGNhcFsxXS5jaGFyQXQoY2FwWzFdLmxlbmd0aCAtIDEpID09PSAnXFxuJ1xuICAgICAgICAgID8gY2FwWzFdLnNsaWNlKDAsIC0xKVxuICAgICAgICAgIDogY2FwWzFdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRleHRcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy50ZXh0LmV4ZWMoc3JjKSkge1xuICAgICAgLy8gVG9wLWxldmVsIHNob3VsZCBuZXZlciByZWFjaCBoZXJlLlxuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgIHRleHQ6IGNhcFswXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoc3JjKSB7XG4gICAgICB0aHJvdyBuZXdcbiAgICAgICAgRXJyb3IoJ0luZmluaXRlIGxvb3Agb24gYnl0ZTogJyArIHNyYy5jaGFyQ29kZUF0KDApKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcy50b2tlbnM7XG59O1xuXG4vKipcbiAqIElubGluZS1MZXZlbCBHcmFtbWFyXG4gKi9cblxudmFyIGlubGluZSA9IHtcbiAgZXNjYXBlOiAvXlxcXFwoW1xcXFxgKnt9XFxbXFxdKCkjK1xcLS4hXz5dKS8sXG4gIGF1dG9saW5rOiAvXjwoW14gPl0rKEB8OlxcLylbXiA+XSspPi8sXG4gIHVybDogbm9vcCxcbiAgdGFnOiAvXjwhLS1bXFxzXFxTXSo/LS0+fF48XFwvP1xcdysoPzpcIlteXCJdKlwifCdbXiddKid8W14nXCI+XSkqPz4vLFxuICBsaW5rOiAvXiE/XFxbKGluc2lkZSlcXF1cXChocmVmXFwpLyxcbiAgcmVmbGluazogL14hP1xcWyhpbnNpZGUpXFxdXFxzKlxcWyhbXlxcXV0qKVxcXS8sXG4gIG5vbGluazogL14hP1xcWygoPzpcXFtbXlxcXV0qXFxdfFteXFxbXFxdXSkqKVxcXS8sXG4gIHN0cm9uZzogL15fXyhbXFxzXFxTXSs/KV9fKD8hXyl8XlxcKlxcKihbXFxzXFxTXSs/KVxcKlxcKig/IVxcKikvLFxuICBlbTogL15cXGJfKCg/OlteX118X18pKz8pX1xcYnxeXFwqKCg/OlxcKlxcKnxbXFxzXFxTXSkrPylcXCooPyFcXCopLyxcbiAgY29kZTogL14oYCspXFxzKihbXFxzXFxTXSo/W15gXSlcXHMqXFwxKD8hYCkvLFxuICBicjogL14gezIsfVxcbig/IVxccyokKS8sXG4gIGRlbDogbm9vcCxcbiAgdGV4dDogL15bXFxzXFxTXSs/KD89W1xcXFw8IVxcW18qYF18IHsyLH1cXG58JCkvXG59O1xuXG5pbmxpbmUuX2luc2lkZSA9IC8oPzpcXFtbXlxcXV0qXFxdfFteXFxbXFxdXXxcXF0oPz1bXlxcW10qXFxdKSkqLztcbmlubGluZS5faHJlZiA9IC9cXHMqPD8oW1xcc1xcU10qPyk+Pyg/OlxccytbJ1wiXShbXFxzXFxTXSo/KVsnXCJdKT9cXHMqLztcblxuaW5saW5lLmxpbmsgPSByZXBsYWNlKGlubGluZS5saW5rKVxuICAoJ2luc2lkZScsIGlubGluZS5faW5zaWRlKVxuICAoJ2hyZWYnLCBpbmxpbmUuX2hyZWYpXG4gICgpO1xuXG5pbmxpbmUucmVmbGluayA9IHJlcGxhY2UoaW5saW5lLnJlZmxpbmspXG4gICgnaW5zaWRlJywgaW5saW5lLl9pbnNpZGUpXG4gICgpO1xuXG4vKipcbiAqIE5vcm1hbCBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5ub3JtYWwgPSBtZXJnZSh7fSwgaW5saW5lKTtcblxuLyoqXG4gKiBQZWRhbnRpYyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5wZWRhbnRpYyA9IG1lcmdlKHt9LCBpbmxpbmUubm9ybWFsLCB7XG4gIHN0cm9uZzogL15fXyg/PVxcUykoW1xcc1xcU10qP1xcUylfXyg/IV8pfF5cXCpcXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqXFwqKD8hXFwqKS8sXG4gIGVtOiAvXl8oPz1cXFMpKFtcXHNcXFNdKj9cXFMpXyg/IV8pfF5cXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqKD8hXFwqKS9cbn0pO1xuXG4vKipcbiAqIEdGTSBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5nZm0gPSBtZXJnZSh7fSwgaW5saW5lLm5vcm1hbCwge1xuICBlc2NhcGU6IHJlcGxhY2UoaW5saW5lLmVzY2FwZSkoJ10pJywgJ358XSknKSgpLFxuICB1cmw6IC9eKGh0dHBzPzpcXC9cXC9bXlxcczxdK1tePC4sOjtcIicpXFxdXFxzXSkvLFxuICBkZWw6IC9efn4oPz1cXFMpKFtcXHNcXFNdKj9cXFMpfn4vLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS50ZXh0KVxuICAgICgnXXwnLCAnfl18JylcbiAgICAoJ3wnLCAnfGh0dHBzPzovL3wnKVxuICAgICgpXG59KTtcblxuLyoqXG4gKiBHRk0gKyBMaW5lIEJyZWFrcyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5icmVha3MgPSBtZXJnZSh7fSwgaW5saW5lLmdmbSwge1xuICBicjogcmVwbGFjZShpbmxpbmUuYnIpKCd7Mix9JywgJyonKSgpLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS5nZm0udGV4dCkoJ3syLH0nLCAnKicpKClcbn0pO1xuXG4vKipcbiAqIElubGluZSBMZXhlciAmIENvbXBpbGVyXG4gKi9cblxuZnVuY3Rpb24gSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpIHtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMubGlua3MgPSBsaW5rcztcbiAgdGhpcy5ydWxlcyA9IGlubGluZS5ub3JtYWw7XG4gIHRoaXMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgaWYgKCF0aGlzLmxpbmtzKSB7XG4gICAgdGhyb3cgbmV3XG4gICAgICBFcnJvcignVG9rZW5zIGFycmF5IHJlcXVpcmVzIGEgYGxpbmtzYCBwcm9wZXJ0eS4nKTtcbiAgfVxuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5icmVha3MpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBpbmxpbmUuYnJlYWtzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJ1bGVzID0gaW5saW5lLmdmbTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnBlZGFudGljKSB7XG4gICAgdGhpcy5ydWxlcyA9IGlubGluZS5wZWRhbnRpYztcbiAgfVxufVxuXG4vKipcbiAqIEV4cG9zZSBJbmxpbmUgUnVsZXNcbiAqL1xuXG5JbmxpbmVMZXhlci5ydWxlcyA9IGlubGluZTtcblxuLyoqXG4gKiBTdGF0aWMgTGV4aW5nL0NvbXBpbGluZyBNZXRob2RcbiAqL1xuXG5JbmxpbmVMZXhlci5vdXRwdXQgPSBmdW5jdGlvbihzcmMsIGxpbmtzLCBvcHRpb25zKSB7XG4gIHZhciBpbmxpbmUgPSBuZXcgSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpO1xuICByZXR1cm4gaW5saW5lLm91dHB1dChzcmMpO1xufTtcblxuLyoqXG4gKiBMZXhpbmcvQ29tcGlsaW5nXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uKHNyYykge1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGxpbmtcbiAgICAsIHRleHRcbiAgICAsIGhyZWZcbiAgICAsIGNhcDtcblxuICB3aGlsZSAoc3JjKSB7XG4gICAgLy8gZXNjYXBlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZXNjYXBlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSBjYXBbMV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBhdXRvbGlua1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmF1dG9saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMl0gPT09ICdAJykge1xuICAgICAgICB0ZXh0ID0gY2FwWzFdLmNoYXJBdCg2KSA9PT0gJzonXG4gICAgICAgICAgPyB0aGlzLm1hbmdsZShjYXBbMV0uc3Vic3RyaW5nKDcpKVxuICAgICAgICAgIDogdGhpcy5tYW5nbGUoY2FwWzFdKTtcbiAgICAgICAgaHJlZiA9IHRoaXMubWFuZ2xlKCdtYWlsdG86JykgKyB0ZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgICBocmVmID0gdGV4dDtcbiAgICAgIH1cbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgbnVsbCwgdGV4dCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB1cmwgKGdmbSlcbiAgICBpZiAoIXRoaXMuaW5MaW5rICYmIChjYXAgPSB0aGlzLnJ1bGVzLnVybC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgaHJlZiA9IHRleHQ7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIG51bGwsIHRleHQpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFnXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGFnLmV4ZWMoc3JjKSkge1xuICAgICAgaWYgKCF0aGlzLmluTGluayAmJiAvXjxhIC9pLnRlc3QoY2FwWzBdKSkge1xuICAgICAgICB0aGlzLmluTGluayA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaW5MaW5rICYmIC9ePFxcL2E+L2kudGVzdChjYXBbMF0pKSB7XG4gICAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXIoY2FwWzBdKVxuICAgICAgICAgIDogZXNjYXBlKGNhcFswXSlcbiAgICAgICAgOiBjYXBbMF1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpbmtcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfSk7XG4gICAgICB0aGlzLmluTGluayA9IGZhbHNlO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcmVmbGluaywgbm9saW5rXG4gICAgaWYgKChjYXAgPSB0aGlzLnJ1bGVzLnJlZmxpbmsuZXhlYyhzcmMpKVxuICAgICAgICB8fCAoY2FwID0gdGhpcy5ydWxlcy5ub2xpbmsuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGxpbmsgPSAoY2FwWzJdIHx8IGNhcFsxXSkucmVwbGFjZSgvXFxzKy9nLCAnICcpO1xuICAgICAgbGluayA9IHRoaXMubGlua3NbbGluay50b0xvd2VyQ2FzZSgpXTtcbiAgICAgIGlmICghbGluayB8fCAhbGluay5ocmVmKSB7XG4gICAgICAgIG91dCArPSBjYXBbMF0uY2hhckF0KDApO1xuICAgICAgICBzcmMgPSBjYXBbMF0uc3Vic3RyaW5nKDEpICsgc3JjO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCBsaW5rKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBzdHJvbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5zdHJvbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuc3Ryb25nKHRoaXMub3V0cHV0KGNhcFsyXSB8fCBjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGVtXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZW0uZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuZW0odGhpcy5vdXRwdXQoY2FwWzJdIHx8IGNhcFsxXSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gY29kZVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmNvZGUuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuY29kZXNwYW4oZXNjYXBlKGNhcFsyXSwgdHJ1ZSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gYnJcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5ici5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5icigpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gZGVsIChnZm0pXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZGVsLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmRlbCh0aGlzLm91dHB1dChjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRleHRcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy50ZXh0LmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLnRleHQoZXNjYXBlKHRoaXMuc21hcnR5cGFudHMoY2FwWzBdKSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKHNyYykge1xuICAgICAgdGhyb3cgbmV3XG4gICAgICAgIEVycm9yKCdJbmZpbml0ZSBsb29wIG9uIGJ5dGU6ICcgKyBzcmMuY2hhckNvZGVBdCgwKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogQ29tcGlsZSBMaW5rXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dExpbmsgPSBmdW5jdGlvbihjYXAsIGxpbmspIHtcbiAgdmFyIGhyZWYgPSBlc2NhcGUobGluay5ocmVmKVxuICAgICwgdGl0bGUgPSBsaW5rLnRpdGxlID8gZXNjYXBlKGxpbmsudGl0bGUpIDogbnVsbDtcblxuICByZXR1cm4gY2FwWzBdLmNoYXJBdCgwKSAhPT0gJyEnXG4gICAgPyB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgdGl0bGUsIHRoaXMub3V0cHV0KGNhcFsxXSkpXG4gICAgOiB0aGlzLnJlbmRlcmVyLmltYWdlKGhyZWYsIHRpdGxlLCBlc2NhcGUoY2FwWzFdKSk7XG59O1xuXG4vKipcbiAqIFNtYXJ0eXBhbnRzIFRyYW5zZm9ybWF0aW9uc1xuICovXG5cbklubGluZUxleGVyLnByb3RvdHlwZS5zbWFydHlwYW50cyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgaWYgKCF0aGlzLm9wdGlvbnMuc21hcnR5cGFudHMpIHJldHVybiB0ZXh0O1xuICByZXR1cm4gdGV4dFxuICAgIC8vIGVtLWRhc2hlc1xuICAgIC5yZXBsYWNlKC8tLS0vZywgJ1xcdTIwMTQnKVxuICAgIC8vIGVuLWRhc2hlc1xuICAgIC5yZXBsYWNlKC8tLS9nLCAnXFx1MjAxMycpXG4gICAgLy8gb3BlbmluZyBzaW5nbGVzXG4gICAgLnJlcGxhY2UoLyhefFstXFx1MjAxNC8oXFxbe1wiXFxzXSknL2csICckMVxcdTIwMTgnKVxuICAgIC8vIGNsb3Npbmcgc2luZ2xlcyAmIGFwb3N0cm9waGVzXG4gICAgLnJlcGxhY2UoLycvZywgJ1xcdTIwMTknKVxuICAgIC8vIG9wZW5pbmcgZG91Ymxlc1xuICAgIC5yZXBsYWNlKC8oXnxbLVxcdTIwMTQvKFxcW3tcXHUyMDE4XFxzXSlcIi9nLCAnJDFcXHUyMDFjJylcbiAgICAvLyBjbG9zaW5nIGRvdWJsZXNcbiAgICAucmVwbGFjZSgvXCIvZywgJ1xcdTIwMWQnKVxuICAgIC8vIGVsbGlwc2VzXG4gICAgLnJlcGxhY2UoL1xcLnszfS9nLCAnXFx1MjAyNicpO1xufTtcblxuLyoqXG4gKiBNYW5nbGUgTGlua3NcbiAqL1xuXG5JbmxpbmVMZXhlci5wcm90b3R5cGUubWFuZ2xlID0gZnVuY3Rpb24odGV4dCkge1xuICBpZiAoIXRoaXMub3B0aW9ucy5tYW5nbGUpIHJldHVybiB0ZXh0O1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGwgPSB0ZXh0Lmxlbmd0aFxuICAgICwgaSA9IDBcbiAgICAsIGNoO1xuXG4gIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgY2ggPSB0ZXh0LmNoYXJDb2RlQXQoaSk7XG4gICAgaWYgKE1hdGgucmFuZG9tKCkgPiAwLjUpIHtcbiAgICAgIGNoID0gJ3gnICsgY2gudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICBvdXQgKz0gJyYjJyArIGNoICsgJzsnO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogUmVuZGVyZXJcbiAqL1xuXG5mdW5jdGlvbiBSZW5kZXJlcihvcHRpb25zKSB7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG59XG5cblJlbmRlcmVyLnByb3RvdHlwZS5jb2RlID0gZnVuY3Rpb24oY29kZSwgbGFuZywgZXNjYXBlZCkge1xuICBpZiAodGhpcy5vcHRpb25zLmhpZ2hsaWdodCkge1xuICAgIHZhciBvdXQgPSB0aGlzLm9wdGlvbnMuaGlnaGxpZ2h0KGNvZGUsIGxhbmcpO1xuICAgIGlmIChvdXQgIT0gbnVsbCAmJiBvdXQgIT09IGNvZGUpIHtcbiAgICAgIGVzY2FwZWQgPSB0cnVlO1xuICAgICAgY29kZSA9IG91dDtcbiAgICB9XG4gIH1cblxuICBpZiAoIWxhbmcpIHtcbiAgICByZXR1cm4gJzxwcmU+PGNvZGU+J1xuICAgICAgKyAoZXNjYXBlZCA/IGNvZGUgOiBlc2NhcGUoY29kZSwgdHJ1ZSkpXG4gICAgICArICdcXG48L2NvZGU+PC9wcmU+JztcbiAgfVxuXG4gIHJldHVybiAnPHByZT48Y29kZSBjbGFzcz1cIidcbiAgICArIHRoaXMub3B0aW9ucy5sYW5nUHJlZml4XG4gICAgKyBlc2NhcGUobGFuZywgdHJ1ZSlcbiAgICArICdcIj4nXG4gICAgKyAoZXNjYXBlZCA/IGNvZGUgOiBlc2NhcGUoY29kZSwgdHJ1ZSkpXG4gICAgKyAnXFxuPC9jb2RlPjwvcHJlPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuYmxvY2txdW90ZSA9IGZ1bmN0aW9uKHF1b3RlKSB7XG4gIHJldHVybiAnPGJsb2NrcXVvdGU+XFxuJyArIHF1b3RlICsgJzwvYmxvY2txdW90ZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmh0bWwgPSBmdW5jdGlvbihodG1sKSB7XG4gIHJldHVybiBodG1sO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmhlYWRpbmcgPSBmdW5jdGlvbih0ZXh0LCBsZXZlbCwgcmF3KSB7XG4gIHJldHVybiAnPGgnXG4gICAgKyBsZXZlbFxuICAgICsgJyBpZD1cIidcbiAgICArIHRoaXMub3B0aW9ucy5oZWFkZXJQcmVmaXhcbiAgICArIHJhdy50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1teXFx3XSsvZywgJy0nKVxuICAgICsgJ1wiPidcbiAgICArIHRleHRcbiAgICArICc8L2gnXG4gICAgKyBsZXZlbFxuICAgICsgJz5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmhyID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9wdGlvbnMueGh0bWwgPyAnPGhyLz5cXG4nIDogJzxocj5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmxpc3QgPSBmdW5jdGlvbihib2R5LCBvcmRlcmVkKSB7XG4gIHZhciB0eXBlID0gb3JkZXJlZCA/ICdvbCcgOiAndWwnO1xuICByZXR1cm4gJzwnICsgdHlwZSArICc+XFxuJyArIGJvZHkgKyAnPC8nICsgdHlwZSArICc+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5saXN0aXRlbSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8bGk+JyArIHRleHQgKyAnPC9saT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnBhcmFncmFwaCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8cD4nICsgdGV4dCArICc8L3A+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50YWJsZSA9IGZ1bmN0aW9uKGhlYWRlciwgYm9keSkge1xuICByZXR1cm4gJzx0YWJsZT5cXG4nXG4gICAgKyAnPHRoZWFkPlxcbidcbiAgICArIGhlYWRlclxuICAgICsgJzwvdGhlYWQ+XFxuJ1xuICAgICsgJzx0Ym9keT5cXG4nXG4gICAgKyBib2R5XG4gICAgKyAnPC90Ym9keT5cXG4nXG4gICAgKyAnPC90YWJsZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRhYmxlcm93ID0gZnVuY3Rpb24oY29udGVudCkge1xuICByZXR1cm4gJzx0cj5cXG4nICsgY29udGVudCArICc8L3RyPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUudGFibGVjZWxsID0gZnVuY3Rpb24oY29udGVudCwgZmxhZ3MpIHtcbiAgdmFyIHR5cGUgPSBmbGFncy5oZWFkZXIgPyAndGgnIDogJ3RkJztcbiAgdmFyIHRhZyA9IGZsYWdzLmFsaWduXG4gICAgPyAnPCcgKyB0eXBlICsgJyBzdHlsZT1cInRleHQtYWxpZ246JyArIGZsYWdzLmFsaWduICsgJ1wiPidcbiAgICA6ICc8JyArIHR5cGUgKyAnPic7XG4gIHJldHVybiB0YWcgKyBjb250ZW50ICsgJzwvJyArIHR5cGUgKyAnPlxcbic7XG59O1xuXG4vLyBzcGFuIGxldmVsIHJlbmRlcmVyXG5SZW5kZXJlci5wcm90b3R5cGUuc3Ryb25nID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gJzxzdHJvbmc+JyArIHRleHQgKyAnPC9zdHJvbmc+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5lbSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8ZW0+JyArIHRleHQgKyAnPC9lbT4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmNvZGVzcGFuID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gJzxjb2RlPicgKyB0ZXh0ICsgJzwvY29kZT4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmJyID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9wdGlvbnMueGh0bWwgPyAnPGJyLz4nIDogJzxicj4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmRlbCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8ZGVsPicgKyB0ZXh0ICsgJzwvZGVsPic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUubGluayA9IGZ1bmN0aW9uKGhyZWYsIHRpdGxlLCB0ZXh0KSB7XG4gIGlmICh0aGlzLm9wdGlvbnMuc2FuaXRpemUpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIHByb3QgPSBkZWNvZGVVUklDb21wb25lbnQodW5lc2NhcGUoaHJlZikpXG4gICAgICAgIC5yZXBsYWNlKC9bXlxcdzpdL2csICcnKVxuICAgICAgICAudG9Mb3dlckNhc2UoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGlmIChwcm90LmluZGV4T2YoJ2phdmFzY3JpcHQ6JykgPT09IDAgfHwgcHJvdC5pbmRleE9mKCd2YnNjcmlwdDonKSA9PT0gMCkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfVxuICB2YXIgb3V0ID0gJzxhIGhyZWY9XCInICsgaHJlZiArICdcIic7XG4gIGlmICh0aXRsZSkge1xuICAgIG91dCArPSAnIHRpdGxlPVwiJyArIHRpdGxlICsgJ1wiJztcbiAgfVxuICBvdXQgKz0gJz4nICsgdGV4dCArICc8L2E+JztcbiAgcmV0dXJuIG91dDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5pbWFnZSA9IGZ1bmN0aW9uKGhyZWYsIHRpdGxlLCB0ZXh0KSB7XG4gIHZhciBvdXQgPSAnPGltZyBzcmM9XCInICsgaHJlZiArICdcIiBhbHQ9XCInICsgdGV4dCArICdcIic7XG4gIGlmICh0aXRsZSkge1xuICAgIG91dCArPSAnIHRpdGxlPVwiJyArIHRpdGxlICsgJ1wiJztcbiAgfVxuICBvdXQgKz0gdGhpcy5vcHRpb25zLnhodG1sID8gJy8+JyA6ICc+JztcbiAgcmV0dXJuIG91dDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24odGV4dCkge1xuICByZXR1cm4gdGV4dDtcbn07XG5cbi8qKlxuICogUGFyc2luZyAmIENvbXBpbGluZ1xuICovXG5cbmZ1bmN0aW9uIFBhcnNlcihvcHRpb25zKSB7XG4gIHRoaXMudG9rZW5zID0gW107XG4gIHRoaXMudG9rZW4gPSBudWxsO1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IG1hcmtlZC5kZWZhdWx0cztcbiAgdGhpcy5vcHRpb25zLnJlbmRlcmVyID0gdGhpcy5vcHRpb25zLnJlbmRlcmVyIHx8IG5ldyBSZW5kZXJlcjtcbiAgdGhpcy5yZW5kZXJlciA9IHRoaXMub3B0aW9ucy5yZW5kZXJlcjtcbiAgdGhpcy5yZW5kZXJlci5vcHRpb25zID0gdGhpcy5vcHRpb25zO1xufVxuXG4vKipcbiAqIFN0YXRpYyBQYXJzZSBNZXRob2RcbiAqL1xuXG5QYXJzZXIucGFyc2UgPSBmdW5jdGlvbihzcmMsIG9wdGlvbnMsIHJlbmRlcmVyKSB7XG4gIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMsIHJlbmRlcmVyKTtcbiAgcmV0dXJuIHBhcnNlci5wYXJzZShzcmMpO1xufTtcblxuLyoqXG4gKiBQYXJzZSBMb29wXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uKHNyYykge1xuICB0aGlzLmlubGluZSA9IG5ldyBJbmxpbmVMZXhlcihzcmMubGlua3MsIHRoaXMub3B0aW9ucywgdGhpcy5yZW5kZXJlcik7XG4gIHRoaXMudG9rZW5zID0gc3JjLnJldmVyc2UoKTtcblxuICB2YXIgb3V0ID0gJyc7XG4gIHdoaWxlICh0aGlzLm5leHQoKSkge1xuICAgIG91dCArPSB0aGlzLnRvaygpO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cbi8qKlxuICogTmV4dCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy50b2tlbiA9IHRoaXMudG9rZW5zLnBvcCgpO1xufTtcblxuLyoqXG4gKiBQcmV2aWV3IE5leHQgVG9rZW5cbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBlZWsgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMudG9rZW5zW3RoaXMudG9rZW5zLmxlbmd0aCAtIDFdIHx8IDA7XG59O1xuXG4vKipcbiAqIFBhcnNlIFRleHQgVG9rZW5zXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5wYXJzZVRleHQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGJvZHkgPSB0aGlzLnRva2VuLnRleHQ7XG5cbiAgd2hpbGUgKHRoaXMucGVlaygpLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgIGJvZHkgKz0gJ1xcbicgKyB0aGlzLm5leHQoKS50ZXh0O1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuaW5saW5lLm91dHB1dChib2R5KTtcbn07XG5cbi8qKlxuICogUGFyc2UgQ3VycmVudCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUudG9rID0gZnVuY3Rpb24oKSB7XG4gIHN3aXRjaCAodGhpcy50b2tlbi50eXBlKSB7XG4gICAgY2FzZSAnc3BhY2UnOiB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGNhc2UgJ2hyJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuaHIoKTtcbiAgICB9XG4gICAgY2FzZSAnaGVhZGluZyc6IHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmhlYWRpbmcoXG4gICAgICAgIHRoaXMuaW5saW5lLm91dHB1dCh0aGlzLnRva2VuLnRleHQpLFxuICAgICAgICB0aGlzLnRva2VuLmRlcHRoLFxuICAgICAgICB0aGlzLnRva2VuLnRleHQpO1xuICAgIH1cbiAgICBjYXNlICdjb2RlJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuY29kZSh0aGlzLnRva2VuLnRleHQsXG4gICAgICAgIHRoaXMudG9rZW4ubGFuZyxcbiAgICAgICAgdGhpcy50b2tlbi5lc2NhcGVkKTtcbiAgICB9XG4gICAgY2FzZSAndGFibGUnOiB7XG4gICAgICB2YXIgaGVhZGVyID0gJydcbiAgICAgICAgLCBib2R5ID0gJydcbiAgICAgICAgLCBpXG4gICAgICAgICwgcm93XG4gICAgICAgICwgY2VsbFxuICAgICAgICAsIGZsYWdzXG4gICAgICAgICwgajtcblxuICAgICAgLy8gaGVhZGVyXG4gICAgICBjZWxsID0gJyc7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy50b2tlbi5oZWFkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZmxhZ3MgPSB7IGhlYWRlcjogdHJ1ZSwgYWxpZ246IHRoaXMudG9rZW4uYWxpZ25baV0gfTtcbiAgICAgICAgY2VsbCArPSB0aGlzLnJlbmRlcmVyLnRhYmxlY2VsbChcbiAgICAgICAgICB0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi5oZWFkZXJbaV0pLFxuICAgICAgICAgIHsgaGVhZGVyOiB0cnVlLCBhbGlnbjogdGhpcy50b2tlbi5hbGlnbltpXSB9XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBoZWFkZXIgKz0gdGhpcy5yZW5kZXJlci50YWJsZXJvdyhjZWxsKTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMudG9rZW4uY2VsbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcm93ID0gdGhpcy50b2tlbi5jZWxsc1tpXTtcblxuICAgICAgICBjZWxsID0gJyc7XG4gICAgICAgIGZvciAoaiA9IDA7IGogPCByb3cubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBjZWxsICs9IHRoaXMucmVuZGVyZXIudGFibGVjZWxsKFxuICAgICAgICAgICAgdGhpcy5pbmxpbmUub3V0cHV0KHJvd1tqXSksXG4gICAgICAgICAgICB7IGhlYWRlcjogZmFsc2UsIGFsaWduOiB0aGlzLnRva2VuLmFsaWduW2pdIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgYm9keSArPSB0aGlzLnJlbmRlcmVyLnRhYmxlcm93KGNlbGwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIudGFibGUoaGVhZGVyLCBib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnYmxvY2txdW90ZV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnYmxvY2txdW90ZV9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuYmxvY2txdW90ZShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnbGlzdF9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJydcbiAgICAgICAgLCBvcmRlcmVkID0gdGhpcy50b2tlbi5vcmRlcmVkO1xuXG4gICAgICB3aGlsZSAodGhpcy5uZXh0KCkudHlwZSAhPT0gJ2xpc3RfZW5kJykge1xuICAgICAgICBib2R5ICs9IHRoaXMudG9rKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmxpc3QoYm9keSwgb3JkZXJlZCk7XG4gICAgfVxuICAgIGNhc2UgJ2xpc3RfaXRlbV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9pdGVtX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRva2VuLnR5cGUgPT09ICd0ZXh0J1xuICAgICAgICAgID8gdGhpcy5wYXJzZVRleHQoKVxuICAgICAgICAgIDogdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdGl0ZW0oYm9keSk7XG4gICAgfVxuICAgIGNhc2UgJ2xvb3NlX2l0ZW1fc3RhcnQnOiB7XG4gICAgICB2YXIgYm9keSA9ICcnO1xuXG4gICAgICB3aGlsZSAodGhpcy5uZXh0KCkudHlwZSAhPT0gJ2xpc3RfaXRlbV9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdGl0ZW0oYm9keSk7XG4gICAgfVxuICAgIGNhc2UgJ2h0bWwnOiB7XG4gICAgICB2YXIgaHRtbCA9ICF0aGlzLnRva2VuLnByZSAmJiAhdGhpcy5vcHRpb25zLnBlZGFudGljXG4gICAgICAgID8gdGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dClcbiAgICAgICAgOiB0aGlzLnRva2VuLnRleHQ7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5odG1sKGh0bWwpO1xuICAgIH1cbiAgICBjYXNlICdwYXJhZ3JhcGgnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5wYXJhZ3JhcGgodGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dCkpO1xuICAgIH1cbiAgICBjYXNlICd0ZXh0Jzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIucGFyYWdyYXBoKHRoaXMucGFyc2VUZXh0KCkpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBIZWxwZXJzXG4gKi9cblxuZnVuY3Rpb24gZXNjYXBlKGh0bWwsIGVuY29kZSkge1xuICByZXR1cm4gaHRtbFxuICAgIC5yZXBsYWNlKCFlbmNvZGUgPyAvJig/ISM/XFx3KzspL2cgOiAvJi9nLCAnJmFtcDsnKVxuICAgIC5yZXBsYWNlKC88L2csICcmbHQ7JylcbiAgICAucmVwbGFjZSgvPi9nLCAnJmd0OycpXG4gICAgLnJlcGxhY2UoL1wiL2csICcmcXVvdDsnKVxuICAgIC5yZXBsYWNlKC8nL2csICcmIzM5OycpO1xufVxuXG5mdW5jdGlvbiB1bmVzY2FwZShodG1sKSB7XG5cdC8vIGV4cGxpY2l0bHkgbWF0Y2ggZGVjaW1hbCwgaGV4LCBhbmQgbmFtZWQgSFRNTCBlbnRpdGllcyBcbiAgcmV0dXJuIGh0bWwucmVwbGFjZSgvJigjKD86XFxkKyl8KD86I3hbMC05QS1GYS1mXSspfCg/OlxcdyspKTs/L2csIGZ1bmN0aW9uKF8sIG4pIHtcbiAgICBuID0gbi50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChuID09PSAnY29sb24nKSByZXR1cm4gJzonO1xuICAgIGlmIChuLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgICByZXR1cm4gbi5jaGFyQXQoMSkgPT09ICd4J1xuICAgICAgICA/IFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobi5zdWJzdHJpbmcoMiksIDE2KSlcbiAgICAgICAgOiBTdHJpbmcuZnJvbUNoYXJDb2RlKCtuLnN1YnN0cmluZygxKSk7XG4gICAgfVxuICAgIHJldHVybiAnJztcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2UocmVnZXgsIG9wdCkge1xuICByZWdleCA9IHJlZ2V4LnNvdXJjZTtcbiAgb3B0ID0gb3B0IHx8ICcnO1xuICByZXR1cm4gZnVuY3Rpb24gc2VsZihuYW1lLCB2YWwpIHtcbiAgICBpZiAoIW5hbWUpIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4LCBvcHQpO1xuICAgIHZhbCA9IHZhbC5zb3VyY2UgfHwgdmFsO1xuICAgIHZhbCA9IHZhbC5yZXBsYWNlKC8oXnxbXlxcW10pXFxeL2csICckMScpO1xuICAgIHJlZ2V4ID0gcmVnZXgucmVwbGFjZShuYW1lLCB2YWwpO1xuICAgIHJldHVybiBzZWxmO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbm5vb3AuZXhlYyA9IG5vb3A7XG5cbmZ1bmN0aW9uIG1lcmdlKG9iaikge1xuICB2YXIgaSA9IDFcbiAgICAsIHRhcmdldFxuICAgICwga2V5O1xuXG4gIGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdGFyZ2V0ID0gYXJndW1lbnRzW2ldO1xuICAgIGZvciAoa2V5IGluIHRhcmdldCkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSB0YXJnZXRba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5cbi8qKlxuICogTWFya2VkXG4gKi9cblxuZnVuY3Rpb24gbWFya2VkKHNyYywgb3B0LCBjYWxsYmFjaykge1xuICBpZiAoY2FsbGJhY2sgfHwgdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gb3B0O1xuICAgICAgb3B0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQgfHwge30pO1xuXG4gICAgdmFyIGhpZ2hsaWdodCA9IG9wdC5oaWdobGlnaHRcbiAgICAgICwgdG9rZW5zXG4gICAgICAsIHBlbmRpbmdcbiAgICAgICwgaSA9IDA7XG5cbiAgICB0cnkge1xuICAgICAgdG9rZW5zID0gTGV4ZXIubGV4KHNyYywgb3B0KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICB9XG5cbiAgICBwZW5kaW5nID0gdG9rZW5zLmxlbmd0aDtcblxuICAgIHZhciBkb25lID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIG9wdC5oaWdobGlnaHQgPSBoaWdobGlnaHQ7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb3V0O1xuXG4gICAgICB0cnkge1xuICAgICAgICBvdXQgPSBQYXJzZXIucGFyc2UodG9rZW5zLCBvcHQpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBlcnIgPSBlO1xuICAgICAgfVxuXG4gICAgICBvcHQuaGlnaGxpZ2h0ID0gaGlnaGxpZ2h0O1xuXG4gICAgICByZXR1cm4gZXJyXG4gICAgICAgID8gY2FsbGJhY2soZXJyKVxuICAgICAgICA6IGNhbGxiYWNrKG51bGwsIG91dCk7XG4gICAgfTtcblxuICAgIGlmICghaGlnaGxpZ2h0IHx8IGhpZ2hsaWdodC5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZSBvcHQuaGlnaGxpZ2h0O1xuXG4gICAgaWYgKCFwZW5kaW5nKSByZXR1cm4gZG9uZSgpO1xuXG4gICAgZm9yICg7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIChmdW5jdGlvbih0b2tlbikge1xuICAgICAgICBpZiAodG9rZW4udHlwZSAhPT0gJ2NvZGUnKSB7XG4gICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodCh0b2tlbi50ZXh0LCB0b2tlbi5sYW5nLCBmdW5jdGlvbihlcnIsIGNvZGUpIHtcbiAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgIGlmIChjb2RlID09IG51bGwgfHwgY29kZSA9PT0gdG9rZW4udGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRva2VuLnRleHQgPSBjb2RlO1xuICAgICAgICAgIHRva2VuLmVzY2FwZWQgPSB0cnVlO1xuICAgICAgICAgIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSkodG9rZW5zW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBpZiAob3B0KSBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICAgIHJldHVybiBQYXJzZXIucGFyc2UoTGV4ZXIubGV4KHNyYywgb3B0KSwgb3B0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGUubWVzc2FnZSArPSAnXFxuUGxlYXNlIHJlcG9ydCB0aGlzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL21hcmtlZC4nO1xuICAgIGlmICgob3B0IHx8IG1hcmtlZC5kZWZhdWx0cykuc2lsZW50KSB7XG4gICAgICByZXR1cm4gJzxwPkFuIGVycm9yIG9jY3VyZWQ6PC9wPjxwcmU+J1xuICAgICAgICArIGVzY2FwZShlLm1lc3NhZ2UgKyAnJywgdHJ1ZSlcbiAgICAgICAgKyAnPC9wcmU+JztcbiAgICB9XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuXG4vKipcbiAqIE9wdGlvbnNcbiAqL1xuXG5tYXJrZWQub3B0aW9ucyA9XG5tYXJrZWQuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uKG9wdCkge1xuICBtZXJnZShtYXJrZWQuZGVmYXVsdHMsIG9wdCk7XG4gIHJldHVybiBtYXJrZWQ7XG59O1xuXG5tYXJrZWQuZGVmYXVsdHMgPSB7XG4gIGdmbTogdHJ1ZSxcbiAgdGFibGVzOiB0cnVlLFxuICBicmVha3M6IGZhbHNlLFxuICBwZWRhbnRpYzogZmFsc2UsXG4gIHNhbml0aXplOiBmYWxzZSxcbiAgc2FuaXRpemVyOiBudWxsLFxuICBtYW5nbGU6IHRydWUsXG4gIHNtYXJ0TGlzdHM6IGZhbHNlLFxuICBzaWxlbnQ6IGZhbHNlLFxuICBoaWdobGlnaHQ6IG51bGwsXG4gIGxhbmdQcmVmaXg6ICdsYW5nLScsXG4gIHNtYXJ0eXBhbnRzOiBmYWxzZSxcbiAgaGVhZGVyUHJlZml4OiAnJyxcbiAgcmVuZGVyZXI6IG5ldyBSZW5kZXJlcixcbiAgeGh0bWw6IGZhbHNlXG59O1xuXG4vKipcbiAqIEV4cG9zZVxuICovXG5cbm1hcmtlZC5QYXJzZXIgPSBQYXJzZXI7XG5tYXJrZWQucGFyc2VyID0gUGFyc2VyLnBhcnNlO1xuXG5tYXJrZWQuUmVuZGVyZXIgPSBSZW5kZXJlcjtcblxubWFya2VkLkxleGVyID0gTGV4ZXI7XG5tYXJrZWQubGV4ZXIgPSBMZXhlci5sZXg7XG5cbm1hcmtlZC5JbmxpbmVMZXhlciA9IElubGluZUxleGVyO1xubWFya2VkLmlubGluZUxleGVyID0gSW5saW5lTGV4ZXIub3V0cHV0O1xuXG5tYXJrZWQucGFyc2UgPSBtYXJrZWQ7XG5cbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBtYXJrZWQ7XG59IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICBkZWZpbmUoZnVuY3Rpb24oKSB7IHJldHVybiBtYXJrZWQ7IH0pO1xufSBlbHNlIHtcbiAgdGhpcy5tYXJrZWQgPSBtYXJrZWQ7XG59XG5cbn0pLmNhbGwoZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzIHx8ICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IGdsb2JhbCk7XG59KCkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbWFya2VkL2xpYi9tYXJrZWQuanNcbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcbn0gY2F0Y2goZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxuXHRcdGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==